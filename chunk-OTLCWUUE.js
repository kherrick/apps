import{a as o}from"./chunk-MCYXOSMX.js";import"./chunk-NYXDIFHX.js";import"./chunk-PKQDKLAP.js";import"./chunk-ATYHLBKA.js";import{Cb as e,Db as n,bc as t,fb as r}from"./chunk-PMUBQ4SH.js";import"./chunk-DAQOROHW.js";var s=class a{static \u0275fac=function(i){return new(i||a)};static \u0275cmp=r({type:a,selectors:[["x-slide-010"]],decls:12,vars:0,consts:[["header",""],["sub-header",""],["list",""],["quote",""],["href","https://web.dev/articles/rendering-on-the-web#static"]],template:function(i,d){i&1&&(e(0,"x-slide")(1,"h1",0),t(2,"Rendering on the Web"),n(),e(3,"h2",1),t(4,"Distinctions between static rendering and prerendering"),n(),e(5,"ul",2)(6,"li",3)(7,"blockquote")(8,"span"),t(9," ...static rendering and prerendering behave differently: statically rendered pages are interactive without needing to execute much client-side JavaScript, whereas prerendering improves the FCP [First Paint or First Contentful Paint] of a Single Page Application that must be booted on the client to make pages truly interactive. "),e(10,"a",4),t(11,"*"),n()()()()()())},dependencies:[o],encapsulation:3})};export{s as Slide010Component};
