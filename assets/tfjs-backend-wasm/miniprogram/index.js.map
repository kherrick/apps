{"version":3,"file":"tf-backend-wasm-miniprogram.min.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../tfjs-backend-wasm/src/kernels/types.ts","../../../../tfjs-backend-wasm/src/kernels/_FusedMatMul.ts","../../../../tfjs-backend-wasm/src/kernels/unary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Abs.ts","../../../../tfjs-backend-wasm/src/kernels/Acos.ts","../../../../tfjs-backend-wasm/src/kernels/Acosh.ts","../../../../tfjs-backend-wasm/src/kernels/binary_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/Add.ts","../../../../tfjs-backend-wasm/src/kernels/AddN.ts","../../../../tfjs-backend-wasm/src/kernels/Identity.ts","../../../../tfjs-backend-wasm/src/kernels/Transpose.ts","../../../../tfjs-backend-wasm/src/kernels/kernel_utils.ts","../../../../tfjs-backend-wasm/src/kernels/All.ts","../../../../tfjs-backend-wasm/src/kernels/Any.ts","../../../../tfjs-backend-wasm/src/kernels/argminmax_kernel.ts","../../../../tfjs-backend-wasm/src/kernels/ArgMax.ts","../../../../tfjs-backend-wasm/src/kernels/ArgMin.ts","../../../../tfjs-backend-wasm/src/kernels/Asin.ts","../../../../tfjs-backend-wasm/src/kernels/Asinh.ts","../../../../tfjs-backend-wasm/src/kernels/Atan.ts","../../../../tfjs-backend-wasm/src/kernels/Atan2.ts","../../../../tfjs-backend-wasm/src/kernels/Atanh.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPool.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPool3D.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPool3DGrad.ts","../../../../tfjs-backend-wasm/src/kernels/AvgPoolGrad.ts","../../../../tfjs-backend-wasm/src/kernels/Reshape.ts","../../../../tfjs-backend-wasm/src/kernels/BatchMatMul.ts","../../../../../tfjs-backend-cpu/src/kernels/Concat_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/RaggedTensorToTensor_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/Range_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/Slice.ts","../../../../../tfjs-backend-cpu/src/kernels/StringNGrams_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/StringSplit_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/StringToHashBucketFast_impl.ts","../../../../../tfjs-backend-cpu/src/kernels/Unique_impl.ts","../../../../tfjs-backend-wasm/src/kernels/Slice.ts","../../../../tfjs-backend-wasm/src/kernels/BatchToSpaceND.ts","../../../../tfjs-backend-wasm/src/kernels/Bincount.ts","../../../../tfjs-backend-wasm/src/kernels/BitwiseAnd.ts","../../../../tfjs-backend-wasm/src/kernels/BroadcastArgs.ts","../../../../tfjs-backend-wasm/src/kernels/Cast.ts","../../../../tfjs-backend-wasm/src/kernels/Ceil.ts","../../../../tfjs-backend-wasm/src/kernels/ClipByValue.ts","../../../../tfjs-backend-wasm/src/kernels/Concat.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2D.ts","../../../../tfjs-backend-wasm/src/kernels/Conv2DBackpropInput.ts","../../../../tfjs-backend-wasm/src/kernels/Conv3D.ts","../../../../tfjs-backend-wasm/src/kernels/Conv3DBackpropFilterV2.ts","../../../../tfjs-backend-wasm/src/kernels/Conv3DBackpropInputV2.ts","../../../../tfjs-backend-wasm/src/kernels/Cos.ts","../../../../tfjs-backend-wasm/src/kernels/Cosh.ts","../../../../tfjs-backend-wasm/src/kernels/CropAndResize.ts","../../../../tfjs-backend-wasm/src/kernels/Cumprod.ts","../../../../tfjs-backend-wasm/src/kernels/Cumsum.ts","../../../../tfjs-backend-wasm/src/kernels/DenseBincount.ts","../../../../tfjs-backend-wasm/src/kernels/DepthToSpace.ts","../../../../tfjs-backend-wasm/src/kernels/DepthwiseConv2dNative.ts","../../../../tfjs-backend-wasm/src/kernels/Diag.ts","../../../../tfjs-backend-wasm/src/kernels/Dilation2D.ts","../../../../tfjs-backend-wasm/src/kernels/Dilation2DBackpropFilter.ts","../../../../tfjs-backend-wasm/src/kernels/Dilation2DBackpropInput.ts","../../../../tfjs-backend-wasm/src/kernels/Elu.ts","../../../../tfjs-backend-wasm/src/kernels/EluGrad.ts","../../../../tfjs-backend-wasm/src/kernels/Equal.ts","../../../../tfjs-backend-wasm/src/kernels/Erf.ts","../../../../tfjs-backend-wasm/src/kernels/Exp.ts","../../../../tfjs-backend-wasm/src/kernels/ExpandDims.ts","../../../../tfjs-backend-wasm/src/kernels/Expm1.ts","../../../../tfjs-backend-wasm/src/kernels/Fill.ts","../../../../tfjs-backend-wasm/src/kernels/FlipLeftRight.ts","../../../../tfjs-backend-wasm/src/kernels/Floor.ts","../../../../tfjs-backend-wasm/src/kernels/FloorDiv.ts","../../../../tfjs-backend-wasm/src/kernels/FusedBatchNorm.ts","../../../../tfjs-backend-wasm/src/kernels/FusedConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/FusedDepthwiseConv2D.ts","../../../../tfjs-backend-wasm/src/kernels/GatherNd.ts","../../../../tfjs-backend-wasm/src/kernels/GatherV2.ts","../../../../tfjs-backend-wasm/src/kernels/Greater.ts","../../../../tfjs-backend-wasm/src/kernels/GreaterEqual.ts","../../../../tfjs-backend-wasm/src/kernels/IsFinite.ts","../../../../tfjs-backend-wasm/src/kernels/IsInf.ts","../../../../tfjs-backend-wasm/src/kernels/IsNan.ts","../../../../tfjs-backend-wasm/src/kernels/LeakyRelu.ts","../../../../tfjs-backend-wasm/src/kernels/Less.ts","../../../../tfjs-backend-wasm/src/kernels/LessEqual.ts","../../../../tfjs-backend-wasm/src/kernels/LinSpace.ts","../../../../tfjs-backend-wasm/src/kernels/Log.ts","../../../../tfjs-backend-wasm/src/kernels/Log1p.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalAnd.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalNot.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalOr.ts","../../../../tfjs-backend-wasm/src/kernels/LogicalXor.ts","../../../../tfjs-backend-wasm/src/kernels/LRN.ts","../../../../tfjs-backend-wasm/src/kernels/LRNGrad.ts","../../../../tfjs-backend-wasm/src/kernels/Max.ts","../../../../tfjs-backend-wasm/src/kernels/Maximum.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPool.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPool3D.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPool3DGrad.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPoolGrad.ts","../../../../tfjs-backend-wasm/src/kernels/MaxPoolWithArgmax.ts","../../../../tfjs-backend-wasm/src/kernels/Mean.ts","../../../../tfjs-backend-wasm/src/kernels/Min.ts","../../../../tfjs-backend-wasm/src/kernels/Minimum.ts","../../../../tfjs-backend-wasm/src/kernels/MirrorPad.ts","../../../../tfjs-backend-wasm/src/kernels/Softmax.ts","../../../../tfjs-backend-wasm/src/kernels/Multinomial.ts","../../../../tfjs-backend-wasm/src/kernels/Mod.ts","../../../../tfjs-backend-wasm/src/kernels/Multiply.ts","../../../../tfjs-backend-wasm/src/kernels/Neg.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppression_util.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV3.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV4.ts","../../../../tfjs-backend-wasm/src/kernels/NonMaxSuppressionV5.ts","../../../../tfjs-backend-wasm/src/kernels/NotEqual.ts","../../../../tfjs-backend-wasm/src/kernels/OneHot.ts","../../../../tfjs-backend-wasm/src/kernels/OnesLike.ts","../../../../tfjs-backend-wasm/src/kernels/Pack.ts","../../../../tfjs-backend-wasm/src/kernels/PadV2.ts","../../../../tfjs-backend-wasm/src/kernels/Pow.ts","../../../../tfjs-backend-wasm/src/kernels/Prelu.ts","../../../../tfjs-backend-wasm/src/kernels/Prod.ts","../../../../tfjs-backend-wasm/src/kernels/Range.ts","../../../../tfjs-backend-wasm/src/kernels/RealDiv.ts","../../../../tfjs-backend-wasm/src/kernels/Reciprocal.ts","../../../../tfjs-backend-wasm/src/kernels/Relu.ts","../../../../tfjs-backend-wasm/src/kernels/Relu6.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeBilinear.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeBilinearGrad.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighbor.ts","../../../../tfjs-backend-wasm/src/kernels/ResizeNearestNeighborGrad.ts","../../../../tfjs-backend-wasm/src/kernels/Reverse.ts","../../../../tfjs-backend-wasm/src/kernels/RotateWithOffset.ts","../../../../tfjs-backend-wasm/src/kernels/Round.ts","../../../../tfjs-backend-wasm/src/kernels/Rsqrt.ts","../../../../tfjs-backend-wasm/src/kernels/ScatterNd.ts","../../../../tfjs-backend-wasm/src/kernels/SearchSorted.ts","../../../../tfjs-backend-wasm/src/kernels/Select.ts","../../../../tfjs-backend-wasm/src/kernels/Selu.ts","../../../../tfjs-backend-wasm/src/kernels/Sigmoid.ts","../../../../tfjs-backend-wasm/src/kernels/Sign.ts","../../../../tfjs-backend-wasm/src/kernels/Sin.ts","../../../../tfjs-backend-wasm/src/kernels/Sinh.ts","../../../../tfjs-backend-wasm/src/kernels/Softplus.ts","../../../../tfjs-backend-wasm/src/kernels/SpaceToBatchND.ts","../../../../tfjs-backend-wasm/src/kernels/SparseFillEmptyRows.ts","../../../../tfjs-backend-wasm/src/kernels/SparseReshape.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentReduction.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentMean.ts","../../../../tfjs-backend-wasm/src/kernels/SparseSegmentSum.ts","../../../../tfjs-backend-wasm/src/kernels/SparseToDense.ts","../../../../tfjs-backend-wasm/src/kernels/SplitV.ts","../../../../tfjs-backend-wasm/src/kernels/Sqrt.ts","../../../../tfjs-backend-wasm/src/kernels/Square.ts","../../../../tfjs-backend-wasm/src/kernels/SquaredDifference.ts","../../../../tfjs-backend-wasm/src/kernels/Step.ts","../../../../tfjs-backend-wasm/src/kernels/StridedSlice.ts","../../../../tfjs-backend-wasm/src/kernels/StringNGrams.ts","../../../../tfjs-backend-wasm/src/kernels/StringSplit.ts","../../../../tfjs-backend-wasm/src/kernels/StringToHashBucketFast.ts","../../../../tfjs-backend-wasm/src/kernels/Sub.ts","../../../../tfjs-backend-wasm/src/kernels/Sum.ts","../../../../tfjs-backend-wasm/src/kernels/Tan.ts","../../../../tfjs-backend-wasm/src/kernels/Tanh.ts","../../../../tfjs-backend-wasm/src/kernels/TensorScatterUpdate.ts","../../../../tfjs-backend-wasm/src/kernels/Tile.ts","../../../../tfjs-backend-wasm/src/kernels/TopK.ts","../../../../tfjs-backend-wasm/src/kernels/Transform.ts","../../../../tfjs-backend-wasm/src/kernels/Unique.ts","../../../../tfjs-backend-wasm/src/kernels/Unpack.ts","../../../../tfjs-backend-wasm/src/kernels/ZerosLike.ts","../../../../tfjs-backend-wasm/src/register_all_kernels.ts","../../../../tfjs-backend-wasm/src/flags_wasm.ts","wasm-out/tfjs-backend-wasm-threaded-simd.js","wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","wasm-out/tfjs-backend-wasm.js","../../../../tfjs-backend-wasm/src/backend_wasm.ts","../../../../tfjs-backend-wasm/src/version.ts","../../../../tfjs-backend-wasm/src/base.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, broadcast_util, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const acosConfig: KernelConfig = createUnaryKernelConfig(Acos);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const acoshConfig: KernelConfig = createUnaryKernelConfig(Acosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    kernelFunc();\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc, tensor} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as unknown as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ArgMaxAttrs, ArgMaxInputs, ArgMinAttrs, ArgMinInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nexport function createArgMinMaxKernelConfig(kernelName: 'ArgMin'|\n                                            'ArgMax'): KernelConfig {\n  let wasmFunc: (\n      xId: number, dtype: number, outerSize: number, innerSize: number,\n      outId: number) => void;\n\n  function setupFunc(backend: BackendWasm) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // outer_size\n      'number',  // inner_size\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {\n    backend: BackendWasm,\n    inputs: ArgMinInputs&ArgMaxInputs,\n    attrs: ArgMinAttrs&ArgMaxAttrs,\n  }): TensorInfo {\n    const {backend, inputs, attrs} = args;\n    const {axis} = attrs;\n    const {x} = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n\n    const {transposed, axes, inputWasTransposed} =\n        permuteAxesAndTranspose(x, axis, backend);\n\n    if (inputWasTransposed) {\n      const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n      if (transposedId !== xId) {\n        // transpose was not a no-op. We will need to dispose of this\n        // once we are done.\n        input = transposed;\n        inputId = transposedId;\n      }\n    }\n\n    const outShape = input.shape.slice(0, -1);\n    const out = backend.makeOutput(outShape, 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const outerSize = util.sizeFromShape(out.shape);\n    const innerSize = input.shape[axes[0]];\n    wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n    if (inputWasTransposed) {\n      // dispose of the transposed tensor.\n      backend.disposeData(transposed.dataId);\n    }\n\n    return out;\n  }\n\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: kernelFunc as unknown as KernelFunc,\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createArgMinMaxKernelConfig} from './argminmax_kernel';\n\nexport const argMaxConfig: KernelConfig = createArgMinMaxKernelConfig(ArgMax);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMin, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createArgMinMaxKernelConfig} from './argminmax_kernel';\n\nexport const argMinConfig: KernelConfig = createArgMinMaxKernelConfig(ArgMin);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asin, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const asinConfig: KernelConfig = createUnaryKernelConfig(Asin);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asinh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const asinhConfig: KernelConfig = createUnaryKernelConfig(Asinh);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const atanConfig: KernelConfig = createUnaryKernelConfig(Atan);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan2, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nexport const atan2Config: KernelConfig =\n    createBinaryKernelConfig(Atan2, /*supportsFullBroadcast=*/false);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atanh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const atanhConfig: KernelConfig = createUnaryKernelConfig(Atanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3D, AvgPool3DAttrs, AvgPool3DInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool3D: (\n    xId: number, outId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool3D = backend.wasm.cwrap('AvgPool3D', null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function avgPool3D(args: {\n  inputs: AvgPool3DInputs,\n  attrs: AvgPool3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n\n  wasmAvgPool3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const avgPool3DConfig: KernelConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3D as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3DGrad, AvgPool3DGradAttrs, AvgPool3DGradInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool3DGrad: (\n    dyId: number, dxId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number, filterDepth: number,\n    filterHeight: number, filterWidth: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool3DGrad = backend.wasm.cwrap('AvgPool3DGrad', null, [\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n  ]);\n}\n\nexport function avgPool3DGrad(args: {\n  inputs: AvgPool3DGradInputs,\n  attrs: AvgPool3DGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmAvgPool3DGrad(\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n  );\n  return dx;\n}\n\nexport const avgPool3DGradConfig: KernelConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3DGrad as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPoolGrad, AvgPoolGradAttrs, AvgPoolGradInputs, backend_util, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPoolGrad: (\n    dyId: number, dxId: number, batchSize: number, channelSize: number,\n    inHeight: number, inWidth: number, outHeight: number, outWidth: number,\n    strideHeight: number, strideWidth: number, dilationHeight: number,\n    dilationWidth: number, effectiveFilterHeight: number,\n    effectiveFilterWidth: number, padTop: number, padLeft: number,\n    filterHeight: number, filterWidth: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPoolGrad = backend.wasm.cwrap('AvgPoolGrad', null, [\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padTop\n    'number',  // padLeft\n    'number',  // filterHeight\n    'number',  // filterWidth\n  ]);\n}\n\nexport function avgPoolGrad(args: {\n  inputs: AvgPoolGradInputs,\n  attrs: AvgPoolGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      input.shape as [number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmAvgPoolGrad(\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool ops (AvgPool and MaxPool) support 2D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n  );\n  return dx;\n}\n\nexport const avgPoolGradConfig: KernelConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPoolGrad as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, broadcast_util, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function concatImpl(\n    inputs: Array<{vals: BackendValues, shape: number[]}>, outShape: number[],\n    dtype: DataType, simplyConcat: boolean): TypedArray|string[] {\n  const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  if (simplyConcat && dtype !== 'string') {\n    // Use built-in TypedArray.set() method for speed.\n    let offset = 0;\n    inputs.forEach(input => {\n      const size = util.sizeFromShape(input.shape);\n\n      (outVals as TypedArray).set(input.vals as TypedArray, offset);\n      offset += size;\n    });\n  } else {\n    let colOffset = 0;\n\n    inputs.forEach(input => {\n      const decodedData = dtype === 'string' ?\n          backend_util.fromUint8ToStringArray(input.vals as Uint8Array[]) :\n          input.vals as TypedArray;\n\n      let tIdx = 0;\n\n      for (let row = 0; row < input.shape[0]; ++row) {\n        const resIdx = row * outShape[1] + colOffset;\n        for (let col = 0; col < input.shape[1]; ++col) {\n          outVals[resIdx + col] = decodedData[tIdx++];\n        }\n      }\n\n      colOffset += input.shape[1];\n    });\n  }\n\n  return outVals;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, broadcastTo, DataType, reshape, tidy, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport RowPartitionType = backend_util.RowPartitionType;\n// Based on\n// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc\nclass RaggedTensorToTensorOp {\n  private readonly rowPartitionTypes: RowPartitionType[];\n  private readonly raggedRank: number;\n  constructor(\n      private shape: TypedArray, private shapeShape: number[],\n      private values: TypedArray, private valuesShape: number[],\n      private valuesDType: DataType, private defaultValue: TypedArray,\n      private defaultValueShape: number[],\n      private readonly rowPartitionValues: TypedArray[],\n      private readonly rowPartitionValuesShapes: number[][],\n      rowPartitionTypeStrings: string[]) {\n    this.rowPartitionTypes =\n        backend_util.getRowPartitionTypesHelper(rowPartitionTypeStrings);\n    this.raggedRank = backend_util.getRaggedRank(this.rowPartitionTypes);\n  }\n\n  private getRowPartitionTypeByDimension(dimension: number) {\n    if (this.rowPartitionTypes[0] === RowPartitionType.FIRST_DIM_SIZE) {\n      return this.rowPartitionTypes[dimension + 1];\n    } else {\n      return this.rowPartitionTypes[dimension];\n    }\n  }\n\n  // Returns the relationship between dimension and dimension + 1.\n  private getRowPartitionTensor(dimension: number) {\n    if (this.rowPartitionTypes[0] === RowPartitionType.FIRST_DIM_SIZE) {\n      return this.rowPartitionValues[dimension + 1];\n    } else {\n      return this.rowPartitionValues[dimension];\n    }\n  }\n\n  private getMaxWidth(dimension: number) {\n    const rowPartitionTensor = this.getRowPartitionTensor(dimension - 1);\n    switch (this.getRowPartitionTypeByDimension(dimension - 1)) {\n      case RowPartitionType.VALUE_ROWIDS:\n        return RaggedTensorToTensorOp.getMaxWidthValueRowID(rowPartitionTensor);\n      case RowPartitionType.ROW_SPLITS:\n        return RaggedTensorToTensorOp.getMaxWidthRowSplit(rowPartitionTensor);\n      default:\n        throw new Error(`Cannot handle partition type ${\n            RowPartitionType[this.getRowPartitionTypeByDimension(\n                dimension - 1)]}`);\n    }\n  }\n\n  static getMaxWidthRowSplit(rowSplit: TypedArray) {\n    const tensorLength = rowSplit.length;\n    if (tensorLength === 0 || tensorLength === 1) {\n      return 0;\n    }\n    let maxWidth = 0;\n    for (let i = 0; i < tensorLength - 1; ++i) {\n      const currentWidth = rowSplit[i + 1] - rowSplit[i];\n      if (currentWidth > maxWidth) {\n        maxWidth = currentWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  static getMaxWidthValueRowID(valueRowIds: TypedArray) {\n    const indexLength = valueRowIds.length;\n    if (indexLength === 0) {\n      return 0;\n    }\n    let firstEqualIndex = 0;\n    let firstEqualIndexValue = valueRowIds[0];\n    let maxWidth = 0;\n    for (let i = 1; i < indexLength; ++i) {\n      const value = valueRowIds[i];\n      if (value !== firstEqualIndexValue) {\n        firstEqualIndexValue = value;\n        maxWidth = Math.max(i - firstEqualIndex, maxWidth);\n        firstEqualIndex = i;\n      }\n    }\n    return Math.max(indexLength - firstEqualIndex, maxWidth);\n  }\n\n  private tensorShapeFromTensor(\n      t: TypedArray, tShape: number[], isPartial = true) {\n    if (tShape.length === 0) {\n      if (t[0] === -1) {\n        return [];\n      }\n      throw new Error(\n          `The only valid scalar shape tensor is the fully unknown shape specified as -1.`);\n    }\n    // MakePartialShape/MakeShapeHelper.\n    return makeShape(t, isPartial);\n  }\n\n  private calculateOutputSize(firstDim: number) {\n    const valueShape = this.valuesShape;\n    const defaultValueShape = this.defaultValueShape;\n\n    backend_util.validateDefaultValueShape(defaultValueShape, valueShape);\n\n    const shape = this.tensorShapeFromTensor(this.shape, this.shapeShape);\n    const outputShape = backend_util.combineRaggedTensorToTensorShapes(\n        this.raggedRank, shape, valueShape);\n\n    const result = outputShape;\n\n    if (result[0] < 0) {\n      result[0] = firstDim;\n    }\n    for (let i = 1; i <= this.raggedRank; ++i) {\n      if (result[i] < 0) {\n        result[i] = this.getMaxWidth(i);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * The outputIndex represents the index in the output tensor\n   * where the first element of a particular dimension would be written.\n   * If it is -1, it indicates that the index is out of scope.\n   * Example, given firstDimension = 10, firstDimensionOutput = 6,\n   * and outputIndexMultiplier = 100:\n   * result = [0 100 200 300 400 500 -1 -1 -1 -1]\n   * If firstDimensionOutput = 11 instead, then:\n   * result = [0 100 200 300 400 500 600 700 800 900]\n   */\n  private calculateFirstParentOutputIndex(\n      firstDimension: number, outputIndexMultiplier: number,\n      firstDimensionOutput: number) {\n    const minDimension = Math.min(firstDimension, firstDimensionOutput);\n    const result: number[] = [];\n    let currentOutputIndex = 0;\n    for (let i = 0; i < minDimension;\n         ++i, currentOutputIndex += outputIndexMultiplier) {\n      result.push(currentOutputIndex);\n    }\n    for (let i = minDimension; i < firstDimension; ++i) {\n      result.push(-1);\n    }\n    util.assert(\n        result.length === firstDimension,\n        () => 'Final length of result must be equal to firstDimension.');\n\n    return result;\n  }\n\n  private calculateOutputIndexRowSplit(\n      rowSplit: TypedArray, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const rowSplitSize = rowSplit.length;\n    const result: number[] = [];\n    for (let i = 0; i < rowSplitSize - 1; ++i) {\n      const rowLength = rowSplit[i + 1] - rowSplit[i];\n      let realLength = Math.min(outputSize, rowLength);\n      let parentOutputIndexCurrent = parentOutputIndex[i];\n\n      if (parentOutputIndexCurrent === -1) {\n        realLength = 0;\n      }\n      for (let j = 0; j < realLength; ++j) {\n        result.push(parentOutputIndexCurrent);\n        parentOutputIndexCurrent += outputIndexMultiplier;\n      }\n      for (let j = 0; j < rowLength - realLength; ++j) {\n        result.push(-1);\n      }\n    }\n    if (rowSplitSize > 0 && result.length !== rowSplit[rowSplitSize - 1]) {\n      throw new Error('Invalid row split size.');\n    }\n\n    return result;\n  }\n\n  // Calculate the output index of the first element of a list.\n  // The parentOutputIndex is the same computation for the previous list.\n  // -1 indicates an element or list that is out of range.\n  // The outputIndexMultiplier is the number of output indices one moves\n  // forward for each column.\n  // E.g., given:\n  // valueRowIds:[0 1 2 2 2 3 5 5 6]\n  // parentOutputIndex:[1000 1100 2000 2100 -1 3000 4000]\n  // outputIndexMultiplier: 10\n  // outputSize: 2\n  // You get:\n  // result = [1000 1100 2000 2010 -1 2100 -1 -1 3000]\n  // result[0] = parentOutputIndex[valueRowIds[0]]\n  // result[1] = parentOutputIndex[valueRowIds[1]]\n  // result[2] = parentOutputIndex[valueRowIds[2]]\n  // result[3] = parentOutputIndex[valueRowIds[2] + 10]\n  // result[4] = -1 because it is the third element the size is 2.\n  // result[5] = parentOutputIndex[valueRowIds[3]]\n  // result[6] = -1 because parentOutputIndex[valueRowIds[6]] == -1\n  // result[7] = -1 because parentOutputIndex[valueRowIds[6]] == -1\n  // result[8] = parentOutputIndex[valueRowIds[7]]\n  private calculateOutputIndexValueRowID(\n      valueRowIds: TypedArray, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const indexSize = valueRowIds.length;\n    const result: number[] = [];\n    if (indexSize === 0) {\n      return [];\n    }\n\n    let currentOutputColumn = 0;\n    let currentValueRowId = valueRowIds[0];\n\n    if (currentValueRowId >= parentOutputIndex.length) {\n      throw new Error(\n          `Got currentValueRowId=${currentValueRowId}, which is not less than ${\n              parentOutputIndex.length}`);\n    }\n\n    let currentOutputIndex = parentOutputIndex[currentValueRowId];\n    result.push(currentOutputIndex);\n    for (let i = 1; i < indexSize; ++i) {\n      const nextValueRowId = valueRowIds[i];\n      if (nextValueRowId === currentValueRowId) {\n        if (currentOutputIndex >= 0) {\n          ++currentOutputColumn;\n          if (currentOutputColumn < outputSize) {\n            currentOutputIndex += outputIndexMultiplier;\n          } else {\n            currentOutputIndex = -1;\n          }\n        }\n      } else {\n        currentOutputColumn = 0;\n        currentValueRowId = nextValueRowId;\n\n        if (nextValueRowId >= parentOutputIndex.length) {\n          throw new Error(\n              `Got nextValueRowId=${nextValueRowId} which is not less than ${\n                  parentOutputIndex.length}`);\n        }\n\n        currentOutputIndex = parentOutputIndex[nextValueRowId];\n      }\n      result.push(currentOutputIndex);\n    }\n\n    if (result.length !== valueRowIds.length) {\n      throw new Error('Invalid row ids.');\n    }\n\n    return result;\n  }\n\n  private calculateOutputIndex(\n      dimension: number, parentOutputIndex: number[],\n      outputIndexMultiplier: number, outputSize: number) {\n    const rowPartitionTensor = this.getRowPartitionTensor(dimension);\n    const partitionType = this.getRowPartitionTypeByDimension(dimension);\n    switch (partitionType) {\n      case RowPartitionType.VALUE_ROWIDS:\n        return this.calculateOutputIndexValueRowID(\n            rowPartitionTensor, parentOutputIndex, outputIndexMultiplier,\n            outputSize);\n      case RowPartitionType.ROW_SPLITS:\n        if (rowPartitionTensor.length - 1 > parentOutputIndex.length) {\n          throw new Error(`Row partition size is greater than output size: ${\n              rowPartitionTensor.length - 1} > ${parentOutputIndex.length}`);\n        }\n        return this.calculateOutputIndexRowSplit(\n            rowPartitionTensor, parentOutputIndex, outputIndexMultiplier,\n            outputSize);\n      default:\n        throw new Error(\n            `Unsupported partition type: ${RowPartitionType[partitionType]}`);\n    }\n  }\n\n  private getFirstDimensionSize() {\n    const firstPartitionTensor = this.rowPartitionValues[0];\n    if (this.rowPartitionTypes.length === 0) {\n      throw new Error('No row_partition_types given.');\n    }\n    const firstPartitionType = this.rowPartitionTypes[0];\n    switch (firstPartitionType) {\n      case RowPartitionType.FIRST_DIM_SIZE:\n        return firstPartitionTensor[0];\n      case RowPartitionType.VALUE_ROWIDS:\n        throw new Error('Cannot handle VALUE_ROWIDS in first dimension.');\n      case RowPartitionType.ROW_SPLITS:\n        return this.rowPartitionValuesShapes[0][0] - 1;\n      default:\n        throw new Error(\n            `Cannot handle type ${RowPartitionType[firstPartitionType]}`);\n    }\n  }\n\n  compute(): [number[], TypedArray] {\n    const firstPartitionTensor = this.rowPartitionValues[0];\n    if (firstPartitionTensor.length <= 0) {\n      throw new Error(\n          'Invalid first partition input. ' +\n          'Tensor requires at least one element.');\n    }\n    const firstDimension = this.getFirstDimensionSize();\n    const outputSize = this.calculateOutputSize(firstDimension);\n    const multiplier: number[] = new Array(this.raggedRank + 1);\n\n    multiplier[multiplier.length - 1] = 1;\n    for (let i = multiplier.length - 2; i >= 0; --i) {\n      multiplier[i] = multiplier[i + 1] * outputSize[i + 1];\n    }\n    // Full size of the tensor.\n    const outputShape: number[] = makeShape(outputSize, false);\n    const outputTensor =\n        util.getArrayFromDType(\n            this.valuesDType, util.sizeFromShape(outputShape)) as TypedArray;\n\n    const fullSize = multiplier[0] * outputSize[0];\n    if (fullSize > 0) {\n      let outputIndex = this.calculateFirstParentOutputIndex(\n          firstDimension, multiplier[0], outputSize[0]);\n      for (let i = 1; i <= this.raggedRank; ++i) {\n        const newOutputIndex = this.calculateOutputIndex(\n            i - 1, outputIndex, multiplier[i], outputSize[i]);\n        outputIndex = newOutputIndex;\n      }\n\n      this.setOutput(this.raggedRank, outputIndex, outputTensor, outputShape);\n    }\n\n    return [outputShape, outputTensor];\n  }\n  setOutput(\n      raggedRank: number, outputIndex: number[], outputTensor: TypedArray,\n      outputShape: number[]) {\n    if (outputTensor.length === 0) {\n      return;\n    }\n\n    const valuesBase = this.values;\n    const outputBase = outputTensor;\n\n    let elementShape = outputShape.slice();\n    elementShape = elementShape.slice(raggedRank + 1);\n    const valueElementSize = util.sizeFromShape(elementShape);\n    const outputIndexSize = outputIndex.length;\n\n    // Broadcast the default value to value_element_size.  (We can skip this\n    // if defaultValueTensor.size == 1, since we use fill when that's true.)\n    let defaultValue = this.defaultValue;\n    if (defaultValue.length !== valueElementSize && defaultValue.length !== 1) {\n      const srcShape = this.defaultValueShape;\n      tidy(() => {\n        const defaultValueTensor = reshape(defaultValue, srcShape);\n        const bCastDefault = broadcastTo(defaultValueTensor, elementShape);\n        defaultValue = bCastDefault.dataSync();\n      });\n    }\n\n    // Loop through the outputIndex array, finding contiguous regions that\n    // should be copied.  Once we find the end of a contiguous region, copy it\n    // and add any necessary padding (with defaultValue).\n    let srcStart = 0;  // Start of contiguous region (in values)\n    let dstStart = 0;  // Destination for contiguous region (in output)\n    let dstEnd = 0;    // Destination for contiguous region (in output)\n    for (let srcI = 0; srcI <= outputIndexSize; ++srcI) {\n      // dstI is the destination where the value at srcI should be copied.\n      let dstI = srcI < outputIndexSize ? outputIndex[srcI] : -1;\n\n      // If we're still in a contiguous region, then update dstEnd go to the\n      // next srcI.\n      if (dstI === dstEnd) {\n        ++dstEnd;\n        continue;\n      }\n\n      // We found the end of contiguous region.  This can be because we found\n      // a gap (dstI > dstEnd), or a source value that shouldn't be copied\n      // because it's out-of-bounds (dstI == -1), or the end of the tensor\n      // (dstI === -1).\n      if (dstStart < dstEnd) {\n        // Copy the contiguous region.\n        const src = valuesBase.subarray(srcStart * valueElementSize);\n        const dst = outputBase.subarray(dstStart * valueElementSize);\n        const nVals = (dstEnd - dstStart) * valueElementSize;\n        copyArray(dst, src, nVals);\n      }\n\n      // Add any necessary padding (w/ defaultValue).\n      if (srcI >= outputIndexSize) {\n        // We reached the end of values: pad to the end of output.\n        const outputSize = outputTensor.length;\n        dstI = Math.floor(outputSize / valueElementSize);\n      }\n      if (dstI > dstEnd) {\n        if (this.defaultValue.length === 1) {\n          outputBase\n              .subarray(dstEnd * valueElementSize, dstI * valueElementSize)\n              .fill(this.defaultValue[0]);\n          dstEnd = dstI;\n        } else {\n          while (dstI > dstEnd) {\n            const dst = outputBase.slice(dstEnd * valueElementSize);\n            copyArray(dst, defaultValue, valueElementSize);\n            ++dstEnd;\n          }\n        }\n      }\n\n      // Update indices.\n      if (dstI < 0) {\n        // srcI should be skipped -- leave it out of the contiguous region.\n        srcStart = srcI + 1;\n        dstStart = dstEnd;\n      } else {\n        // srcI should be copied -- include it in the contiguous region.\n        srcStart = srcI;\n        dstStart = dstEnd;\n        dstEnd = dstStart + 1;\n      }\n    }\n  }\n}\n\nfunction copyArray(dst: TypedArray, src: TypedArray, size: number) {\n  for (let i = 0; i < size; i++) {\n    dst[i] = src[i];\n  }\n}\n\nfunction makeShape(shape: number[]|TypedArray, isPartial: boolean) {\n  const out: number[] = [];\n  for (let dim of shape) {\n    if (dim < 0) {\n      if (!isPartial) {\n        throw new Error(`Dimension ${dim} must be >= 0`);\n      }\n      if (dim < -1) {\n        throw new Error(`Dimension ${dim} must be >= -1`);\n      }\n      dim = -1;\n    }\n    out.push(dim);\n  }\n\n  return out;\n}\n\nexport function raggedTensorToTensorImpl(\n    shape: TypedArray, shapesShape: number[], values: TypedArray,\n    valuesShape: number[], valuesDType: DataType, defaultValue: TypedArray,\n    defaultValueShape: number[], rowPartitionValues: TypedArray[],\n    rowPartitionValuesShapes: number[][],\n    rowPartitionTypes: string[]): [number[], TypedArray] {\n  return new RaggedTensorToTensorOp(\n             shape, shapesShape, values, valuesShape, valuesDType, defaultValue,\n             defaultValueShape, rowPartitionValues, rowPartitionValuesShapes,\n             rowPartitionTypes)\n      .compute();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataTypeMap, util} from '@tensorflow/tfjs-core';\n\nexport function rangeImpl(\n    start: number, stop: number, step: number,\n    dtype: 'float32'|'int32'): DataTypeMap['float32' | 'int32'] {\n  const sameStartStop = start === stop;\n  const increasingRangeNegativeStep = start < stop && step < 0;\n  const decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep ||\n      decreasingRangePositiveStep) {\n    return util.makeZerosTypedArray(0, dtype);\n  }\n\n  const numElements = Math.abs(Math.ceil((stop - start) / step));\n  const values = util.makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n  return values;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, buffer, DataType, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function sliceImpl(\n    vals: BackendValues, begin: number[], size: number[], shape: number[],\n    dtype: DataType): BackendValues {\n  const isContinous = slice_util.isSliceContinous(shape, begin, size);\n  const length = util.sizeFromShape(size);\n  const xStrides = util.computeStrides(shape);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n\n    if (dtype === 'string') {\n      return (vals as Uint8Array[]).slice(flatOffset, flatOffset + length);\n    }\n\n    return (vals as TypedArray).subarray(flatOffset, flatOffset + length);\n  }\n\n  const decodedData = dtype === 'string' ?\n      backend_util.fromUint8ToStringArray(vals as Uint8Array[]) :\n      vals as TypedArray;\n\n  const inBuf = buffer(shape, dtype, decodedData);\n  const outBuf = buffer(size, dtype);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const outLoc = outBuf.indexToLoc(i);\n    const inLoc = outLoc.map((idx: number, j) => idx + begin[j]);\n    outBuf.set(inBuf.get(...inLoc), ...outLoc);\n  }\n\n  if (dtype === 'string') {\n    return backend_util.fromStringArrayToUint8(outBuf.values as string[]);\n  }\n  return outBuf.values as TypedArray;\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, backend: MathBackendCPU, attrs: SliceAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {begin, size} = attrs;\n\n  assertNotComplex(x, 'slice');\n\n  const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n  slice_util.assertParamsValid(x, $begin, $size);\n\n  const vals = backend.data.get(x.dataId).values;\n  const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n  return backend.makeTensorInfo($size, x.dtype, outVals);\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'cpu',\n  kernelFunc: slice as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\n/**\n * The StringNGramsOp class creates ngrams from ragged string data.\n * The constructor contains all attributes related to the operation such as\n * padding widths and strings, and the compute function can be used to\n * compute the ngrams for different ragged tensor inputs.\n */\nclass StringNGramsOp {\n  private separator: Uint8Array;\n  private nGramWidths: number[];\n  private padWidth: number;\n  private leftPad: Uint8Array;\n  private rightPad: Uint8Array;\n  private preserveShort: boolean;\n\n  constructor(\n      separator: string, nGramWidths: number[], leftPad: string,\n      rightPad: string, padWidth: number, preserveShortSequences: boolean) {\n    this.separator = util.encodeString(separator);\n    this.nGramWidths = nGramWidths;\n    this.leftPad = util.encodeString(leftPad);\n    this.rightPad = util.encodeString(rightPad);\n    this.padWidth = padWidth;\n    this.preserveShort = preserveShortSequences;\n  }\n\n  private getPadWidth(nGramWidth: number) {\n    // Ngrams can be padded with either a fixed pad width or a dynamic pad\n    // width depending on the 'padWidth' arg, but in no case should the padding\n    // ever be wider than 'nGramWidth' - 1.\n    return Math.min(\n        this.padWidth < 0 ? nGramWidth - 1 : this.padWidth, nGramWidth - 1);\n  }\n\n  private getNumNGrams(length: number, nGramWidth: number) {\n    const padWidth = this.getPadWidth(nGramWidth);\n    return Math.max(0, ((length + 2 * padWidth) - nGramWidth) + 1);\n  }\n\n  private createNGrams(\n      data: Uint8Array[], splitIndex: number, output: Uint8Array[],\n      outputStartIndex: number, numNGrams: number, nGramWidth: number) {\n    for (let nGramIndex = 0; nGramIndex < numNGrams; ++nGramIndex) {\n      const padWidth = this.getPadWidth(nGramWidth);\n      const leftPadding = Math.max(0, padWidth - nGramIndex);\n      const rightPadding =\n          Math.max(0, padWidth - (numNGrams - (nGramIndex + 1)));\n      const numTokens = nGramWidth - (leftPadding + rightPadding);\n      const dataStartIndex =\n          splitIndex + (leftPadding > 0 ? 0 : nGramIndex - padWidth);\n\n      // Calculate the total expected size of the nGram so we can reserve the\n      // correct amount of space in the string.\n      let nGramSize = 0;\n      // Size of the left padding.\n      nGramSize += leftPadding * this.leftPad.length;\n      // Size of the tokens.\n      for (let n = 0; n < numTokens; ++n) {\n        nGramSize += data[dataStartIndex + n].length;\n      }\n      // Size of the right padding.\n      nGramSize += rightPadding * this.rightPad.length;\n      // Size of the separators.\n      const numSeparators = leftPadding + rightPadding + numTokens - 1;\n      nGramSize += numSeparators * this.separator.length;\n\n      // Build the nGram.\n      output[outputStartIndex + nGramIndex] = new Uint8Array(nGramSize);\n      const nGram = output[outputStartIndex + nGramIndex];\n\n      let nextNGramIndex = 0;\n      const appendToNGram = (str: Uint8Array) =>\n          str.forEach((value) => nGram[nextNGramIndex++] = value);\n\n      for (let n = 0; n < leftPadding; ++n) {\n        appendToNGram(this.leftPad);\n        appendToNGram(this.separator);\n      }\n      // Only output first numTokens - 1 pairs of data and separator\n      for (let n = 0; n < numTokens - 1; ++n) {\n        appendToNGram(data[dataStartIndex + n]);\n        appendToNGram(this.separator);\n      }\n      // Handle case when there are no tokens or no right padding as these\n      // can result in consecutive separators.\n      if (numTokens > 0) {\n        // If we have tokens, then output last and then pair each separator\n        // with the right padding that follows, to ensure nGram ends either with\n        // the token or with the right pad.\n        appendToNGram(data[dataStartIndex + numTokens - 1]);\n        for (let n = 0; n < rightPadding; ++n) {\n          appendToNGram(this.separator);\n          appendToNGram(this.rightPad);\n        }\n      } else {\n        // If we don't have tokens, then the last item inserted into the nGram\n        // has been the separator from the left padding loop above. Hence,\n        // output right pad and separator and make sure to finish with a\n        // padding, not a separator.\n        for (let n = 0; n < rightPadding - 1; ++n) {\n          appendToNGram(this.rightPad);\n          appendToNGram(this.separator);\n        }\n        appendToNGram(this.rightPad);\n      }\n    }\n  }\n\n  // Data and splits together form the definition of the ragged tensor,\n  // where data is 1 dimensional and contains the values of the tensor\n  // and splits denotes the indices at which each row starts.\n  public compute(data: Uint8Array[], splits: Int32Array):\n      [Uint8Array[], Int32Array] {\n    // Validate that the splits are valid indices into data, only if there are\n    // splits specified.\n    const inputDataSize = data.length;\n    const splitsSize = splits.length;\n    if (splitsSize > 0) {\n      let prevSplit = splits[0];\n      if (prevSplit !== 0) {\n        throw new Error(`First split value must be 0, got ${prevSplit}`);\n      }\n      for (let i = 1; i < splitsSize; ++i) {\n        let validSplits = splits[i] >= prevSplit;\n        validSplits = validSplits && (splits[i] <= inputDataSize);\n        if (!validSplits) {\n          throw new Error(`Invalid split value ${splits[i]}, must be in [${\n              prevSplit}, ${inputDataSize}]`);\n        }\n        prevSplit = splits[i];\n      }\n      if (prevSplit !== inputDataSize) {\n        throw new Error(`Last split value must be data size. Expected ${\n            inputDataSize}, got ${prevSplit}`);\n      }\n    }\n\n    const numBatchItems = splitsSize - 1;\n    const nGramsSplits = util.getArrayFromDType('int32', splitsSize);\n    // If there is no data or size, return an empty ragged tensor.\n    if (inputDataSize === 0 || splitsSize === 0) {\n      const empty: Uint8Array[] = new Array(inputDataSize);\n      for (let i = 0; i <= numBatchItems; ++i) {\n        nGramsSplits[i] = 0;\n      }\n      return [empty, nGramsSplits];\n    }\n\n    nGramsSplits[0] = 0;\n    for (let i = 1; i <= numBatchItems; ++i) {\n      const length = splits[i] - splits[i - 1];\n      let numNGrams = 0;\n      this.nGramWidths.forEach((nGramWidth) => {\n        numNGrams += this.getNumNGrams(length, nGramWidth);\n      });\n      if (this.preserveShort && length > 0 && numNGrams === 0) {\n        numNGrams = 1;\n      }\n      nGramsSplits[i] = nGramsSplits[i - 1] + numNGrams;\n    }\n\n    const nGrams: Uint8Array[] = new Array(nGramsSplits[numBatchItems]);\n\n    for (let i = 0; i < numBatchItems; ++i) {\n      const splitIndex = splits[i];\n      let outputStartIdx = nGramsSplits[i];\n      this.nGramWidths.forEach((nGramWidth) => {\n        const length = splits[i + 1] - splits[i];\n        const numNGrams = this.getNumNGrams(length, nGramWidth);\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n        outputStartIdx += numNGrams;\n      });\n      // If we're preserving short sequences, check to see if no sequence was\n      // generated by comparing the current output start idx to the original\n      // one (nGramSplitsdata). If no ngrams were generated, then they will\n      // be equal (since we increment outputStartIdx by numNGrams every\n      // time we create a set of ngrams.)\n      if (this.preserveShort && outputStartIdx === nGramsSplits[i]) {\n        const dataLength = splits[i + 1] - splits[i];\n        // One legitimate reason to not have any ngrams when this.preserveShort\n        // is true is if the sequence itself is empty. In that case, move on.\n        if (dataLength === 0) {\n          continue;\n        }\n        // We don't have to worry about dynamic padding sizes here: if padding\n        // was dynamic, every sequence would have had sufficient padding to\n        // generate at least one nGram.\n        const nGramWidth = dataLength + 2 * this.padWidth;\n        const numNGrams = 1;\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n      }\n    }\n    return [nGrams, nGramsSplits];\n  }\n}\n\nexport function stringNGramsImpl(\n    data: Uint8Array[], dataSplits: Int32Array, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): [Uint8Array[], Int32Array] {\n  return new StringNGramsOp(\n             separator, nGramWidths, leftPad, rightPad, padWidth,\n             preserveShortSequences)\n      .compute(data, dataSplits);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nfunction split(\n    str: Uint8Array, delimiters: Uint8Array, skipEmpty: boolean,\n    result: Uint8Array[]): void {\n  if (!str.length) {\n    return;\n  }\n  // When the delimiter is empty, the input is split into individual characters.\n  if (delimiters.length === 0) {\n    for (let i = 0; i < str.length; ++i) {\n      result.push(str.subarray(i, i + 1));\n    }\n    return;\n  }\n  // When there is one delimiter, the input is split only at that delimiter.\n  if (delimiters.length === 1) {\n    const delimiter = delimiters[0];\n    let f = str.indexOf(delimiter);\n    while (f !== -1) {\n      const token = str.subarray(0, f);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      str = str.subarray(f + 1);\n      f = str.indexOf(delimiter);\n    }\n    if (!skipEmpty || str.length !== 0) {\n      result.push(str);\n    }\n    return;\n  }\n  // When there are multiple delimiters, the input is split at every instance\n  // one of the delimiters appears.\n  let tokenStart = 0;\n  for (let i = 0; i < str.length + 1; i++) {\n    if ((i === str.length) || (delimiters.indexOf(str[i]) !== -1)) {\n      const token = str.subarray(tokenStart, i);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      tokenStart = i + 1;\n    }\n  }\n}\n\nexport function stringSplitImpl(\n    input: Uint8Array[], delimiter: Uint8Array,\n    skipEmpty: boolean): [TypedArray, Uint8Array[], [number, number]] {\n  const batchSize = input.length;\n\n  // Empty delimiter means split the input character by character.\n  const tokens: Uint8Array[] = [];\n\n  let outputSize = 0;\n  let maxNumEntries = 0;\n  const numIndices: number[] = new Array(batchSize);\n  for (let i = 0; i < batchSize; ++i) {\n    const prevTokensLength = tokens.length;\n    split(input[i], delimiter, skipEmpty, tokens);\n    const nEntries = tokens.length - prevTokensLength;\n    numIndices[i] = nEntries;\n    outputSize += nEntries;\n    maxNumEntries = Math.max(maxNumEntries, nEntries);\n  }\n\n  const indices = util.getArrayFromDType('int32', outputSize * 2) as TypedArray;\n  const values: Uint8Array[] = new Array(outputSize);\n  const shape: [number, number] = [batchSize, maxNumEntries];\n\n  let c = 0;\n  for (let i = 0; i < batchSize; ++i) {\n    for (let j = 0; j < numIndices[i]; ++j) {\n      // indices is a 2d tensor with shape of [outputSize, 2]\n      indices[c * 2] = i;\n      indices[c * 2 + 1] = j;\n      values[c] = tokens[c];\n      ++c;\n    }\n  }\n\n  return [indices, values, shape];\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function stringToHashBucketFastImpl(\n    input: Uint8Array[], numBuckets: number): TypedArray {\n  const output = util.getArrayFromDType('int32', input.length) as TypedArray;\n\n  for (let i = 0; i < input.length; ++i) {\n    output[i] =\n        util.fingerPrint64(input[i]).modulo(numBuckets).getLowBitsUnsigned();\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendValues, DataType, TensorBuffer, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function uniqueImpl(\n    values: BackendValues, axis: number, shape: number[], dtype: DataType): {\n  outputValues: BackendValues,\n  outputShape: number[],\n  indices: BackendValues\n} {\n  // Normalize and validate axis.\n  const $axis = util.parseAxisParam(axis, shape)[0];\n\n  // Calculate the new shape that is suitable for extracting data along the\n  // given axis.\n  //\n  // The rank is 3.\n  // The size of the 1st dimension is the size of all the axes < the given axis.\n  // The size of the 2nd dimension is the same as the size of the given axis.\n  // The size of the 3rd dimension is the size of all the axes > the given axis.\n  //\n  // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n  // newShape would be: [2*3, 5, 4].\n  //\n  // Note that this is not the final output shape. This will be the shape for an\n  // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n  // values along the given axis. To demonstrate how it works, consider the\n  // following example:\n  //\n  // Input: a 3D tensor, with shape [1, 2, 3]\n  // [\n  //   [\n  //      [1,2,3],\n  //      [4,5,6]\n  //   ]\n  // ]\n  // Axis: 2 (the last axis).\n  // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n  //\n  // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n  // 1*2. The re-shaped data would look like:\n  //\n  // [\n  //   [\n  //     [1], [2], [3]\n  //   ],\n  //   [\n  //     [4], [5], [6]\n  //   ]\n  // ]\n  //\n  // Then, we can construct a 3-level nested loop by the following dimension\n  // order to extract the values along the axis (dimension1):\n  // i: dimension1       // 0,1,2 (newShape[1])\n  //   m: dimension0     // 0,1   (newShape[0])\n  //     n: dimension2   // 0     (newShape[2])\n  //\n  //                       m, i, n\n  //                      ---------\n  // Iteration 0: data at [0, 0, 0] => \"1\"\n  // Iteration 1: data at [1, 0, 0] => \"4\"\n  // We got [1,4].\n  // Iteration 2: data at [0, 1, 0] => \"2\"\n  // Iteration 3: data at [1, 1, 0] => \"5\"\n  // We got [2,5].\n  // Iteration 4: data at [0, 2, 0] => \"3\"\n  // Iteration 5: data at [1, 2, 0] => \"6\"\n  // We got [3,6].\n  const newShape = [1, shape[0], 1];\n  for (let i = 0; i < $axis; i++) {\n    newShape[0] *= shape[i];\n  }\n  newShape[1] = shape[$axis];\n  for (let i = $axis + 1; i < shape.length; i++) {\n    newShape[2] *= shape[i];\n  }\n\n  // A map from unique elements (their string representations) to their values\n  // in \"indices\" (below).\n  const uniqueElements = new Map<string, number>();\n  // The indices of each unique element in the original tensor along the given\n  // axis. It is 1D and has the same size as the given axis.\n  const indices = new Int32Array(shape[$axis]);\n  // Create a buffer so we can easily extract value at a given location.\n  const inputBuffer = new TensorBuffer(newShape, dtype, values as TypedArray);\n  // The indices along the given axis that have unique elements. This is a\n  // de-duped version of \"indices\" above.\n  const uniqueIndices: number[] = [];\n  const is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n  for (let i = 0; i < shape[$axis]; i++) {\n    // Extract values along the axis.\n    let element: string;\n    if (is1DTensor) {\n      // Fast path for 1D tensor input.\n      element = values[i].toString();\n    } else {\n      const axisValues = [];\n      for (let m = 0; m < newShape[0]; m++) {\n        for (let n = 0; n < newShape[2]; n++) {\n          axisValues.push(inputBuffer.get(m, i, n));\n        }\n      }\n      element = axisValues.join(',');\n    }\n\n    // Dedup and update various indices.\n    const existingIndex = uniqueElements.get(element);\n    if (existingIndex != null) {\n      indices[i] = existingIndex;\n    } else {\n      const uniqueIndex = uniqueElements.size;\n      uniqueElements.set(element, uniqueIndex);\n      indices[i] = uniqueIndex;\n      uniqueIndices.push(i);\n    }\n  }\n\n  // Now we know where each of the unique elements are located along the axis\n  // (uniqueIndices). Extract them from input buffer and store them in the\n  // output buffer.\n  const outputTmpShape = newShape.slice();\n  outputTmpShape[1] = uniqueElements.size;\n  const outputBuffer = new TensorBuffer(outputTmpShape, dtype);\n  uniqueIndices.forEach((uniqueElementIndex, i) => {\n    for (let m = 0; m < newShape[0]; m++) {\n      for (let n = 0; n < newShape[2]; n++) {\n        outputBuffer.set(inputBuffer.get(m, uniqueElementIndex, n), m, i, n);\n      }\n    }\n  });\n\n  // The output shape can be calculated from the input shape with the size of\n  // the given axis replaced by the number of unique elements along that axis.\n  const outputShape = shape.slice();\n  outputShape[$axis] = outputTmpShape[1];\n\n  return {\n    outputValues: outputBuffer.values as BackendValues,\n    outputShape,\n    indices,\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xTransposedReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Bincount, BincountAttrs, BincountInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmBincount: (\n    xId: number, size: number, hasWeights: boolean, weightsId: number,\n    weightsDType: CppDType, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBincount = backend.wasm.cwrap(Bincount, null /*void*/, [\n    'number',   // xId\n    'number',   // size\n    'boolean',  // hasWeights\n    'number',   // weightsId\n    'number',   // weightsDType\n    'number',   // outId\n  ]);\n}\n\nfunction bincount(\n    args: {backend: BackendWasm, inputs: BincountInputs, attrs: BincountAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, weights} = inputs;\n  const {size} = attrs;\n\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmBincount(\n      tensorId(x), size, hasWeights, tensorId(weights), CppDType[weights.dtype],\n      tensorId(out));\n\n  return out;\n}\n\nexport const bincountConfig: KernelConfig = {\n  kernelName: Bincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: bincount as unknown as KernelFunc\n};\n","\n/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BitwiseAnd, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const bitwiseAndConfig: KernelConfig =\n    createBinaryKernelConfig(BitwiseAnd, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, BroadcastArgs, BroadcastArgsInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function broadcastArgs(args: {\n  inputs: BroadcastArgsInputs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend} = args;\n  const {s0, s1} = inputs;\n\n  const s0Vals = backend.typedArrayFromHeap(s0);\n  const s1Vals = backend.typedArrayFromHeap(s1);\n\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(\n      Array.from(s0Vals), Array.from(s1Vals));\n\n  return backend.makeOutput(\n      [broadcastShape.length], 'int32', /*memoryOffset=*/undefined,\n      /*values=*/new Int32Array(broadcastShape));\n}\n\nexport const broadcastArgsConfig: KernelConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'wasm',\n  kernelFunc: broadcastArgs\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  const shapes = inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3D, Conv3DAttrs, Conv3DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3D: (\n    xId: number, filterId: number, outId: number, batchSize: number,\n    inDepth: number, inHeight: number, inWidth: number, inChannels: number,\n    outDepth: number, outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3D = backend.wasm.cwrap(Conv3D, null, [\n    'number',  // xId\n    'number',  // filterId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function conv3D(args: {\n  inputs: Conv3DInputs,\n  attrs: Conv3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations} = attrs;\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor x must have dtype float32, got ${x.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(\n        `Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number],\n      filter.shape as [number, number, number, number, number], strides,\n      dilations, pad);\n\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n  wasmConv3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const conv3DConfig: KernelConfig = {\n  kernelName: Conv3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3D as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropFilterV2, Conv3DBackpropFilterV2Attrs, Conv3DBackpropFilterV2Inputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3DBackpropFilterV2: (\n    xId: number, dyId: number, dwId: number, batchSize: number, inDepth: number,\n    inHeight: number, inWidth: number, inChannels: number, outDepth: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3DBackpropFilterV2 =\n      backend.wasm.cwrap(Conv3DBackpropFilterV2, null, [\n        'number',  // xId\n        'number',  // dyId\n        'number',  // dwId\n        'number',  // batchSize\n        'number',  // inDepth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // inChannels\n        'number',  // outDepth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // outChannels\n        'number',  // strideDepth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationDepth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterDepth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padFront\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function conv3DBackpropFilterV2(args: {\n  inputs: Conv3DBackpropFilterV2Inputs,\n  attrs: Conv3DBackpropFilterV2Attrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, filterShape} = attrs;\n\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${x.dtype}`);\n  }\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor filter must have dtype float32, got ${dy.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number], filterShape, strides,\n      /*dilations=*/1, pad);\n\n  const dw = backend.makeOutput(convInfo.filterShape, dy.dtype);\n\n  wasmConv3DBackpropFilterV2(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dw.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dw;\n}\n\nexport const conv3DBackpropFilterV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropFilterV2 as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv3DBackpropInputV2: (\n    filterId: number, dyId: number, dxId: number, batchSize: number,\n    inDepth: number, inHeight: number, inWidth: number, inChannels: number,\n    outDepth: number, outHeight: number, outWidth: number, outChannels: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    dilationDepth: number, dilationHeight: number, dilationWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv3DBackpropInputV2 = backend.wasm.cwrap(Conv3DBackpropInputV2, null, [\n    'number',  // filterId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterDepth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function conv3DBackpropInputV2(args: {\n  inputs: Conv3DBackpropInputV2Inputs,\n  attrs: Conv3DBackpropInputV2Attrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {pad, strides, inputShape} = attrs;\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${dy.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(\n        `Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n\n  const convInfo = backend_util.computeConv3DInfo(\n      inputShape, filter.shape as [number, number, number, number, number],\n      strides, /*dilations=*/1, pad);\n\n  const dx = backend.makeOutput(convInfo.inShape, dy.dtype);\n\n  wasmConv3DBackpropInputV2(\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.inChannels,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.outChannels,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.filterDepth,\n      convInfo.filterHeight,\n      convInfo.filterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const conv3DBackpropInputV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropInputV2 as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as unknown as\n                          keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumprod, CumprodAttrs, CumprodInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumprod: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumprod(\n  args: {inputs: CumprodInputs, backend: BackendWasm, attrs: CumprodAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n              permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumprodConfig: KernelConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DenseBincount, DenseBincountAttrs, DenseBincountInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDenseBincount: (\n    xId: number, xShape: Uint8Array, xShapeLen: number, size: number,\n    hasWeights: boolean, weightsId: number, weightsDType: CppDType,\n    binaryOutput: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDenseBincount = backend.wasm.cwrap('DenseBincount', null /*void*/, [\n    'number',   // xId\n    'array',    // xShape\n    'number',   // xShapeLen\n    'number',   // size\n    'boolean',  // hasWeights\n    'number',   // weightsId\n    'number',   // weightsDType\n    'boolean',  // binaryOutput\n    'number',   // outId\n  ]);\n}\n\nfunction denseBincount(args: {\n  backend: BackendWasm,\n  inputs: DenseBincountInputs,\n  attrs: DenseBincountAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, weights} = inputs;\n  const {size, binaryOutput} = attrs;\n\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmDenseBincount(\n      tensorId(x), new Uint8Array(new Int32Array(x.shape).buffer),\n      x.shape.length, size, hasWeights, tensorId(weights),\n      CppDType[weights.dtype], binaryOutput, tensorId(out));\n\n  return out;\n}\n\nexport const denseBincountConfig: KernelConfig = {\n  kernelName: DenseBincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: denseBincount as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Diag, DiagInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDiag: (xId: number, xDType: CppDType, xSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDiag = backend.wasm.cwrap('Diag', null, [\n    'number',  // xId\n    'number',  // xDType,\n    'number',  // xSize,\n    'number',  // outId\n  ]);\n}\n\nexport function diag(args: {inputs: DiagInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const out = backend.makeOutput([...x.shape, ...x.shape], x.dtype);\n\n  wasmDiag(\n      backend.dataIdMap.get(x.dataId).id, CppDType[x.dtype], xSize,\n      backend.dataIdMap.get(out.dataId).id);\n  return out;\n}\n\nexport const diagConfig: KernelConfig = {\n  kernelName: Diag,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: diag as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2D, Dilation2DAttrs, Dilation2DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmDilation2D: (\n    xId: number, filterId: number, outId: number, dtype: number, batch: number,\n    depth: number, inHeight: number, inWidth: number, outHeight: number,\n    outWidth: number, strideHeight: number, strideWidth: number,\n    dilationHeight: number, dilationWidth: number, filterHeight: number,\n    filterWidth: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2D = backend.wasm.cwrap(Dilation2D, null, [\n    'number',  // xId\n    'number',  // filterId\n    'number',  // outId\n    'number',  // dtype\n    'number',  // batch\n    'number',  // depth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function dilation2D(args: {\n  inputs: Dilation2DInputs,\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype) {\n    throw new Error(\n        `Dilation2D error: x must have the same dtype as filter. Got ${\n            x.dtype} and ${filter.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const out = backend.makeOutput(dilationInfo.outShape, x.dtype);\n\n  wasmDilation2D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const dilation2DConfig: KernelConfig = {\n  kernelName: Dilation2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2D as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropFilter, KernelConfig, KernelFunc, Tensor3D, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDilation2DBackpropFilter: (\n    xId: number, filterId: number, dyId: number, gradId: number, dtype: number,\n    batch: number, depth: number, inHeight: number, inWidth: number,\n    outHeight: number, outWidth: number, strideHeight: number,\n    strideWidth: number, dilationHeight: number, dilationWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2DBackpropFilter =\n      backend.wasm.cwrap(Dilation2DBackpropFilter, null, [\n        'number',  // xId\n        'number',  // filterId\n        'number',  // dyId\n        'number',  // gradId\n        'number',  // dtype\n        'number',  // batch\n        'number',  // depth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function dilation2DBackpropFilter(args: {\n  inputs: {x: Tensor4D, filter: Tensor3D, dy: Tensor4D},\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, dy} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(\n        `Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${\n            x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const gradients = backend.makeOutput(filter.shape, filter.dtype);\n\n  wasmDilation2DBackpropFilter(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(gradients.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return gradients;\n}\n\nexport const dilation2DBackpropFilterConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropFilter,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropFilter as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropInput, KernelConfig, KernelFunc, Tensor3D, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmDilation2DBackpropInput: (\n    xId: number, filterId: number, dyId: number, gradId: number, dtype: number,\n    batch: number, depth: number, inHeight: number, inWidth: number,\n    outHeight: number, outWidth: number, strideHeight: number,\n    strideWidth: number, dilationHeight: number, dilationWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDilation2DBackpropInput =\n      backend.wasm.cwrap(Dilation2DBackpropInput, null, [\n        'number',  // xId\n        'number',  // filterId\n        'number',  // dyId\n        'number',  // gradId\n        'number',  // dtype\n        'number',  // batch\n        'number',  // depth\n        'number',  // inHeight\n        'number',  // inWidth\n        'number',  // outHeight\n        'number',  // outWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padLeft\n      ]);\n}\n\nexport function dilation2DBackpropInput(args: {\n  inputs: {x: Tensor4D, filter: Tensor3D, dy: Tensor4D},\n  attrs: Dilation2DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, dy} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(\n        `Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${\n            x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n\n  const dilationInfo = backend_util.computeDilation2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number], strides, pad,\n      /*dataFormat=*/'NHWC', dilations);\n\n  const gradients = backend.makeOutput(x.shape, x.dtype);\n\n  wasmDilation2DBackpropInput(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(filter.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(gradients.dataId).id,\n      CppDType[x.dtype],\n      dilationInfo.batchSize,\n      /*depth=*/dilationInfo.inChannels,\n      dilationInfo.inHeight,\n      dilationInfo.inWidth,\n      dilationInfo.outHeight,\n      dilationInfo.outWidth,\n      dilationInfo.strideHeight,\n      dilationInfo.strideWidth,\n      dilationInfo.dilationHeight,\n      dilationInfo.dilationWidth,\n      dilationInfo.filterHeight,\n      dilationInfo.filterWidth,\n      dilationInfo.padInfo.top,\n      dilationInfo.padInfo.left,\n  );\n  return gradients;\n}\n\nexport const dilation2DBackpropInputConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropInput as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {EluGrad, EluGradInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmEluGrad: (yId: number, dyId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmEluGrad = backend.wasm.cwrap(EluGrad, null, [\n    'number',  // yId\n    'number',  // dyId,\n    'number',  // outId\n  ]);\n}\n\nexport function eluGrad(args: {inputs: EluGradInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {dy, y} = inputs;\n\n  const out = backend.makeOutput(y.shape, 'float32');\n  const tensorId = (x: TensorInfo) => {\n    return backend.dataIdMap.get(x.dataId).id!;\n  };\n  wasmEluGrad(tensorId(y), tensorId(dy), tensorId(out));\n  return out;\n}\n\nexport const eluGradConfig: KernelConfig = {\n  kernelName: EluGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: eluGrad as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Erf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const erfConfig: KernelConfig = createUnaryKernelConfig(Erf);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Expm1, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expm1Config: KernelConfig =\n    createUnaryKernelConfig(Expm1, 'float32');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value}, backend} = args;\n  let {attrs: {dtype}} = args;\n\n  dtype = dtype || util.inferDtype(value);\n\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as unknown as\n                        keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsFinite, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isFiniteConfig: KernelConfig =\n    createUnaryKernelConfig(IsFinite, 'bool');\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsInf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isInfConfig: KernelConfig = createUnaryKernelConfig(IsInf, 'bool');\n","/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsNan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const isNaNConfig: KernelConfig = createUnaryKernelConfig(IsNan, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LinSpace, LinSpaceAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLinSpace: (outId: number, start: number, stop: number, num: number) =>\n    void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLinSpace = backend.wasm.cwrap(LinSpace, null, [\n    'number',  // outId\n    'number',  // start\n    'number',  // stop\n    'number',  // num\n  ]);\n}\n\nexport function linSpace(args: {attrs: LinSpaceAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {attrs, backend} = args;\n  const {start, stop, num} = attrs;\n\n  // TFJS Cpu backend supports num as a float and returns undetermined tensor in\n  // that case. However, according to TensorFlow spec, num should be a integer.\n  const numInt = Math.floor(num);\n\n  const out = backend.makeOutput([numInt], 'float32');\n  wasmLinSpace(backend.dataIdMap.get(out.dataId).id, start, stop, numInt);\n  return out;\n}\n\nexport const linSpaceConfig: KernelConfig = {\n  kernelName: LinSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: linSpace as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Log1p} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const log1pConfig: KernelConfig = createUnaryKernelConfig(Log1p);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalNot} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const logicalNotConfig: KernelConfig =\n  createUnaryKernelConfig(LogicalNot);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalOr} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalOrConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalOr, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalXor} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalXorConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalXor, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRN, LRNAttrs, LRNInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLRN: (\n    xId: number, outId: number, channels: number, depthRadius: number,\n    bias: number, alpha: number, beta: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLRN = backend.wasm.cwrap(LRN, null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number',  // depthRadius\n    'number',  // bias\n    'number',  // alpha\n    'number',  // beta\n  ]);\n}\n\nexport function lrn(args: {\n  inputs: LRNInputs,\n  attrs: LRNAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  if (x.dtype !== 'float32') {\n    throw new Error('LRN error: x must have dtype float32');\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n\n  wasmLRN(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      /*channels=*/x.shape[3],\n      depthRadius,\n      bias,\n      alpha,\n      beta,\n  );\n  return out;\n}\n\nexport const lrnConfig: KernelConfig = {\n  kernelName: LRN,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrn as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRNGrad, LRNGradAttrs, LRNGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmLRNGrad: (\n    xId: number, yId: number, dyId: number, dxId: number, channels: number,\n    depthRadius: number, bias: number, alpha: number, beta: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmLRNGrad = backend.wasm.cwrap(LRNGrad, null, [\n    'number',  // xId\n    'number',  // yId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // channels\n    'number',  // depthRadius\n    'number',  // bias\n    'number',  // alpha\n    'number',  // beta\n  ]);\n}\n\nexport function lrnGrad(args: {\n  inputs: LRNGradInputs,\n  attrs: LRNGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, y, dy} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  if (x.dtype !== 'float32' || y.dtype !== 'float32' ||\n      dy.dtype !== 'float32') {\n    throw new Error('LRNGrad error: x, y, and dy must have dtype float32');\n  }\n\n  const dx = backend.makeOutput(x.shape, x.dtype);\n\n  wasmLRNGrad(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(y.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      /*channels=*/dy.shape[3],\n      depthRadius,\n      bias,\n      alpha,\n      beta,\n  );\n  return dx;\n}\n\nexport const lrnGradConfig: KernelConfig = {\n  kernelName: LRNGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrnGrad as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3D, MaxPool3DAttrs, MaxPool3DInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool3D: (\n    xId: number, outId: number, batchSize: number, channelSize: number,\n    inDepth: number, inHeight: number, inWidth: number, outDepth: number,\n    outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool3D = backend.wasm.cwrap('MaxPool3D', null, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPool3D(args: {\n  inputs: MaxPool3DInputs,\n  attrs: MaxPool3DAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n\n  wasmMaxPool3D(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(out.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return out;\n}\n\nexport const maxPool3DConfig: KernelConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3D as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3DGrad, MaxPool3DGradAttrs, MaxPool3DGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool3DGrad: (\n    xId: number, dyId: number, dxId: number, batchSize: number,\n    channelSize: number, inDepth: number, inHeight: number, inWidth: number,\n    outDepth: number, outHeight: number, outWidth: number, strideDepth: number,\n    strideHeight: number, strideWidth: number, dilationDepth: number,\n    dilationHeight: number, dilationWidth: number, effectiveFilterDepth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number,\n    padFront: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool3DGrad = backend.wasm.cwrap('MaxPool3DGrad', null, [\n    'number',  // xId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inDepth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outDepth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideDepth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationDepth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterDepth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padFront\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPool3DGrad(args: {\n  inputs: MaxPool3DGradInputs,\n  attrs: MaxPool3DGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmMaxPool3DGrad(\n      backend.dataIdMap.get(input.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool3D ops (MaxPool3D and MaxPool3D) support 3D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inDepth,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outDepth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideDepth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationDepth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterDepth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.front,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const maxPool3DGradConfig: KernelConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3DGrad as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPoolGrad, MaxPoolGradAttrs, MaxPoolGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPoolGrad: (\n    xId: number, dyId: number, dxId: number, batchSize: number,\n    channelSize: number, inHeight: number, inWidth: number, outHeight: number,\n    outWidth: number, strideHeight: number, strideWidth: number,\n    dilationHeight: number, dilationWidth: number,\n    effectiveFilterHeight: number, effectiveFilterWidth: number, padTop: number,\n    padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPoolGrad = backend.wasm.cwrap('MaxPoolGrad', null, [\n    'number',  // xId\n    'number',  // dyId\n    'number',  // dxId\n    'number',  // batchSize\n    'number',  // channelSize\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // effectiveFilterHeight\n    'number',  // effectiveFilterWidth\n    'number',  // padTop\n    'number',  // padLeft\n  ]);\n}\n\nexport function maxPoolGrad(args: {\n  inputs: MaxPoolGradInputs,\n  attrs: MaxPoolGradAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      input.shape as [number, number, number, number], filterSize, strides,\n      /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n\n  wasmMaxPoolGrad(\n      backend.dataIdMap.get(input.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      convInfo.batchSize,\n      // Since Pool ops (MaxPool and MaxPool) support 2D filter only, in\n      // channels should always equal to out channels.\n      /*channelSize=*/convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return dx;\n}\n\nexport const maxPoolGradConfig: KernelConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolGrad as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPoolWithArgmax, MaxPoolWithArgmaxAttrs, MaxPoolWithArgmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmMaxPoolWithArgmax: (\n    xId: number, pooledId: number, indexesId: number, dtype: number,\n    includeBatchIndex: boolean, batchSize: number, channelSize: number,\n    inHeight: number, inWidth: number, outHeight: number, outWidth: number,\n    strideHeight: number, strideWidth: number, dilationHeight: number,\n    dilationWidth: number, effectiveFilterHeight: number,\n    effectiveFilterWidth: number, padTop: number, padLeft: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPoolWithArgmax = backend.wasm.cwrap('MaxPoolWithArgmax', null, [\n    'number',   // xId\n    'number',   // pooledId\n    'number',   // indexesId\n    'number',   // dtype\n    'boolean',  // includeBatchIndex\n    'number',   // batchSize\n    'number',   // channelSize\n    'number',   // inHeight\n    'number',   // inWidth\n    'number',   // outHeight\n    'number',   // outWidth\n    'number',   // strideHeight\n    'number',   // strideWidth\n    'number',   // dilationHeight\n    'number',   // dilationWidth\n    'number',   // effectiveFilterHeight\n    'number',   // effectiveFilterWidth\n    'number',   // padTop\n    'number',   // padLeft\n  ]);\n}\n\nexport function maxPoolWithArgmax(args: {\n  inputs: MaxPoolWithArgmaxInputs,\n  attrs: MaxPoolWithArgmaxAttrs,\n  backend: BackendWasm,\n}): TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, includeBatchInIndex} = attrs;\n\n  util.assert(\n      x.shape.length === 4,\n      () => `Error in maxPool: input must be rank 4 but got rank ${\n          x.shape.length}.`);\n  const dilations: [number, number] = [1, 1];\n  util.assert(\n      backend_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides, [1, 1],\n      pad);\n\n  const pooled = backend.makeOutput(convInfo.outShape, x.dtype);\n  const indexes = backend.makeOutput(convInfo.outShape, 'int32');\n\n  wasmMaxPoolWithArgmax(\n      backend.dataIdMap.get(x.dataId).id,\n      backend.dataIdMap.get(pooled.dataId).id,\n      backend.dataIdMap.get(indexes.dataId).id,\n      CppDType[x.dtype],\n      includeBatchInIndex,\n      convInfo.batchSize,\n      convInfo.inChannels,\n      convInfo.inHeight,\n      convInfo.inWidth,\n      convInfo.outHeight,\n      convInfo.outWidth,\n      convInfo.strideHeight,\n      convInfo.strideWidth,\n      convInfo.dilationHeight,\n      convInfo.dilationWidth,\n      convInfo.effectiveFilterHeight,\n      convInfo.effectiveFilterWidth,\n      convInfo.padInfo.top,\n      convInfo.padInfo.left,\n  );\n  return [pooled, indexes];\n}\n\nexport const maxPoolWithArgmaxConfig: KernelConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolWithArgmax as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nexport function softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Multinomial, MultinomialAttrs, MultinomialInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {softmax} from './Softmax';\n\nlet wasmMultinomial: (\n    probabilitiesId: number, batchSize: number, numEvents: number,\n    numSamples: number, seed: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMultinomial = backend.wasm.cwrap(Multinomial, null, [\n    'number',  // probabilitiesId\n    'number',  // batchSize\n    'number',  // numEvents\n    'number',  // numSamples\n    'number',  // seed\n    'number',  // outId\n  ]);\n}\n\nexport function multinomial(args: {\n  inputs: MultinomialInputs,\n  attrs: MultinomialAttrs,\n  backend: BackendWasm,\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {logits} = inputs;\n  const {numSamples, seed, normalized} = attrs;\n\n  if (logits.dtype !== 'float32') {\n    throw new Error(\n        `Tensor logits must have dtype float32, got ${logits.dtype}`);\n  }\n\n  const probabilities = normalized ? logits : softmax({\n    inputs: {logits},\n    backend,\n    attrs: {dim: logits.shape.length - 1},\n  });\n\n  const [batchSize, numEvents] = probabilities.shape;\n  const out = backend.makeOutput([batchSize, numSamples], 'int32');\n\n  wasmMultinomial(\n      backend.dataIdMap.get(probabilities.dataId).id,\n      batchSize,\n      numEvents,\n      numSamples,\n      seed,\n      backend.dataIdMap.get(out.dataId).id,\n  );\n  if (!normalized) {\n    backend.disposeData(probabilities.dataId);\n  }\n  return out;\n}\n\nexport const multinomialConfig: KernelConfig = {\n  kernelName: Multinomial,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: multinomial as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Mod} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nexport const modConfig: KernelConfig =\n    createBinaryKernelConfig(Mod, /*supportsFullBroadcast=*/true);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {dtype, depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Reciprocal} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reciprocalConfig: KernelConfig =\n    createUnaryKernelConfig(Reciprocal);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinearGrad, ResizeBilinearGradAttrs, ResizeBilinearGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinearGrad: (\n    imagesId: number, dyId: number, dxId: number, imagesShape: Uint8Array,\n    dyShape: Uint8Array, alignCorners: boolean) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinearGrad = backend.wasm.cwrap(\n      ResizeBilinearGrad, null /*void*/,\n      [\n        'number',   // imagesId\n        'number',   // dyId\n        'number',   // dxId\n        'array',    // imagesShape\n        'array',    // dyShape\n        'boolean',  // alignCorners\n      ]);\n}\n\nfunction resizeBilinearGrad(args: {\n  backend: BackendWasm; inputs: ResizeBilinearGradInputs;\n  attrs: ResizeBilinearGradAttrs;\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  const dx = backend.makeOutput(images.shape, 'float32');\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {x: images},\n      attrs: {dtype: 'float32'},\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  wasmResizeBilinearGrad(\n      backend.dataIdMap.get(images.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      new Uint8Array(new Int32Array(images.shape).buffer),\n      new Uint8Array(new Int32Array(dy.shape).buffer),\n      alignCorners,\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return dx;\n}\n\nexport const resizeBilinearGradConfig: KernelConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinearGrad as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {\n  KernelConfig,\n  KernelFunc,\n  ResizeNearestNeighbor,\n  ResizeNearestNeighborAttrs,\n  ResizeNearestNeighborInputs,\n  TensorInfo,\n  util,\n} from '@tensorflow/tfjs-core';\n\nimport { BackendWasm } from '../backend_wasm';\n\nimport { cast } from './Cast';\n\nlet wasmResizeNearestNeighbor: (\n  xId: number,\n  batch: number,\n  oldHeight: number,\n  oldWidth: number,\n  numChannels: number,\n  newHeight: number,\n  newWidth: number,\n  alignCorners: number,\n  halfPixelCenters: number,\n  outId: number\n) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighbor = backend.wasm.cwrap(\n    ResizeNearestNeighbor,\n    null /*void*/,\n    [\n      'number', // xId\n      'number', // batch\n      'number', // oldHeight\n      'number', // oldWidth\n      'number', // numChannels\n      'number', // newHeight\n      'number', // newWidth\n      'number', // alignCorners\n      'number', // halfPixelCenters\n      'number', // outId\n    ]\n  );\n}\n\nfunction resizeNearestNeighbor(args: {\n  backend: BackendWasm;\n  inputs: ResizeNearestNeighborInputs;\n  attrs: ResizeNearestNeighborAttrs;\n}): TensorInfo {\n  const { backend, inputs, attrs } = args;\n  const { images } = inputs;\n  const { alignCorners, halfPixelCenters, size } = attrs;\n\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: { x: images },\n      attrs: { dtype: 'float32' },\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const xId = xData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeNearestNeighbor(\n    xId,\n    batch,\n    oldHeight,\n    oldWidth,\n    numChannels,\n    newHeight,\n    newWidth,\n    alignCorners ? 1 : 0,\n    halfPixelCenters ? 1 : 0,\n    outId\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighbor as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeNearestNeighborGrad, ResizeNearestNeighborGradAttrs, ResizeNearestNeighborGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeNearestNeighborGrad: (\n    imagesId: number, dyId: number, dxId: number, imagesShape: Uint8Array,\n    dyShape: Uint8Array, alignCorners: boolean) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeNearestNeighborGrad = backend.wasm.cwrap(\n      ResizeNearestNeighborGrad, null /*void*/,\n      [\n        'number',   // imagesId\n        'number',   // dyId\n        'number',   // dxId\n        'array',    // imagesShape\n        'array',    // dyShape\n        'boolean',  // alignCorners\n      ]);\n}\n\nfunction resizeNearestNeighborGrad(args: {\n  backend: BackendWasm; inputs: ResizeNearestNeighborGradInputs;\n  attrs: ResizeNearestNeighborGradAttrs;\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  const dx = backend.makeOutput(images.shape, 'float32');\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {x: images},\n      attrs: {dtype: 'float32'},\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  wasmResizeNearestNeighborGrad(\n      backend.dataIdMap.get(images.dataId).id,\n      backend.dataIdMap.get(dy.dataId).id,\n      backend.dataIdMap.get(dx.dataId).id,\n      new Uint8Array(new Int32Array(images.shape).buffer),\n      new Uint8Array(new Int32Array(dy.shape).buffer),\n      alignCorners,\n  );\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return dx;\n}\n\nexport const resizeNearestNeighborGradConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighborGrad as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SearchSorted, SearchSortedAttrs, SearchSortedInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmSearchSorted: (\n    sortedSequenceId: number, valuesId: number, batchSize: number,\n    sequenceSize: number, valuesSize: number, dtype: number,\n    isSideLeft: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSearchSorted = backend.wasm.cwrap(SearchSorted, null /* void */, [\n    'number',  // sortedSequenceId\n    'number',  // valuesId\n    'number',  // batchSize\n    'number',  // sequenceSize\n    'number',  // valuesSize\n    'number',  // dtype\n    'bool',    // isSideLeft\n    'number',  // outId\n  ]);\n}\n\nfunction searchSorted(args: {\n  inputs: SearchSortedInputs,\n  backend: BackendWasm,\n  attrs: SearchSortedAttrs,\n}) {\n  const {inputs, backend, attrs} = args;\n  const {sortedSequence, values} = inputs;\n  const {side} = attrs;\n\n  if (sortedSequence.dtype !== values.dtype) {\n    throw new Error(\n        `SearchSorted error: sorted_sequence must have the same dtype as values. Got ${\n            sortedSequence.dtype} and ${values.dtype}`);\n  }\n\n  const out = backend.makeOutput(values.shape, 'int32');\n\n  function tensorId(x: TensorInfo) {\n    return backend.dataIdMap.get(x.dataId).id!;\n  }\n  wasmSearchSorted(\n      tensorId(sortedSequence),\n      tensorId(values),\n      /*batchSize=*/sortedSequence.shape[0],\n      /*sequenceSize=*/sortedSequence.shape[1],\n      /*valuesSize=*/values.shape[1],\n      /*dtype=*/CppDType[sortedSequence.dtype],\n      /*isSideLeft=*/side === 'left',\n      tensorId(out),\n  );\n\n  return out;\n}\n\nexport const searchSortedConfig: KernelConfig = {\n  kernelName: SearchSorted,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: searchSorted as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as unknown as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Selu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const seluConfig: KernelConfig = createUnaryKernelConfig(Selu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sign} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const signConfig: KernelConfig = createUnaryKernelConfig(Sign);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sinh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const sinhConfig: KernelConfig = createUnaryKernelConfig(Sinh);\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Softplus} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const softplusConfig: KernelConfig = createUnaryKernelConfig(Softplus);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\nimport {CppDType} from './types';\n\nlet wasmSparseFillEmptyRows: (\n    indicesId: number, valuesId: number, valuesDType: number,\n    indicesCount: number, denseRows: number, rank: number,\n    defaultValueId: number, outputIndicesId: number, outputValuesId: number,\n    emptyRowIndicatorId: number, reverseIndexMapId: number,\n    exceptionValuesId: number) => number;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseFillEmptyRows =\n      backend.wasm.cwrap('SparseFillEmptyRows', 'number', [\n        'number',  // indicesId\n        'number',  // valuesId\n        'number',  // valuesDType\n        'number',  // indicesCount\n        'number',  // denseRows\n        'number',  // rank\n        'number',  // defaultValueId\n        'number',  // outputIndicesId\n        'number',  // outputValuesId\n        'number',  // emptyRowIndicatorId\n        'number',  // reverseIndexMapId\n        'number',  // exceptionValuesId\n      ]);\n}\n\nexport function sparseFillEmptyRows(args: {\n  backend: BackendWasm,\n  inputs: SparseFillEmptyRowsInputs,\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0] as number;\n\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const outputIndices =\n      backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n\n  const outputValues =\n      backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId =\n      backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  const outputRows = wasmSparseFillEmptyRows(\n      indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows,\n      rank, defaultValueId, outputIndicesId, outputValuesId,\n      emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(\n              exceptionValuesArray[1]);\n      break;\n    }\n    case 2: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {x: outputIndices},\n      attrs: {begin: 0, size: [outputRows, rank]},\n      backend\n    });\n    resizedValues = slice({\n      inputs: {x: outputValues},\n      attrs: {begin: 0, size: outputRows},\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseReshape, SparseReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSparseReshape: (\n    inputIndicesId: number, inputShapeId: number, newShapeId: number,\n    nnz: number, newIndicesId: number, outputShapeId: number,\n    exceptionValuesId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, [\n    'number',  // inputIndicesId\n    'number',  // inputShapeId\n    'number',  // newShapeId\n    'number',  // nnz\n    'number',  // newIndicesId\n    'number',  // outputShapeId\n    'number',  // exceptionValuesId\n  ]);\n}\n\nfunction sparseReshape(args: {\n  backend: BackendWasm,\n  inputs: SparseReshapeInputs,\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseReshape(\n      inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId,\n      outputShapeId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseReshapeNegativeOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMultipleErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    case 4: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMismatchErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return [newIndices, outputShape];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SparseSegmentMeanInputs, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseSegmentReduction: (\n    dataId: number, dtype: number, numRow: number, indicesId: number,\n    segmentIdsId: number, outputId: number, exceptionValuesId: number,\n    isMean: boolean, defaultValue: number) => void;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseSegmentReduction =\n      backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, [\n        'number',  // dataId\n        'number',  // dtype\n        'number',  // numRow\n        'number',  // indicesId\n        'number',  // segmentIdsId\n        'number',  // outputId\n        'number',  // exceptionValuesId,\n        'number',  // isMean\n        'number',  // defaultValue\n      ]);\n}\n\nexport function sparseSegmentReduction(\n    args: {\n      backend: BackendWasm,\n      inputs: SparseSegmentSumInputs|SparseSegmentMeanInputs,\n    },\n    isMean: boolean): TensorInfo {\n  const {backend, inputs} = args;\n  const {data, indices, segmentIds} = inputs;\n\n  const numIndices = indices.shape[0];\n  const segmentIdsBack =\n      (backend.readSync(segmentIds.dataId, numIndices - 1, numIndices) as\n       Int32Array)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw (new Error(\n        backend_util\n            .getSparseSegmentReductionNegativeSegmentIdsErrorMessage()));\n  }\n\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseSegmentReduction(\n      dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId,\n      outputId, exceptionValuesId, isMean, 0);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentMean(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentMeanInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, true);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentSum(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentSumInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, false);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseToDense, SparseToDenseAttrs, SparseToDenseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseToDense: (\n    sparseIndicesId: number, sparseValuesId: number, sparseValuesRank: number,\n    defaultValueId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseToDense = backend.wasm.cwrap(SparseToDense, null /*void*/, [\n    'number',  // sparseIndicesId\n    'number',  // sparseValuesId\n    'number',  // sparseValuesRank\n    'number',  // defaultValueId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number',  // outId\n  ]);\n}\n\nfunction sparseToDense(args: {\n  backend: BackendWasm,\n  inputs: SparseToDenseInputs,\n  attrs: SparseToDenseAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {sparseIndices, sparseValues, defaultValue} = inputs;\n  const {outputShape} = attrs;\n\n  const out = backend.makeOutput(outputShape, defaultValue.dtype);\n  if (util.sizeFromShape(outputShape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n\n  const sparseIndicesId = backend.dataIdMap.get(sparseIndices.dataId).id;\n  const sparseValuesId = backend.dataIdMap.get(sparseValues.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmSparseToDense(\n      sparseIndicesId, sparseValuesId, sparseValues.shape.length,\n      defaultValueId, CppDType[defaultValue.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const sparseToDenseConfig: KernelConfig = {\n  kernelName: SparseToDense,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseToDense as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringNGramsImplCPU} from '../kernel_utils/shared';\n\nfunction stringNGrams(args: {\n  backend: BackendWasm,\n  inputs: StringNGramsInputs,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {data, dataSplits} = inputs;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences,\n  } = attrs;\n\n  const $data = backend.readSync(data.dataId) as Uint8Array[];\n  const $dataSplits = backend.readSync(dataSplits.dataId) as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImplCPU(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n\n  const nGramsOut = backend.makeOutput([nGrams.length], 'string');\n  const nGramsOutData = backend.dataIdMap.get(nGramsOut.dataId);\n  nGramsOutData.stringBytes = nGrams;\n\n  const nGramsSplitsOut = backend.makeOutput(dataSplits.shape, 'int32');\n  const nGramsSplitsOutVals = backend.typedArrayFromHeap(nGramsSplitsOut);\n  nGramsSplitsOutVals.set(nGramsSplits);\n\n  return [nGramsOut, nGramsSplitsOut];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'wasm',\n  kernelFunc: stringNGrams as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringSplit, StringSplitAttrs, StringSplitInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringSplitImplCPU} from '../kernel_utils/shared';\n\nfunction stringSplit(args: {\n  backend: BackendWasm,\n  inputs: StringSplitInputs,\n  attrs: StringSplitAttrs\n}): [TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs, attrs} = args;\n  const {input, delimiter} = inputs;\n  const {skipEmpty} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n  const delimiterVals = backend.readSync(delimiter.dataId) as Uint8Array[];\n\n  const [indices, values, shape] =\n      stringSplitImplCPU(inputVals, delimiterVals[0], skipEmpty);\n  const outputSize = values.length;\n\n  const indicesOut = backend.makeOutput([outputSize, 2], 'int32');\n  const indicesOutVals = backend.typedArrayFromHeap(indicesOut);\n  indicesOutVals.set(indices);\n\n  const valuesOut = backend.makeOutput([outputSize], 'string');\n  const valuesOutData = backend.dataIdMap.get(valuesOut.dataId);\n  valuesOutData.stringBytes = values;\n\n  const shapeOut = backend.makeOutput([2], 'int32');\n  const shapeOutVals = backend.typedArrayFromHeap(shapeOut);\n  shapeOutVals.set(shape);\n\n  return [indicesOut, valuesOut, shapeOut];\n}\n\nexport const stringSplitConfig: KernelConfig = {\n  kernelName: StringSplit,\n  backendName: 'wasm',\n  kernelFunc: stringSplit as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, TensorInfo, TensorScatterUpdate, TensorScatterUpdateAttrs, TensorScatterUpdateInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTensorScatterUpdate: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number, tensorId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTensorScatterUpdate =\n      backend.wasm.cwrap(TensorScatterUpdate, null /*void*/, [\n        'number',  // indicesId\n        'number',  // updatesId\n        'number',  // dtype\n        'number',  // sliceRank\n        'number',  // numUpdates\n        'number',  // sliceSize\n        'array',   // strides\n        'number',  // outputSize\n        'number',  // outId\n        'number',  // tensorId\n      ]);\n}\n\nfunction tensorScatterUpdate(args: {\n  backend: BackendWasm,\n  inputs: TensorScatterUpdateInputs,\n  attrs: TensorScatterUpdateAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {tensor, indices, updates} = inputs;\n  const {} = attrs;\n\n  const out = backend.makeOutput(tensor.shape, tensor.dtype);\n  if (util.sizeFromShape(tensor.shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, tensor.shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const tensorData = backend.dataIdMap.get(tensor.dataId);\n  const tensorId = tensorData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTensorScatterUpdate(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId, tensorId);\n\n  return out;\n}\n\nexport const tensorScatterUpdateConfig: KernelConfig = {\n  kernelName: TensorScatterUpdate,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tensorScatterUpdate as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, inputStrides: Uint8Array,\n    inputStridesLength: number, outputStrides: Uint8Array,\n    outputStridesLength: number, interpolationModeId: number,\n    fillModeId: number, fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // inputStrides\n    'number',  // inputStridesLength\n    'array',   // outputStrides\n    'number',  // outputStridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const inputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const outputStrides =\n      new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, inputStrides,\n      image.shape.length - 1, outputStrides, outShape.length - 1,\n      interpolationModeId, fillModeId, fillValue, outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as unknown as KernelFunc\n};\n","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, KernelFunc, TensorInfo, Unique, UniqueAttrs, UniqueInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {uniqueImplCPU} from '../kernel_utils/shared';\n\nfunction unique(\n    args: {inputs: UniqueInputs, attrs: UniqueAttrs, backend: BackendWasm}):\n    TensorInfo[] {\n  const {inputs, attrs, backend} = args;\n  const {axis} = attrs;\n  const {x} = inputs;\n\n  const {outputValues, outputShape, indices} =\n      uniqueImplCPU(backend.readSync(x.dataId), axis, x.shape, x.dtype);\n\n  return [\n    backend.makeOutput(\n        outputShape, x.dtype, /*memoryOffset=*/undefined, outputValues),\n    backend.makeOutput(\n        [indices.length], 'int32', /*memoryOffset=*/undefined, indices),\n  ];\n}\n\nexport const uniqueConfig: KernelConfig = {\n  kernelName: Unique,\n  backendName: 'wasm',\n  kernelFunc: unique as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as unknown as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {acosConfig} from './kernels/Acos';\nimport {acoshConfig} from './kernels/Acosh';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {argMinConfig} from './kernels/ArgMin';\nimport {asinConfig} from './kernels/Asin';\nimport {asinhConfig} from './kernels/Asinh';\nimport {atanConfig} from './kernels/Atan';\nimport {atan2Config} from './kernels/Atan2';\nimport {atanhConfig} from './kernels/Atanh';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {avgPool3DConfig} from './kernels/AvgPool3D';\nimport {avgPool3DGradConfig} from './kernels/AvgPool3DGrad';\nimport {avgPoolGradConfig} from './kernels/AvgPoolGrad';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {bincountConfig} from './kernels/Bincount';\nimport {bitwiseAndConfig} from './kernels/BitwiseAnd';\nimport {broadcastArgsConfig} from './kernels/BroadcastArgs';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {conv3DConfig} from './kernels/Conv3D';\nimport {conv3DBackpropFilterV2Config} from './kernels/Conv3DBackpropFilterV2';\nimport {conv3DBackpropInputV2Config} from './kernels/Conv3DBackpropInputV2';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {denseBincountConfig} from './kernels/DenseBincount';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {diagConfig} from './kernels/Diag';\nimport {dilation2DConfig} from './kernels/Dilation2D';\nimport {dilation2DBackpropFilterConfig} from './kernels/Dilation2DBackpropFilter';\nimport {dilation2DBackpropInputConfig} from './kernels/Dilation2DBackpropInput';\nimport {eluConfig} from './kernels/Elu';\nimport {eluGradConfig} from './kernels/EluGrad';\nimport {equalConfig} from './kernels/Equal';\nimport {erfConfig} from './kernels/Erf';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {expm1Config} from './kernels/Expm1';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {isFiniteConfig} from './kernels/IsFinite';\nimport {isInfConfig} from './kernels/IsInf';\nimport {isNaNConfig} from './kernels/IsNan';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {linSpaceConfig} from './kernels/LinSpace';\nimport {logConfig} from './kernels/Log';\nimport {log1pConfig} from './kernels/Log1p';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {logicalXorConfig} from './kernels/LogicalXor';\nimport {lrnConfig} from './kernels/LRN';\nimport {lrnGradConfig} from './kernels/LRNGrad';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {maxPool3DConfig} from './kernels/MaxPool3D';\nimport {maxPool3DGradConfig} from './kernels/MaxPool3DGrad';\nimport {maxPoolGradConfig} from './kernels/MaxPoolGrad';\nimport {maxPoolWithArgmaxConfig} from './kernels/MaxPoolWithArgmax';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multinomialConfig} from './kernels/Multinomial';\nimport {modConfig} from './kernels/Mod';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeBilinearGradConfig} from './kernels/ResizeBilinearGrad';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {resizeNearestNeighborGradConfig} from './kernels/ResizeNearestNeighborGrad';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {searchSortedConfig} from './kernels/SearchSorted';\nimport {selectConfig} from './kernels/Select';\nimport {seluConfig} from './kernels/Selu';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {signConfig} from './kernels/Sign';\nimport {sinConfig} from './kernels/Sin';\nimport {sinhConfig} from './kernels/Sinh';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {softplusConfig} from './kernels/Softplus';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {sparseToDenseConfig} from './kernels/SparseToDense';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tensorScatterUpdateConfig} from './kernels/TensorScatterUpdate';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {uniqueConfig} from './kernels/Unique';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  acosConfig,\n  acoshConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  argMinConfig,\n  asinConfig,\n  asinhConfig,\n  atanConfig,\n  atan2Config,\n  atanhConfig,\n  avgPoolConfig,\n  avgPoolGradConfig,\n  avgPool3DConfig,\n  avgPool3DGradConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  bincountConfig,\n  bitwiseAndConfig,\n  broadcastArgsConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  conv3DConfig,\n  conv3DBackpropFilterV2Config,\n  conv3DBackpropInputV2Config,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  denseBincountConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  diagConfig,\n  dilation2DConfig,\n  dilation2DBackpropFilterConfig,\n  dilation2DBackpropInputConfig,\n  eluConfig,\n  eluGradConfig,\n  equalConfig,\n  erfConfig,\n  expConfig,\n  expandDimsConfig,\n  expm1Config,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  isFiniteConfig,\n  isInfConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  linSpaceConfig,\n  log1pConfig,\n  logConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  logicalXorConfig,\n  lrnConfig,\n  lrnGradConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  maxPool3DConfig,\n  maxPool3DGradConfig,\n  maxPoolGradConfig,\n  maxPoolWithArgmaxConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multinomialConfig,\n  modConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeBilinearGradConfig,\n  resizeNearestNeighborConfig,\n  resizeNearestNeighborGradConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  searchSortedConfig,\n  selectConfig,\n  seluConfig,\n  sigmoidConfig,\n  signConfig,\n  sinConfig,\n  sinhConfig,\n  sliceConfig,\n  softmaxConfig,\n  softplusConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  sparseToDenseConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tensorScatterUpdateConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  uniqueConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_SIMD_SUPPORT', async () => {\n  try {\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!=\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};let nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!ENVIRONMENT_IS_NODE){read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance==\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){defaultPrint=str=>fs.writeSync(1,str+\"\\n\");defaultPrintErr=str=>fs.writeSync(2,str+\"\\n\")}var out=Module[\"print\"]||defaultPrint;var err=Module[\"printErr\"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer?heapOrArray.slice(idx,endPtr):heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":4294967296/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){err(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTLSInit(Module[\"asm\"][\"_emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function killThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0}function cancelThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];assert(worker);PThread.returnWorkerToPool(worker)}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);PThread.pthreads[threadParams.pthread_ptr]=worker;worker.pthread_ptr=threadParams.pthread_ptr;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"pthread_ptr\":threadParams.pthread_ptr};worker.runPthread=()=>{if(ENVIRONMENT_IS_NODE){worker.ref()}worker.postMessage(msg,threadParams.transferList);delete worker.runPthread};if(worker.loaded){worker.runPthread()}return 0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _proc_exit(code){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,code);EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}_proc_exit(status)}var _exit=exitJS;function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;while(pthreadPoolSize--){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var worker of Object.values(PThread.pthreads)){PThread.returnWorkerToPool(worker)}for(var worker of PThread.unusedWorkers){worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){var pthread_ptr=worker.pthread_ptr;delete PThread.pthreads[pthread_ptr];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0;if(ENVIRONMENT_IS_NODE){worker.unref()}__emscripten_thread_free_data(pthread_ptr)},receiveObjectTransfer:function(data){},threadInitTLS:function(){PThread.tlsInitFunctions.forEach(f=>f())},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread_ptr)PThread.currentProxiedOperationCallerThread=worker.pthread_ptr;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var targetWorker=PThread.pthreads[d.targetThread];if(targetWorker){targetWorker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processProxyingQueue\"){executeNotifiedProxyingQueue(d[\"queue\"])}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(ENVIRONMENT_IS_NODE){worker.unref()}if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread()}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"callHandler\"){Module[d[\"handler\"]](...d[\"args\"])}else if(cmd){err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(e){worker.onerror(e)});worker.on(\"detachedExit\",function(){})}var handlers=[];var knownHandlers=[\"onExit\",\"onAbort\",\"print\",\"printErr\"];for(var handler of knownHandlers){if(Module.hasOwnProperty(handler)){handlers.push(handler)}}worker.postMessage({\"cmd\":\"load\",\"handlers\":handlers,\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var worker;var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");worker=new Worker(pthreadMainJs);PThread.unusedWorkers.push(worker)},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};Module[\"PThread\"]=PThread;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+52>>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+56>>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){var result=getWasmTableEntry(ptr)(arg);if(keepRuntimeAlive()){PThread.setExitStatus(result)}else{__emscripten_thread_exit(result)}}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function registerTLSInit(tlsInitFunc){PThread.tlsInitFunctions.push(tlsInitFunc)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInitTLS()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,pthread_ptr,attr,startRoutine,arg);return ___pthread_create_js(pthread_ptr,attr,startRoutine,arg)}function ___pthread_create_js(pthread_ptr,attr,startRoutine,arg){if(typeof SharedArrayBuffer==\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg)}if(error)return error;var threadParams={startRoutine:startRoutine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 65536}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function executeNotifiedProxyingQueue(queue){Atomics.store(GROWABLE_HEAP_I32(),queue>>2,1);if(_pthread_self()){__emscripten_proxy_execute_task_queue(queue)}Atomics.compareExchange(GROWABLE_HEAP_I32(),queue>>2,1,0)}Module[\"executeNotifiedProxyingQueue\"]=executeNotifiedProxyingQueue;function __emscripten_notify_task_queue(targetThreadId,currThreadId,mainThreadId,queue){if(targetThreadId==currThreadId){setTimeout(()=>executeNotifiedProxyingQueue(queue))}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processProxyingQueue\",\"queue\":queue})}else{var worker=PThread.pthreads[targetThreadId];if(!worker){return}worker.postMessage({\"cmd\":\"processProxyingQueue\",\"queue\":queue})}return 1}function __emscripten_set_offscreencanvas_size(target,width,height){return-1}function _abort(){abort(\"\")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text=\"warning: \"+text;err(text)}}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.timeOrigin+performance.now();function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest>>>0,src>>>0,src+num>>>0)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(()=>{var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i>>>0]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i>>>0]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd);return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,offset_low,offset_high,whence,newOffset);return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_U32()[iov>>>2];var len=GROWABLE_HEAP_U32()[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,GROWABLE_HEAP_U8()[ptr+j>>>0])}num+=len}GROWABLE_HEAP_U32()[pnum>>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer>>>0)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}PThread.init();var proxiedFunctionTable=[null,_proc_exit,exitOnMainThread,pthreadCreateProxied,_fd_close,_fd_seek,_fd_write];var asmLibraryArg={\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_get_now_is_monotonic\":__emscripten_get_now_is_monotonic,\"_emscripten_notify_task_queue\":__emscripten_notify_task_queue,\"_emscripten_set_offscreencanvas_size\":__emscripten_set_offscreencanvas_size,\"abort\":_abort,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_date_now\":_emscripten_date_now,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_num_logical_cores\":_emscripten_num_logical_cores,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory||Module[\"wasmMemory\"]};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Acos=Module[\"_Acos\"]=function(){return(_Acos=Module[\"_Acos\"]=Module[\"asm\"][\"Acos\"]).apply(null,arguments)};var _Acosh=Module[\"_Acosh\"]=function(){return(_Acosh=Module[\"_Acosh\"]=Module[\"asm\"][\"Acosh\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _ArgMin=Module[\"_ArgMin\"]=function(){return(_ArgMin=Module[\"_ArgMin\"]=Module[\"asm\"][\"ArgMin\"]).apply(null,arguments)};var _Asin=Module[\"_Asin\"]=function(){return(_Asin=Module[\"_Asin\"]=Module[\"asm\"][\"Asin\"]).apply(null,arguments)};var _Asinh=Module[\"_Asinh\"]=function(){return(_Asinh=Module[\"_Asinh\"]=Module[\"asm\"][\"Asinh\"]).apply(null,arguments)};var _Atan=Module[\"_Atan\"]=function(){return(_Atan=Module[\"_Atan\"]=Module[\"asm\"][\"Atan\"]).apply(null,arguments)};var _Atan2=Module[\"_Atan2\"]=function(){return(_Atan2=Module[\"_Atan2\"]=Module[\"asm\"][\"Atan2\"]).apply(null,arguments)};var _Atanh=Module[\"_Atanh\"]=function(){return(_Atanh=Module[\"_Atanh\"]=Module[\"asm\"][\"Atanh\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _AvgPool3D=Module[\"_AvgPool3D\"]=function(){return(_AvgPool3D=Module[\"_AvgPool3D\"]=Module[\"asm\"][\"AvgPool3D\"]).apply(null,arguments)};var _AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=function(){return(_AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null,arguments)};var _AvgPoolGrad=Module[\"_AvgPoolGrad\"]=function(){return(_AvgPoolGrad=Module[\"_AvgPoolGrad\"]=Module[\"asm\"][\"AvgPoolGrad\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Bincount=Module[\"_Bincount\"]=function(){return(_Bincount=Module[\"_Bincount\"]=Module[\"asm\"][\"Bincount\"]).apply(null,arguments)};var _BitwiseAnd=Module[\"_BitwiseAnd\"]=function(){return(_BitwiseAnd=Module[\"_BitwiseAnd\"]=Module[\"asm\"][\"BitwiseAnd\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Conv3D=Module[\"_Conv3D\"]=function(){return(_Conv3D=Module[\"_Conv3D\"]=Module[\"asm\"][\"Conv3D\"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=function(){return(_Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=function(){return(_Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DenseBincount=Module[\"_DenseBincount\"]=function(){return(_DenseBincount=Module[\"_DenseBincount\"]=Module[\"asm\"][\"DenseBincount\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Diag=Module[\"_Diag\"]=function(){return(_Diag=Module[\"_Diag\"]=Module[\"asm\"][\"Diag\"]).apply(null,arguments)};var _Dilation2D=Module[\"_Dilation2D\"]=function(){return(_Dilation2D=Module[\"_Dilation2D\"]=Module[\"asm\"][\"Dilation2D\"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=function(){return(_Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=function(){return(_Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _EluGrad=Module[\"_EluGrad\"]=function(){return(_EluGrad=Module[\"_EluGrad\"]=Module[\"asm\"][\"EluGrad\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Erf=Module[\"_Erf\"]=function(){return(_Erf=Module[\"_Erf\"]=Module[\"asm\"][\"Erf\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _Expm1=Module[\"_Expm1\"]=function(){return(_Expm1=Module[\"_Expm1\"]=Module[\"asm\"][\"Expm1\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsFinite=Module[\"_IsFinite\"]=function(){return(_IsFinite=Module[\"_IsFinite\"]=Module[\"asm\"][\"IsFinite\"]).apply(null,arguments)};var _IsInf=Module[\"_IsInf\"]=function(){return(_IsInf=Module[\"_IsInf\"]=Module[\"asm\"][\"IsInf\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LRN=Module[\"_LRN\"]=function(){return(_LRN=Module[\"_LRN\"]=Module[\"asm\"][\"LRN\"]).apply(null,arguments)};var _LRNGrad=Module[\"_LRNGrad\"]=function(){return(_LRNGrad=Module[\"_LRNGrad\"]=Module[\"asm\"][\"LRNGrad\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _LinSpace=Module[\"_LinSpace\"]=function(){return(_LinSpace=Module[\"_LinSpace\"]=Module[\"asm\"][\"LinSpace\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _Log1p=Module[\"_Log1p\"]=function(){return(_Log1p=Module[\"_Log1p\"]=Module[\"asm\"][\"Log1p\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _MaxPool3D=Module[\"_MaxPool3D\"]=function(){return(_MaxPool3D=Module[\"_MaxPool3D\"]=Module[\"asm\"][\"MaxPool3D\"]).apply(null,arguments)};var _MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=function(){return(_MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null,arguments)};var _MaxPoolGrad=Module[\"_MaxPoolGrad\"]=function(){return(_MaxPoolGrad=Module[\"_MaxPoolGrad\"]=Module[\"asm\"][\"MaxPoolGrad\"]).apply(null,arguments)};var _MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=function(){return(_MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Mod=Module[\"_Mod\"]=function(){return(_Mod=Module[\"_Mod\"]=Module[\"asm\"][\"Mod\"]).apply(null,arguments)};var _Multinomial=Module[\"_Multinomial\"]=function(){return(_Multinomial=Module[\"_Multinomial\"]=Module[\"asm\"][\"Multinomial\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=function(){return(_ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=function(){return(_ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SearchSorted=Module[\"_SearchSorted\"]=function(){return(_SearchSorted=Module[\"_SearchSorted\"]=Module[\"asm\"][\"SearchSorted\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Selu=Module[\"_Selu\"]=function(){return(_Selu=Module[\"_Selu\"]=Module[\"asm\"][\"Selu\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sign=Module[\"_Sign\"]=function(){return(_Sign=Module[\"_Sign\"]=Module[\"asm\"][\"Sign\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Sinh=Module[\"_Sinh\"]=function(){return(_Sinh=Module[\"_Sinh\"]=Module[\"asm\"][\"Sinh\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _Softplus=Module[\"_Softplus\"]=function(){return(_Softplus=Module[\"_Softplus\"]=Module[\"asm\"][\"Softplus\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _SparseToDense=Module[\"_SparseToDense\"]=function(){return(_SparseToDense=Module[\"_SparseToDense\"]=Module[\"asm\"][\"SparseToDense\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=function(){return(_TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var __emscripten_tls_init=Module[\"__emscripten_tls_init\"]=function(){return(__emscripten_tls_init=Module[\"__emscripten_tls_init\"]=Module[\"asm\"][\"_emscripten_tls_init\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var __emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=function(){return(__emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=function(){return(__emscripten_proxy_execute_task_queue=Module[\"__emscripten_proxy_execute_task_queue\"]=Module[\"asm\"][\"_emscripten_proxy_execute_task_queue\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"wasmMemory\"]=wasmMemory;Module[\"cwrap\"]=cwrap;Module[\"ExitStatus\"]=ExitStatus;Module[\"PThread\"]=PThread;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();startWorker(Module);return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","module.exports.wasmWorkerContents = `\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",data=>onmessage({data:data}));var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\")+\"//# sourceURL=\"+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({\"cmd\":\"loaded\"})};self.onmessage=e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:\"callHandler\",handler:handler,args:[...arguments]})}}Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob==\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd===\"run\"){Module[\"__emscripten_thread_init\"](e.data.pthread_ptr,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module[\"executeNotifiedProxyingQueue\"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processProxyingQueue\"){if(initializedJS){Module[\"executeNotifiedProxyingQueue\"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}};`;","\nvar WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!=\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _abort(){abort(\"\")}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2];var len=HEAPU32[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer>>>0)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var asmLibraryArg={\"abort\":_abort,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Acos=Module[\"_Acos\"]=function(){return(_Acos=Module[\"_Acos\"]=Module[\"asm\"][\"Acos\"]).apply(null,arguments)};var _Acosh=Module[\"_Acosh\"]=function(){return(_Acosh=Module[\"_Acosh\"]=Module[\"asm\"][\"Acosh\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _ArgMin=Module[\"_ArgMin\"]=function(){return(_ArgMin=Module[\"_ArgMin\"]=Module[\"asm\"][\"ArgMin\"]).apply(null,arguments)};var _Asin=Module[\"_Asin\"]=function(){return(_Asin=Module[\"_Asin\"]=Module[\"asm\"][\"Asin\"]).apply(null,arguments)};var _Asinh=Module[\"_Asinh\"]=function(){return(_Asinh=Module[\"_Asinh\"]=Module[\"asm\"][\"Asinh\"]).apply(null,arguments)};var _Atan=Module[\"_Atan\"]=function(){return(_Atan=Module[\"_Atan\"]=Module[\"asm\"][\"Atan\"]).apply(null,arguments)};var _Atan2=Module[\"_Atan2\"]=function(){return(_Atan2=Module[\"_Atan2\"]=Module[\"asm\"][\"Atan2\"]).apply(null,arguments)};var _Atanh=Module[\"_Atanh\"]=function(){return(_Atanh=Module[\"_Atanh\"]=Module[\"asm\"][\"Atanh\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _AvgPool3D=Module[\"_AvgPool3D\"]=function(){return(_AvgPool3D=Module[\"_AvgPool3D\"]=Module[\"asm\"][\"AvgPool3D\"]).apply(null,arguments)};var _AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=function(){return(_AvgPool3DGrad=Module[\"_AvgPool3DGrad\"]=Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null,arguments)};var _AvgPoolGrad=Module[\"_AvgPoolGrad\"]=function(){return(_AvgPoolGrad=Module[\"_AvgPoolGrad\"]=Module[\"asm\"][\"AvgPoolGrad\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Bincount=Module[\"_Bincount\"]=function(){return(_Bincount=Module[\"_Bincount\"]=Module[\"asm\"][\"Bincount\"]).apply(null,arguments)};var _BitwiseAnd=Module[\"_BitwiseAnd\"]=function(){return(_BitwiseAnd=Module[\"_BitwiseAnd\"]=Module[\"asm\"][\"BitwiseAnd\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Conv3D=Module[\"_Conv3D\"]=function(){return(_Conv3D=Module[\"_Conv3D\"]=Module[\"asm\"][\"Conv3D\"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=function(){return(_Conv3DBackpropFilterV2=Module[\"_Conv3DBackpropFilterV2\"]=Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=function(){return(_Conv3DBackpropInputV2=Module[\"_Conv3DBackpropInputV2\"]=Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DenseBincount=Module[\"_DenseBincount\"]=function(){return(_DenseBincount=Module[\"_DenseBincount\"]=Module[\"asm\"][\"DenseBincount\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Diag=Module[\"_Diag\"]=function(){return(_Diag=Module[\"_Diag\"]=Module[\"asm\"][\"Diag\"]).apply(null,arguments)};var _Dilation2D=Module[\"_Dilation2D\"]=function(){return(_Dilation2D=Module[\"_Dilation2D\"]=Module[\"asm\"][\"Dilation2D\"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=function(){return(_Dilation2DBackpropFilter=Module[\"_Dilation2DBackpropFilter\"]=Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=function(){return(_Dilation2DBackpropInput=Module[\"_Dilation2DBackpropInput\"]=Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _EluGrad=Module[\"_EluGrad\"]=function(){return(_EluGrad=Module[\"_EluGrad\"]=Module[\"asm\"][\"EluGrad\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Erf=Module[\"_Erf\"]=function(){return(_Erf=Module[\"_Erf\"]=Module[\"asm\"][\"Erf\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _Expm1=Module[\"_Expm1\"]=function(){return(_Expm1=Module[\"_Expm1\"]=Module[\"asm\"][\"Expm1\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _IsFinite=Module[\"_IsFinite\"]=function(){return(_IsFinite=Module[\"_IsFinite\"]=Module[\"asm\"][\"IsFinite\"]).apply(null,arguments)};var _IsInf=Module[\"_IsInf\"]=function(){return(_IsInf=Module[\"_IsInf\"]=Module[\"asm\"][\"IsInf\"]).apply(null,arguments)};var _IsNan=Module[\"_IsNan\"]=function(){return(_IsNan=Module[\"_IsNan\"]=Module[\"asm\"][\"IsNan\"]).apply(null,arguments)};var _LRN=Module[\"_LRN\"]=function(){return(_LRN=Module[\"_LRN\"]=Module[\"asm\"][\"LRN\"]).apply(null,arguments)};var _LRNGrad=Module[\"_LRNGrad\"]=function(){return(_LRNGrad=Module[\"_LRNGrad\"]=Module[\"asm\"][\"LRNGrad\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _LinSpace=Module[\"_LinSpace\"]=function(){return(_LinSpace=Module[\"_LinSpace\"]=Module[\"asm\"][\"LinSpace\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _Log1p=Module[\"_Log1p\"]=function(){return(_Log1p=Module[\"_Log1p\"]=Module[\"asm\"][\"Log1p\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _LogicalNot=Module[\"_LogicalNot\"]=function(){return(_LogicalNot=Module[\"_LogicalNot\"]=Module[\"asm\"][\"LogicalNot\"]).apply(null,arguments)};var _LogicalOr=Module[\"_LogicalOr\"]=function(){return(_LogicalOr=Module[\"_LogicalOr\"]=Module[\"asm\"][\"LogicalOr\"]).apply(null,arguments)};var _LogicalXor=Module[\"_LogicalXor\"]=function(){return(_LogicalXor=Module[\"_LogicalXor\"]=Module[\"asm\"][\"LogicalXor\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _MaxPool3D=Module[\"_MaxPool3D\"]=function(){return(_MaxPool3D=Module[\"_MaxPool3D\"]=Module[\"asm\"][\"MaxPool3D\"]).apply(null,arguments)};var _MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=function(){return(_MaxPool3DGrad=Module[\"_MaxPool3DGrad\"]=Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null,arguments)};var _MaxPoolGrad=Module[\"_MaxPoolGrad\"]=function(){return(_MaxPoolGrad=Module[\"_MaxPoolGrad\"]=Module[\"asm\"][\"MaxPoolGrad\"]).apply(null,arguments)};var _MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=function(){return(_MaxPoolWithArgmax=Module[\"_MaxPoolWithArgmax\"]=Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Mod=Module[\"_Mod\"]=function(){return(_Mod=Module[\"_Mod\"]=Module[\"asm\"][\"Mod\"]).apply(null,arguments)};var _Multinomial=Module[\"_Multinomial\"]=function(){return(_Multinomial=Module[\"_Multinomial\"]=Module[\"asm\"][\"Multinomial\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Reciprocal=Module[\"_Reciprocal\"]=function(){return(_Reciprocal=Module[\"_Reciprocal\"]=Module[\"asm\"][\"Reciprocal\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=function(){return(_ResizeBilinearGrad=Module[\"_ResizeBilinearGrad\"]=Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=function(){return(_ResizeNearestNeighbor=Module[\"_ResizeNearestNeighbor\"]=Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=function(){return(_ResizeNearestNeighborGrad=Module[\"_ResizeNearestNeighborGrad\"]=Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SearchSorted=Module[\"_SearchSorted\"]=function(){return(_SearchSorted=Module[\"_SearchSorted\"]=Module[\"asm\"][\"SearchSorted\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Selu=Module[\"_Selu\"]=function(){return(_Selu=Module[\"_Selu\"]=Module[\"asm\"][\"Selu\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sign=Module[\"_Sign\"]=function(){return(_Sign=Module[\"_Sign\"]=Module[\"asm\"][\"Sign\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Sinh=Module[\"_Sinh\"]=function(){return(_Sinh=Module[\"_Sinh\"]=Module[\"asm\"][\"Sinh\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _Softplus=Module[\"_Softplus\"]=function(){return(_Softplus=Module[\"_Softplus\"]=Module[\"asm\"][\"Softplus\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _SparseToDense=Module[\"_SparseToDense\"]=function(){return(_SparseToDense=Module[\"_SparseToDense\"]=Module[\"asm\"][\"SparseToDense\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=function(){return(_TensorScatterUpdate=Module[\"_TensorScatterUpdate\"]=Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport * as wasmFactoryThreadedSimd_import from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport * as wasmFactory_import from '../wasm-out/tfjs-backend-wasm.js';\n\n// This workaround is required for importing in Node.js without using\n// the node bundle (for testing). This would not be necessary if we\n// flipped esModuleInterop to true, but we likely can't do that since\n// google3 does not use it.\nconst wasmFactoryThreadedSimd = (wasmFactoryThreadedSimd_import.default ||\n                                 wasmFactoryThreadedSimd_import) as\n    typeof wasmFactoryThreadedSimd_import.default;\nconst wasmFactory = (wasmFactory_import.default || wasmFactory_import) as\n    typeof wasmFactory_import.default;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  override write(\n      values: backend_util.BackendValues|null, shape: number[],\n      dtype: DataType): DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  override numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  override async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  override move(\n      dataId: DataId, values: backend_util.BackendValues|null, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n\n    // `>>> 0` is needed for above 2GB allocations because wasm._malloc returns\n    // a signed int32 instead of an unsigned int32.\n    // https://v8.dev/blog/4gb-wasm-memory\n    const memoryOffset = this.wasm._malloc(numBytes) >>> 0;\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  override async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  override readSync(dataId: DataId, start?: number, end?: number):\n      backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) &&\n          (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset + start * bytesPerElement,\n        memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  override disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  override refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  override incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  override floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  override dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  override memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(\n      shape: number[], dtype: DataType, memoryOffset?: number,\n      values?: backend_util.BackendValues): TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(values ?? null, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = (wasmWorkerContents as string).replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The `wasm` promise will resolve to the WASM module created by\n    // the factory, but it might have had errors during creation. Most\n    // errors are caught by the onAbort callback defined above.\n    // However, some errors, such as those occurring from a\n    // failed fetch, result in this promise being rejected. These are\n    // caught and re-rejected below.\n    wasm.then((module) => {\n          initialized = true;\n          initAborted = false;\n\n          const voidReturnType: string = null;\n          // Using the tfjs namespace to avoid conflict with emscripten's API.\n          module.tfjs = {\n            init: module.cwrap('init', null, []),\n            initWithThreadsCount:\n                module.cwrap('init_with_threads_count', null, ['number']),\n            getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n            registerTensor: module.cwrap(\n                'register_tensor', null,\n                [\n                  'number',  // id\n                  'number',  // size\n                  'number',  // memoryOffset\n                ]),\n            disposeData:\n                module.cwrap('dispose_data', voidReturnType, ['number']),\n            dispose: module.cwrap('dispose', voidReturnType, []),\n          };\n\n          resolve({wasm: module});\n        })\n        .catch(reject);\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '4.22.0';\nexport {version};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n"],"names":["setup","_FusedMatMul","broadcast_util","util","Abs","Acos","Acosh","backend_util","Add","wasmFunc","setupFunc","AddN","tensor","Identity","Transpose","All","Any","ArgMax","ArgMin","Asin","Asinh","Atan","Atan2","Atanh","AvgPool","AvgPool3D","AvgPool3DGrad","AvgPoolGrad","Reshape","BatchMatMul","slice_util","buffer","TensorBuffer","sliceImplCPU","Slice","BatchToSpaceND","Bincount","BitwiseAnd","BroadcastArgs","Cast","Ceil","ClipByValue","concatImplCPU","Concat","Conv2D","Conv2DBackpropInput","Conv3D","Conv3DBackpropFilterV2","Conv3DBackpropInputV2","Cos","Cosh","CropAndResize","Cumprod","Cumsum","DenseBincount","DepthToSpace","DepthwiseConv2dNative","Diag","Dilation2D","Dilation2DBackpropFilter","Dilation2DBackpropInput","Elu","EluGrad","supportsFullBroadcast","Equal","Erf","Exp","ExpandDims","Expm1","Fill","FlipLeftRight","Floor","FloorDiv","FusedBatchNorm","FusedConv2D","FusedDepthwiseConv2D","GatherNd","gather_util","GatherV2","Greater","GreaterEqual","IsFinite","IsInf","IsNan","LeakyRelu","Less","LessEqual","LinSpace","Log","Log1p","LogicalAnd","LogicalNot","LogicalOr","LogicalXor","LRN","LRNGrad","Max","Maximum","MaxPool","MaxPool3D","MaxPool3DGrad","MaxPoolGrad","MaxPoolWithArgmax","Mean","Min","Minimum","MirrorPad","Softmax","Multinomial","Mod","Multiply","Neg","NonMaxSuppressionV3","kernelFunc","NonMaxSuppressionV4","NonMaxSuppressionV5","NotEqual","OneHot","OnesLike","Pack","PadV2","Pow","Prelu","Prod","rangeImplCPU","Range","RealDiv","Reciprocal","Relu","Relu6","ResizeBilinear","ResizeBilinearGrad","ResizeNearestNeighbor","ResizeNearestNeighborGrad","Reverse","RotateWithOffset","Round","Rsqrt","ScatterNd","scatter_util","SearchSorted","Select","Selu","Sigmoid","Sign","Sin","Sinh","Softplus","SpaceToBatchND","SparseFillEmptyRows","SparseReshape","SparseSegmentMean","SparseSegmentSum","SparseToDense","SplitV","Sqrt","Square","SquaredDifference","Step","StridedSlice","stringNGramsImplCPU","StringNGrams","stringSplitImplCPU","StringSplit","stringToHashBucketFastImplCPU","StringToHashBucketFast","Sub","Sum","Tan","Tanh","TensorScatterUpdate","Tile","TopK","Transform","uniqueImplCPU","Unique","Unpack","ZerosLike","registerKernel","env","commonjsHelpers.commonjsGlobal","wasmFactoryThreadedSimd_import.default","wasmFactory_import.default","DataStorage","engine","KernelBackend","deprecationWarn","registerBackend"],"mappings":"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","x_google_ignoreList":[0]}