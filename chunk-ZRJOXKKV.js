import{a as z4}from"./chunk-W4N23HQE.js";import{a as nk}from"./chunk-46XN3E3W.js";import{e as rk,g as Kd}from"./chunk-NYXDIFHX.js";import"./chunk-PKQDKLAP.js";import{q as ek}from"./chunk-ATYHLBKA.js";import{Bb as QN,Cb as Qn,Da as ZN,Db as Rn,Eb as tk,Fb as Fu,Gb as Nl,Hb as qd,Nb as Xc,Va as JN,_a as TC,bc as $e,fb as Hd,ya as YN}from"./chunk-PMUBQ4SH.js";import{d as _r,e as de,f as Sl}from"./chunk-DAQOROHW.js";var kk=_r((Nut,Nk)=>{"use strict";Nk.exports=qe;var go=null;try{go=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function qe(r,e,t){this.low=r|0,this.high=e|0,this.unsigned=!!t}qe.prototype.__isLong__;Object.defineProperty(qe.prototype,"__isLong__",{value:!0});function Pn(r){return(r&&r.__isLong__)===!0}qe.isLong=Pn;var gk={},xk={};function Bu(r,e){var t,n,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(n=xk[r],n)?n:(t=Ke(r,(r|0)<0?-1:0,!0),o&&(xk[r]=t),t)):(r|=0,(o=-128<=r&&r<128)&&(n=gk[r],n)?n:(t=Ke(r,r<0?-1:0,!1),o&&(gk[r]=t),t))}qe.fromInt=Bu;function xo(r,e){if(isNaN(r))return e?zu:yo;if(e){if(r<0)return zu;if(r>=vk)return Sk}else{if(r<=-bk)return On;if(r+1>=bk)return Ik}return r<0?xo(-r,e).neg():Ke(r%xp|0,r/xp|0,e)}qe.fromNumber=xo;function Ke(r,e,t){return new qe(r,e,t)}qe.fromBits=Ke;var Jd=Math.pow;function VC(r,e,t){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return yo;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return VC(r.substring(1),e,t).neg();for(var o=xo(Jd(t,8)),s=yo,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),u=parseInt(r.substring(i,i+a),t);if(a<8){var l=xo(Jd(t,a));s=s.mul(l).add(xo(u))}else s=s.mul(o),s=s.add(xo(u))}return s.unsigned=e,s}qe.fromString=VC;function ei(r,e){return typeof r=="number"?xo(r,e):typeof r=="string"?VC(r,e):Ke(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}qe.fromValue=ei;var yk=65536,lH=1<<24,xp=yk*yk,vk=xp*xp,bk=vk/2,wk=Bu(lH),yo=Bu(0);qe.ZERO=yo;var zu=Bu(0,!0);qe.UZERO=zu;var gp=Bu(1);qe.ONE=gp;var Ck=Bu(1,!0);qe.UONE=Ck;var BC=Bu(-1);qe.NEG_ONE=BC;var Ik=Ke(-1,2147483647,!1);qe.MAX_VALUE=Ik;var Sk=Ke(-1,-1,!0);qe.MAX_UNSIGNED_VALUE=Sk;var On=Ke(0,-2147483648,!1);qe.MIN_VALUE=On;var gt=qe.prototype;gt.toInt=function(){return this.unsigned?this.low>>>0:this.low};gt.toNumber=function(){return this.unsigned?(this.high>>>0)*xp+(this.low>>>0):this.high*xp+(this.low>>>0)};gt.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(On)){var t=xo(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=xo(Jd(e,6),this.unsigned),i=this,a="";;){var u=i.div(s),l=i.sub(u.mul(s)).toInt()>>>0,c=l.toString(e);if(i=u,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};gt.getHighBits=function(){return this.high};gt.getHighBitsUnsigned=function(){return this.high>>>0};gt.getLowBits=function(){return this.low};gt.getLowBitsUnsigned=function(){return this.low>>>0};gt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(On)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};gt.isZero=function(){return this.high===0&&this.low===0};gt.eqz=gt.isZero;gt.isNegative=function(){return!this.unsigned&&this.high<0};gt.isPositive=function(){return this.unsigned||this.high>=0};gt.isOdd=function(){return(this.low&1)===1};gt.isEven=function(){return(this.low&1)===0};gt.equals=function(e){return Pn(e)||(e=ei(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};gt.eq=gt.equals;gt.notEquals=function(e){return!this.eq(e)};gt.neq=gt.notEquals;gt.ne=gt.notEquals;gt.lessThan=function(e){return this.comp(e)<0};gt.lt=gt.lessThan;gt.lessThanOrEqual=function(e){return this.comp(e)<=0};gt.lte=gt.lessThanOrEqual;gt.le=gt.lessThanOrEqual;gt.greaterThan=function(e){return this.comp(e)>0};gt.gt=gt.greaterThan;gt.greaterThanOrEqual=function(e){return this.comp(e)>=0};gt.gte=gt.greaterThanOrEqual;gt.ge=gt.greaterThanOrEqual;gt.compare=function(e){if(Pn(e)||(e=ei(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};gt.comp=gt.compare;gt.negate=function(){return!this.unsigned&&this.eq(On)?On:this.not().add(gp)};gt.neg=gt.negate;gt.add=function(e){Pn(e)||(e=ei(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,c=0,p=0,m=0,f=0;return f+=s+l,m+=f>>>16,f&=65535,m+=o+u,p+=m>>>16,m&=65535,p+=n+a,c+=p>>>16,p&=65535,c+=t+i,c&=65535,Ke(m<<16|f,c<<16|p,this.unsigned)};gt.subtract=function(e){return Pn(e)||(e=ei(e)),this.add(e.neg())};gt.sub=gt.subtract;gt.multiply=function(e){if(this.isZero())return yo;if(Pn(e)||(e=ei(e)),go){var t=go.mul(this.low,this.high,e.low,e.high);return Ke(t,go.get_high(),this.unsigned)}if(e.isZero())return yo;if(this.eq(On))return e.isOdd()?On:yo;if(e.eq(On))return this.isOdd()?On:yo;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(wk)&&e.lt(wk))return xo(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,c=e.low&65535,p=0,m=0,f=0,d=0;return d+=i*c,f+=d>>>16,d&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*l,m+=f>>>16,f&=65535,m+=o*c,p+=m>>>16,m&=65535,m+=s*l,p+=m>>>16,m&=65535,m+=i*u,p+=m>>>16,m&=65535,p+=n*c+o*l+s*u+i*a,p&=65535,Ke(f<<16|d,p<<16|m,this.unsigned)};gt.mul=gt.multiply;gt.divide=function(e){if(Pn(e)||(e=ei(e)),e.isZero())throw Error("division by zero");if(go){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?go.div_u:go.div_s)(this.low,this.high,e.low,e.high);return Ke(t,go.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?zu:yo;var n,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return zu;if(e.gt(this.shru(1)))return Ck;s=zu}else{if(this.eq(On)){if(e.eq(gp)||e.eq(BC))return On;if(e.eq(On))return gp;var i=this.shr(1);return n=i.div(e).shl(1),n.eq(yo)?e.isNegative()?gp:BC:(o=this.sub(e.mul(n)),s=n.add(o.div(e)),s)}else if(e.eq(On))return this.unsigned?zu:yo;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=yo}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),u=a<=48?1:Jd(2,a-48),l=xo(n),c=l.mul(e);c.isNegative()||c.gt(o);)n-=u,l=xo(n,this.unsigned),c=l.mul(e);l.isZero()&&(l=gp),s=s.add(l),o=o.sub(c)}return s};gt.div=gt.divide;gt.modulo=function(e){if(Pn(e)||(e=ei(e)),go){var t=(this.unsigned?go.rem_u:go.rem_s)(this.low,this.high,e.low,e.high);return Ke(t,go.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};gt.mod=gt.modulo;gt.rem=gt.modulo;gt.not=function(){return Ke(~this.low,~this.high,this.unsigned)};gt.and=function(e){return Pn(e)||(e=ei(e)),Ke(this.low&e.low,this.high&e.high,this.unsigned)};gt.or=function(e){return Pn(e)||(e=ei(e)),Ke(this.low|e.low,this.high|e.high,this.unsigned)};gt.xor=function(e){return Pn(e)||(e=ei(e)),Ke(this.low^e.low,this.high^e.high,this.unsigned)};gt.shiftLeft=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ke(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ke(0,this.low<<e-32,this.unsigned)};gt.shl=gt.shiftLeft;gt.shiftRight=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ke(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ke(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};gt.shr=gt.shiftRight;gt.shiftRightUnsigned=function(e){if(Pn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return Ke(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ke(t,0,this.unsigned):Ke(t>>>e-32,0,this.unsigned)};gt.shru=gt.shiftRightUnsigned;gt.shr_u=gt.shiftRightUnsigned;gt.toSigned=function(){return this.unsigned?Ke(this.low,this.high,!1):this};gt.toUnsigned=function(){return this.unsigned?this:Ke(this.low,this.high,!0)};gt.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};gt.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};gt.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};qe.fromBytes=function(e,t,n){return n?qe.fromBytesLE(e,t):qe.fromBytesBE(e,t)};qe.fromBytesLE=function(e,t){return new qe(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};qe.fromBytesBE=function(e,t){return new qe(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}});var xT=_r((kp,gT)=>{"use strict";var KH=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")},Xu=KH();gT.exports=kp=Xu.fetch;Xu.fetch&&(kp.default=Xu.fetch.bind(Xu));kp.Headers=Xu.Headers;kp.Request=Xu.Request;kp.Response=Xu.Response});var yT=_r(()=>{"use strict"});var KT=_r((qT,hI)=>{"use strict";(function(r,e,t){function n(a){var u=this,l=i();u.next=function(){var c=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=c-(u.c=c|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(a),u.s0<0&&(u.s0+=1),u.s1-=l(a),u.s1<0&&(u.s1+=1),u.s2-=l(a),u.s2<0&&(u.s2+=1),l=null}function o(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function s(a,u){var l=new n(a),c=u&&u.state,p=l.next;return p.int32=function(){return l.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,l),p.state=function(){return o(l,{})}),p}function i(){var a=4022871197,u=function(l){l=String(l);for(var c=0;c<l.length;c++){a+=l.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(qT,typeof hI=="object"&&hI,typeof define=="function"&&define)});var XT=_r((jT,gI)=>{"use strict";(function(r,e,t){function n(i){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(jT,typeof gI=="object"&&gI,typeof define=="function"&&define)});var ZT=_r((YT,xI)=>{"use strict";(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,l==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(YT,typeof xI=="object"&&xI,typeof define=="function"&&define)});var QT=_r((JT,yI)=>{"use strict";(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.x,c=a.i,p,m,f;return p=l[c],p^=p>>>7,m=p^p<<24,p=l[c+1&7],m^=p^p>>>10,p=l[c+3&7],m^=p^p>>>3,p=l[c+4&7],m^=p^p<<7,p=l[c+7&7],p=p^p<<13,m^=p^p<<9,l[c]=m,a.i=c+1&7,m};function u(l,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],l.x=f,l.i=0,p=256;p>0;--p)l.next()}u(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(l.x&&o(l,u),c.state=function(){return o(u,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(JT,typeof yI=="object"&&yI,typeof define=="function"&&define)});var e1=_r((t1,bI)=>{"use strict";(function(r,e,t){function n(i){var a=this;a.next=function(){var l=a.w,c=a.X,p=a.i,m,f;return a.w=l=l+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,a.i=p,f+(l^l>>>16)|0};function u(l,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;l.w=h,l.X=g,l.i=f}u(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(l.X&&o(l,u),c.state=function(){return o(u,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(t1,typeof bI=="object"&&bI,typeof define=="function"&&define)});var n1=_r((r1,wI)=>{"use strict";(function(r,e,t){function n(i){var a=this,u="";a.next=function(){var c=a.b,p=a.c,m=a.d,f=a.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)a.b^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(r1,typeof wI=="object"&&wI,typeof define=="function"&&define)});var s1=_r((o1,Jh)=>{"use strict";(function(r,e,t){var n=256,o=6,s=52,i="random",a=t.pow(n,o),u=t.pow(2,s),l=u*2,c=n-1,p;function m(w,v,N){var _=[];v=v==!0?{entropy:!0}:v||{};var A=g(h(v.entropy?[w,y(e)]:w??x(),3),_),D=new f(_),F=function(){for(var O=D.g(o),V=a,G=0;O<u;)O=(O+G)*n,V*=n,G=D.g(1);for(;O>=l;)O/=2,V/=2,G>>>=1;return(O+G)/V};return F.int32=function(){return D.g(4)|0},F.quick=function(){return D.g(4)/4294967296},F.double=F,g(y(D.S),e),(v.pass||N||function(O,V,G,W){return W&&(W.S&&d(W,D),O.state=function(){return d(D,{})}),G?(t[i]=O,V):O})(F,A,"global"in v?v.global:this==t,v.state)}function f(w){var v,N=w.length,_=this,A=0,D=_.i=_.j=0,F=_.S=[];for(N||(w=[N++]);A<n;)F[A]=A++;for(A=0;A<n;A++)F[A]=F[D=c&D+w[A%N]+(v=F[A])],F[D]=v;(_.g=function(O){for(var V,G=0,W=_.i,H=_.j,q=_.S;O--;)V=q[W=c&W+1],G=G*n+q[c&(q[W]=q[H=c&H+V])+(q[H]=V)];return _.i=W,_.j=H,G})(n)}function d(w,v){return v.i=w.i,v.j=w.j,v.S=w.S.slice(),v}function h(w,v){var N=[],_=typeof w,A;if(v&&_=="object")for(A in w)try{N.push(h(w[A],v-1))}catch{}return N.length?N:_=="string"?w:w+"\0"}function g(w,v){for(var N=w+"",_,A=0;A<N.length;)v[c&A]=c&(_^=v[c&A]*19)+N.charCodeAt(A++);return y(v)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(w)),y(w)}catch{var v=r.navigator,N=v&&v.plugins;return[+new Date,r,N,r.screen,y(e)]}}function y(w){return String.fromCharCode.apply(0,w)}if(g(t.random(),e),typeof Jh=="object"&&Jh.exports){Jh.exports=m;try{p=z4()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+i]=m})(typeof self<"u"?self:o1,[],Math)});var wf=_r((nNt,i1)=>{"use strict";var Rj=KT(),$j=XT(),Fj=ZT(),Oj=QT(),Pj=e1(),Mj=n1(),nc=s1();nc.alea=Rj;nc.xor128=$j;nc.xorwow=Fj;nc.xorshift7=Oj;nc.xor4096=Pj;nc.tychei=Mj;i1.exports=nc});var TN=_r(()=>{"use strict"});var _N=_r(()=>{"use strict"});var WU=_r(()=>{"use strict"});var UU=_r(()=>{"use strict"});var HU=_r(()=>{"use strict"});var qU=_r((qb,AN)=>{"use strict";var EN=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};function t(){return lt.buffer!=ee&&Ye(lt.buffer),be}function n(){return lt.buffer!=ee&&Ye(lt.buffer),fe}function o(){return lt.buffer!=ee&&Ye(lt.buffer),Ae}function s(){return lt.buffer!=ee&&Ye(lt.buffer),An}function i(){return lt.buffer!=ee&&Ye(lt.buffer),sr}function a(){return lt.buffer!=ee&&Ye(lt.buffer),jn}function u(){return lt.buffer!=ee&&Ye(lt.buffer),Mr}var l=typeof e<"u"?e:{},c,p;l.ready=new Promise(function(M,U){c=M,p=U});var m;typeof process<"u"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),d=[],h="./this.program",g=(M,U)=>{throw U},x=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",v=l.ENVIRONMENT_IS_PTHREAD||!1,N="";function _(M){return l.locateFile?l.locateFile(M,N):N+M}var A,D,F,O;function V(M){if(M instanceof Ru)return;X("exiting due to exception: "+M)}if(w){var G=TN(),W=_N();y?N=W.dirname(N)+"/":N=__dirname+"/",A=(U,dt)=>(U=Wc(U)?new URL(U):W.normalize(U),G.readFileSync(U,dt?void 0:"utf8")),F=U=>{var dt=A(U,!0);return dt.buffer||(dt=new Uint8Array(dt)),dt},D=(U,dt,Mt)=>{U=Wc(U)?new URL(U):W.normalize(U),G.readFile(U,function(Zt,Xt){Zt?Mt(Zt):dt(Xt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof Ru))throw U}),process.on("unhandledRejection",function(U){throw U}),g=(U,dt)=>{if(Mo())throw process.exitCode=U,dt;V(dt),process.exit(U)},l.inspect=function(){return"[Emscripten Module object]"};let M;try{M=WU()}catch(U){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),U}global.Worker=M.Worker}else(x||y)&&(y?N=self.location.href:typeof document<"u"&&document.currentScript&&(N=document.currentScript.src),typeof r<"u"&&r&&(N=r),N.indexOf("blob:")!==0?N=N.substr(0,N.replace(/[?#].*/,"").lastIndexOf("/")+1):N="",w||(A=M=>{var U=new XMLHttpRequest;return U.open("GET",M,!1),U.send(null),U.responseText},y&&(F=M=>{var U=new XMLHttpRequest;return U.open("GET",M,!1),U.responseType="arraybuffer",U.send(null),new Uint8Array(U.response)}),D=(M,U,dt)=>{var Mt=new XMLHttpRequest;Mt.open("GET",M,!0),Mt.responseType="arraybuffer",Mt.onload=()=>{if(Mt.status==200||Mt.status==0&&Mt.response){U(Mt.response);return}dt()},Mt.onerror=dt,Mt.send(null)}),O=M=>document.title=M);w&&typeof performance>"u"&&(global.performance=UU().performance);var H=console.log.bind(console),q=console.warn.bind(console);w&&(H=M=>G.writeSync(1,M+`
`),q=M=>G.writeSync(2,M+`
`));var j=l.print||H,X=l.printErr||q;Object.assign(l,f),f=null,l.arguments&&(d=l.arguments),l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit);var Z=4,tt=Atomics.load,st=Atomics.store,it=Atomics.compareExchange,ut;l.wasmBinary&&(ut=l.wasmBinary);var rt=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Du("no native wasm support detected");var lt,ft,ht=!1,It;function Ft(M,U){M||Du(U)}var Dt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Ht(M,U,dt){U>>>=0;for(var Mt=U+dt,Zt=U;M[Zt]&&!(Zt>=Mt);)++Zt;if(Zt-U>16&&M.buffer&&Dt)return Dt.decode(M.buffer instanceof SharedArrayBuffer?M.slice(U,Zt):M.subarray(U,Zt));for(var Xt="";U<Zt;){var bt=M[U++];if(!(bt&128)){Xt+=String.fromCharCode(bt);continue}var Rt=M[U++]&63;if((bt&224)==192){Xt+=String.fromCharCode((bt&31)<<6|Rt);continue}var nr=M[U++]&63;if((bt&240)==224?bt=(bt&15)<<12|Rt<<6|nr:bt=(bt&7)<<18|Rt<<12|nr<<6|M[U++]&63,bt<65536)Xt+=String.fromCharCode(bt);else{var Jn=bt-65536;Xt+=String.fromCharCode(55296|Jn>>10,56320|Jn&1023)}}return Xt}function qt(M,U){return M>>>=0,M?Ht(n(),M,U):""}function ce(M,U,dt,Mt){if(dt>>>=0,!(Mt>0))return 0;for(var Zt=dt,Xt=dt+Mt-1,bt=0;bt<M.length;++bt){var Rt=M.charCodeAt(bt);if(Rt>=55296&&Rt<=57343){var nr=M.charCodeAt(++bt);Rt=65536+((Rt&1023)<<10)|nr&1023}if(Rt<=127){if(dt>=Xt)break;U[dt++>>>0]=Rt}else if(Rt<=2047){if(dt+1>=Xt)break;U[dt++>>>0]=192|Rt>>6,U[dt++>>>0]=128|Rt&63}else if(Rt<=65535){if(dt+2>=Xt)break;U[dt++>>>0]=224|Rt>>12,U[dt++>>>0]=128|Rt>>6&63,U[dt++>>>0]=128|Rt&63}else{if(dt+3>=Xt)break;U[dt++>>>0]=240|Rt>>18,U[dt++>>>0]=128|Rt>>12&63,U[dt++>>>0]=128|Rt>>6&63,U[dt++>>>0]=128|Rt&63}}return U[dt>>>0]=0,dt-Zt}function ye(M,U,dt){return ce(M,n(),U,dt)}var ee,be,fe,Ae,De,An,sr,jn,Mr;v&&(ee=l.buffer);function Ye(M){ee=M,l.HEAP8=be=new Int8Array(M),l.HEAP16=Ae=new Int16Array(M),l.HEAP32=An=new Int32Array(M),l.HEAPU8=fe=new Uint8Array(M),l.HEAPU16=De=new Uint16Array(M),l.HEAPU32=sr=new Uint32Array(M),l.HEAPF32=jn=new Float32Array(M),l.HEAPF64=Mr=new Float64Array(M)}var Lr=l.INITIAL_MEMORY||16777216;if(v)lt=l.wasmMemory,ee=l.buffer;else if(l.wasmMemory)lt=l.wasmMemory;else if(lt=new WebAssembly.Memory({initial:Lr/65536,maximum:65536,shared:!0}),!(lt.buffer instanceof SharedArrayBuffer))throw X("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&X("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");lt&&(ee=lt.buffer),Lr=ee.byteLength,Ye(ee);var zr,Xn=[],Yn=[],Yr=[],ua=!1;function Mo(){return rt}function wi(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)jm(l.preRun.shift());Zm(Xn)}function Tr(){ua=!0,!v&&Zm(Yn)}function ca(){if(!v){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)LN(l.postRun.shift());Zm(Yr)}}function jm(M){Xn.unshift(M)}function Xm(M){Yn.unshift(M)}function LN(M){Yr.unshift(M)}var vl=0,Gc=null,pa=null;function Yb(M){vl++,l.monitorRunDependencies&&l.monitorRunDependencies(vl)}function yd(M){if(vl--,l.monitorRunDependencies&&l.monitorRunDependencies(vl),vl==0&&(Gc!==null&&(clearInterval(Gc),Gc=null),pa)){var U=pa;pa=null,U()}}function Du(M){l.onAbort&&l.onAbort(M),M="Aborted("+M+")",X(M),ht=!0,It=1,M+=". Build with -sASSERTIONS for more info.";var U=new WebAssembly.RuntimeError(M);throw p(U),U}var Zb="data:application/octet-stream;base64,";function bd(M){return M.startsWith(Zb)}function Wc(M){return M.startsWith("file://")}var Zr;Zr="tfjs-backend-wasm-threaded-simd.wasm",bd(Zr)||(Zr=_(Zr));function wd(M){try{if(M==Zr&&ut)return new Uint8Array(ut);if(F)return F(M);throw"both async and sync fetching of the wasm failed"}catch(U){Du(U)}}function Jb(){if(!ut&&(x||y)){if(typeof fetch=="function"&&!Wc(Zr))return fetch(Zr,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+Zr+"'";return M.arrayBuffer()}).catch(function(){return wd(Zr)});if(D)return new Promise(function(M,U){D(Zr,function(dt){M(new Uint8Array(dt))},U)})}return Promise.resolve().then(function(){return wd(Zr)})}function Qb(){var M={env:$d,wasi_snapshot_preview1:$d};function U(bt,Rt){var nr=bt.exports;if(l.asm=nr,lw(l.asm._emscripten_tls_init),zr=l.asm.__indirect_function_table,Xm(l.asm.__wasm_call_ctors),ft=Rt,!v){var Jn=jt.unusedWorkers.length;jt.unusedWorkers.forEach(function(fa){jt.loadWasmModuleToWorker(fa,function(){--Jn||yd("wasm-instantiate")})})}}v||Yb("wasm-instantiate");function dt(bt){U(bt.instance,bt.module)}function Mt(bt){return Jb().then(function(Rt){return WebAssembly.instantiate(Rt,M)}).then(function(Rt){return Rt}).then(bt,function(Rt){X("failed to asynchronously prepare wasm: "+Rt),Du(Rt)})}function Zt(){return!ut&&typeof WebAssembly.instantiateStreaming=="function"&&!bd(Zr)&&!Wc(Zr)&&!w&&typeof fetch=="function"?fetch(Zr,{credentials:"same-origin"}).then(function(bt){var Rt=WebAssembly.instantiateStreaming(bt,M);return Rt.then(dt,function(nr){return X("wasm streaming compile failed: "+nr),X("falling back to ArrayBuffer instantiation"),Mt(dt)})}):Mt(dt)}if(l.instantiateWasm)try{var Xt=l.instantiateWasm(M,U);return Xt}catch(bt){X("Module.instantiateWasm callback failed with error: "+bt),p(bt)}return Zt().catch(p),{}}var zN,BN,vd={};function Ru(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function tw(M){var U=jt.pthreads[M];delete jt.pthreads[M],U.terminate(),SC(M),jt.runningWorkers.splice(jt.runningWorkers.indexOf(U),1),U.pthread_ptr=0}function ew(M){var U=jt.pthreads[M];U.postMessage({cmd:"cancel"})}function Ym(M){var U=jt.pthreads[M];Ft(U),jt.returnWorkerToPool(U)}function rw(M){var U=jt.getNewWorker();if(!U)return 6;jt.runningWorkers.push(U),jt.pthreads[M.pthread_ptr]=U,U.pthread_ptr=M.pthread_ptr;var dt={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return U.runPthread=()=>{w&&U.ref(),U.postMessage(dt,M.transferList),delete U.runPthread},U.loaded&&U.runPthread(),0}var Cd={varargs:void 0,get:function(){Cd.varargs+=4;var M=s()[Cd.varargs-4>>>2];return M},getStr:function(M){var U=qt(M);return U}};function Id(M){if(v)return Cl(1,1,M);It=M,Mo()||(jt.terminateAllThreads(),l.onExit&&l.onExit(M),ht=!0),g(M,new Ru(M))}function nw(M,U){if(It=M,!U&&v)throw Nd(M),"unwind";Id(M)}var Sd=nw;function ow(M){if(M instanceof Ru||M=="unwind")return It;g(1,M)}var jt={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){v?jt.initWorker():jt.initMainThread()},initMainThread:function(){for(var M=8;M--;)jt.allocateUnusedWorker()},initWorker:function(){rt=!1},setExitStatus:function(M){It=M},terminateAllThreads:function(){for(var M of Object.values(jt.pthreads))jt.returnWorkerToPool(M);for(var M of jt.unusedWorkers)M.terminate();jt.unusedWorkers=[]},returnWorkerToPool:function(M){var U=M.pthread_ptr;delete jt.pthreads[U],jt.unusedWorkers.push(M),jt.runningWorkers.splice(jt.runningWorkers.indexOf(M),1),M.pthread_ptr=0,w&&M.unref(),SC(U)},receiveObjectTransfer:function(M){},threadInitTLS:function(){jt.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,U){M.onmessage=Xt=>{var bt=Xt.data,Rt=bt.cmd;if(M.pthread_ptr&&(jt.currentProxiedOperationCallerThread=M.pthread_ptr),bt.targetThread&&bt.targetThread!=zd()){var nr=jt.pthreads[bt.targetThread];nr?nr.postMessage(bt,bt.transferList):X('Internal error! Worker sent a message "'+Rt+'" to target pthread '+bt.targetThread+", but that thread no longer exists!"),jt.currentProxiedOperationCallerThread=void 0;return}Rt==="processProxyingQueue"?Jm(bt.queue):Rt==="spawnThread"?rw(bt):Rt==="cleanupThread"?Ym(bt.thread):Rt==="killThread"?tw(bt.thread):Rt==="cancelThread"?ew(bt.thread):Rt==="loaded"?(M.loaded=!0,w&&M.unref(),U&&U(M),M.runPthread&&M.runPthread()):Rt==="print"?j("Thread "+bt.threadId+": "+bt.text):Rt==="printErr"?X("Thread "+bt.threadId+": "+bt.text):Rt==="alert"?alert("Thread "+bt.threadId+": "+bt.text):bt.target==="setimmediate"?M.postMessage(bt):Rt==="callHandler"?l[bt.handler](...bt.args):Rt&&X("worker sent an unknown command "+Rt),jt.currentProxiedOperationCallerThread=void 0},M.onerror=Xt=>{var bt="worker sent an error!";throw X(bt+" "+Xt.filename+":"+Xt.lineno+": "+Xt.message),Xt},w&&(M.on("message",function(Xt){M.onmessage({data:Xt})}),M.on("error",function(Xt){M.onerror(Xt)}),M.on("detachedExit",function(){}));var dt=[],Mt=["onExit","onAbort","print","printErr"];for(var Zt of Mt)l.hasOwnProperty(Zt)&&dt.push(Zt);M.postMessage({cmd:"load",handlers:dt,urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:lt,wasmModule:ft})},allocateUnusedWorker:function(){var M,U=_("tfjs-backend-wasm-threaded-simd.worker.js");M=new Worker(U),jt.unusedWorkers.push(M)},getNewWorker:function(){return jt.unusedWorkers.length==0&&(jt.allocateUnusedWorker(),jt.loadWasmModuleToWorker(jt.unusedWorkers[0])),jt.unusedWorkers.pop()}};l.PThread=jt;function Zm(M){for(;M.length>0;)M.shift()(l)}function sw(){var M=zd(),U=s()[M+52>>>2],dt=s()[M+56>>>2],Mt=U-dt;qN(U,Mt),Bd(U)}l.establishStackSpace=sw;function Nd(M){if(v)return Cl(2,0,M);try{Sd(M)}catch(U){ow(U)}}var Uc=[];function iw(M){var U=Uc[M];return U||(M>=Uc.length&&(Uc.length=M+1),Uc[M]=U=zr.get(M)),U}function aw(M,U){var dt=iw(M)(U);Mo()?jt.setExitStatus(dt):HN(dt)}l.invokeEntryPoint=aw;function lw(M){jt.tlsInitFunctions.push(M)}function uw(M){GN(M,!y,1,!x),jt.threadInitTLS()}function cw(M){v?postMessage({cmd:"cleanupThread",thread:M}):Ym(M)}function kd(M,U,dt,Mt){return v?Cl(3,1,M,U,dt,Mt):Td(M,U,dt,Mt)}function Td(M,U,dt,Mt){if(typeof SharedArrayBuffer>"u")return X("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Zt=[],Xt=0;if(v&&(Zt.length===0||Xt))return kd(M,U,dt,Mt);if(Xt)return Xt;var bt={startRoutine:dt,pthread_ptr:M,arg:Mt,transferList:Zt};return v?(bt.cmd="spawnThread",postMessage(bt,Zt),0):rw(bt)}function pw(){return 65536}var mw=!0;function fw(){return mw}function Jm(M){Atomics.store(s(),M>>2,1),zd()&&UN(M),Atomics.compareExchange(s(),M>>2,1,0)}l.executeNotifiedProxyingQueue=Jm;function dw(M,U,dt,Mt){if(M==U)setTimeout(()=>Jm(Mt));else if(v)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:Mt});else{var Zt=jt.pthreads[M];if(!Zt)return;Zt.postMessage({cmd:"processProxyingQueue",queue:Mt})}return 1}function hw(M,U,dt){return-1}function gw(){Du("")}function $u(M){$u.shown||($u.shown={}),$u.shown[M]||($u.shown[M]=1,w&&(M="warning: "+M),X(M))}function xw(){w||y||$u("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function yw(){return Date.now()}function _d(){return 4294901760}function bw(){return _d()}var Qm;w?Qm=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:Qm=()=>performance.timeOrigin+performance.now();function ww(M,U,dt){n().copyWithin(M>>>0,U>>>0,U+dt>>>0)}function vw(){return w?HU().cpus().length:navigator.hardwareConcurrency}function Cw(M){var U=NC(),dt=M();return Bd(U),dt}function Cl(M,U){var dt=arguments.length-2,Mt=arguments;return Cw(()=>{for(var Zt=dt,Xt=Vd(Zt*8),bt=Xt>>3,Rt=0;Rt<dt;Rt++){var nr=Mt[2+Rt];u()[bt+Rt>>>0]=nr}return WN(M,Zt,Xt,U)})}var tf=[];function Iw(M,U,dt){tf.length=U;for(var Mt=dt>>3,Zt=0;Zt<U;Zt++)tf[Zt]=u()[Mt+Zt>>>0];var Xt=M<0,bt=Xt?vd[-M-1]:Rw[M];return bt.apply(null,tf)}function Sw(M){try{return lt.grow(M-ee.byteLength+65535>>>16),Ye(lt.buffer),1}catch{}}function Nw(M){var U=n().length;if(M=M>>>0,M<=U)return!1;var dt=_d();if(M>dt)return!1;let Mt=(nr,Jn)=>nr+(Jn-nr%Jn)%Jn;for(var Zt=1;Zt<=4;Zt*=2){var Xt=U*(1+.2/Zt);Xt=Math.min(Xt,M+100663296);var bt=Math.min(dt,Mt(Math.max(M,Xt),65536)),Rt=Sw(bt);if(Rt)return!0}return!1}function kw(){throw"unwind"}function Ed(M){return v?Cl(4,1,M):52}function Ad(M,U,dt,Mt,Zt){return v?Cl(5,1,M,U,dt,Mt,Zt):70}var Tw=[null,[],[]];function _w(M,U){var dt=Tw[M];U===0||U===10?((M===1?j:X)(Ht(dt,0)),dt.length=0):dt.push(U)}function Dd(M,U,dt,Mt){if(v)return Cl(6,1,M,U,dt,Mt);for(var Zt=0,Xt=0;Xt<dt;Xt++){var bt=i()[U>>>2],Rt=i()[U+4>>>2];U+=8;for(var nr=0;nr<Rt;nr++)_w(M,n()[bt+nr>>>0]);Zt+=Rt}return i()[Mt>>>2]=Zt,0}function Rd(M){var U=l["_"+M];return U}function Ew(M,U){t().set(M,U>>>0)}function Aw(M,U,dt,Mt,Zt){var Xt={string:Dn=>{var jc=0;if(Dn!=null&&Dn!==0){var XN=(Dn.length<<2)+1;jc=Vd(XN),ye(Dn,jc,XN)}return jc},array:Dn=>{var jc=Vd(Dn.length);return Ew(Dn,jc),jc}};function bt(Dn){return U==="string"?qt(Dn):U==="boolean"?!!Dn:Dn}var Rt=Rd(M),nr=[],Jn=0;if(Mt)for(var fa=0;fa<Mt.length;fa++){var jN=Xt[dt[fa]];jN?(Jn===0&&(Jn=NC()),nr[fa]=jN(Mt[fa])):nr[fa]=Mt[fa]}var kC=Rt.apply(null,nr);function L4(Dn){return Jn!==0&&Bd(Jn),bt(Dn)}return kC=L4(kC),kC}function Dw(M,U,dt,Mt){dt=dt||[];var Zt=dt.every(bt=>bt==="number"||bt==="boolean"),Xt=U!=="string";return Xt&&Zt&&!Mt?Rd(M):function(){return Aw(M,U,dt,arguments,Mt)}}jt.init();var Rw=[null,Id,Nd,kd,Ed,Ad,Dd],$d={__emscripten_init_main_thread_js:uw,__emscripten_thread_cleanup:cw,__pthread_create_js:Td,_emscripten_default_pthread_stack_size:pw,_emscripten_get_now_is_monotonic:fw,_emscripten_notify_task_queue:dw,_emscripten_set_offscreencanvas_size:hw,abort:gw,emscripten_check_blocking_allowed:xw,emscripten_date_now:yw,emscripten_get_heap_max:bw,emscripten_get_now:Qm,emscripten_memcpy_big:ww,emscripten_num_logical_cores:vw,emscripten_receive_on_main_thread_js:Iw,emscripten_resize_heap:Nw,emscripten_unwind_to_js_event_loop:kw,exit:Sd,fd_close:Ed,fd_seek:Ad,fd_write:Dd,memory:lt||l.wasmMemory},VN=Qb(),$w=l.___wasm_call_ctors=function(){return($w=l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},Fw=l._init=function(){return(Fw=l._init=l.asm.init).apply(null,arguments)},Ow=l._init_with_threads_count=function(){return(Ow=l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},Pw=l._get_threads_count=function(){return(Pw=l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},Mw=l._register_tensor=function(){return(Mw=l._register_tensor=l.asm.register_tensor).apply(null,arguments)},Lw=l._dispose_data=function(){return(Lw=l._dispose_data=l.asm.dispose_data).apply(null,arguments)},zw=l._dispose=function(){return(zw=l._dispose=l.asm.dispose).apply(null,arguments)},Bw=l._Abs=function(){return(Bw=l._Abs=l.asm.Abs).apply(null,arguments)},Vw=l._Acos=function(){return(Vw=l._Acos=l.asm.Acos).apply(null,arguments)},Gw=l._Acosh=function(){return(Gw=l._Acosh=l.asm.Acosh).apply(null,arguments)},Ww=l._Add=function(){return(Ww=l._Add=l.asm.Add).apply(null,arguments)},Uw=l._AddN=function(){return(Uw=l._AddN=l.asm.AddN).apply(null,arguments)},Hw=l._All=function(){return(Hw=l._All=l.asm.All).apply(null,arguments)},qw=l._Any=function(){return(qw=l._Any=l.asm.Any).apply(null,arguments)},Kw=l._ArgMax=function(){return(Kw=l._ArgMax=l.asm.ArgMax).apply(null,arguments)},jw=l._ArgMin=function(){return(jw=l._ArgMin=l.asm.ArgMin).apply(null,arguments)},Xw=l._Asin=function(){return(Xw=l._Asin=l.asm.Asin).apply(null,arguments)},Yw=l._Asinh=function(){return(Yw=l._Asinh=l.asm.Asinh).apply(null,arguments)},Zw=l._Atan=function(){return(Zw=l._Atan=l.asm.Atan).apply(null,arguments)},Jw=l._Atan2=function(){return(Jw=l._Atan2=l.asm.Atan2).apply(null,arguments)},Qw=l._Atanh=function(){return(Qw=l._Atanh=l.asm.Atanh).apply(null,arguments)},tv=l._AvgPool=function(){return(tv=l._AvgPool=l.asm.AvgPool).apply(null,arguments)},ev=l._AvgPool3D=function(){return(ev=l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},rv=l._AvgPool3DGrad=function(){return(rv=l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},nv=l._AvgPoolGrad=function(){return(nv=l._AvgPoolGrad=l.asm.AvgPoolGrad).apply(null,arguments)},ov=l._BatchMatMul=function(){return(ov=l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},sv=l._Bincount=function(){return(sv=l._Bincount=l.asm.Bincount).apply(null,arguments)},iv=l._BitwiseAnd=function(){return(iv=l._BitwiseAnd=l.asm.BitwiseAnd).apply(null,arguments)},av=l._Ceil=function(){return(av=l._Ceil=l.asm.Ceil).apply(null,arguments)},lv=l._ClipByValue=function(){return(lv=l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},uv=l._Conv2D=function(){return(uv=l._Conv2D=l.asm.Conv2D).apply(null,arguments)},cv=l._Conv2DBackpropInput=function(){return(cv=l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},pv=l._Conv3D=function(){return(pv=l._Conv3D=l.asm.Conv3D).apply(null,arguments)},mv=l._Conv3DBackpropFilterV2=function(){return(mv=l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},fv=l._Conv3DBackpropInputV2=function(){return(fv=l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},dv=l._Cos=function(){return(dv=l._Cos=l.asm.Cos).apply(null,arguments)},hv=l._Cosh=function(){return(hv=l._Cosh=l.asm.Cosh).apply(null,arguments)},gv=l._CropAndResize=function(){return(gv=l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},xv=l._Cumprod=function(){return(xv=l._Cumprod=l.asm.Cumprod).apply(null,arguments)},yv=l._Cumsum=function(){return(yv=l._Cumsum=l.asm.Cumsum).apply(null,arguments)},bv=l._DenseBincount=function(){return(bv=l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},wv=l._DepthToSpace=function(){return(wv=l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},vv=l._DepthwiseConv2dNative=function(){return(vv=l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},Cv=l._Diag=function(){return(Cv=l._Diag=l.asm.Diag).apply(null,arguments)},Iv=l._Dilation2D=function(){return(Iv=l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},Sv=l._Dilation2DBackpropFilter=function(){return(Sv=l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},Nv=l._Dilation2DBackpropInput=function(){return(Nv=l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},kv=l._Elu=function(){return(kv=l._Elu=l.asm.Elu).apply(null,arguments)},Tv=l._EluGrad=function(){return(Tv=l._EluGrad=l.asm.EluGrad).apply(null,arguments)},_v=l._Equal=function(){return(_v=l._Equal=l.asm.Equal).apply(null,arguments)},Ev=l._Erf=function(){return(Ev=l._Erf=l.asm.Erf).apply(null,arguments)},Av=l._Exp=function(){return(Av=l._Exp=l.asm.Exp).apply(null,arguments)},Dv=l._Expm1=function(){return(Dv=l._Expm1=l.asm.Expm1).apply(null,arguments)},Rv=l._FlipLeftRight=function(){return(Rv=l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},$v=l._Floor=function(){return($v=l._Floor=l.asm.Floor).apply(null,arguments)},Fv=l._FloorDiv=function(){return(Fv=l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},Ov=l._FusedBatchNorm=function(){return(Ov=l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},Pv=l._FusedConv2D=function(){return(Pv=l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},Mv=l._FusedDepthwiseConv2D=function(){return(Mv=l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},Lv=l._Gather=function(){return(Lv=l._Gather=l.asm.Gather).apply(null,arguments)},zv=l._GatherNd=function(){return(zv=l._GatherNd=l.asm.GatherNd).apply(null,arguments)},Bv=l._Greater=function(){return(Bv=l._Greater=l.asm.Greater).apply(null,arguments)},Vv=l._GreaterEqual=function(){return(Vv=l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},Gv=l._IsFinite=function(){return(Gv=l._IsFinite=l.asm.IsFinite).apply(null,arguments)},Wv=l._IsInf=function(){return(Wv=l._IsInf=l.asm.IsInf).apply(null,arguments)},Uv=l._IsNan=function(){return(Uv=l._IsNan=l.asm.IsNan).apply(null,arguments)},Hv=l._LRN=function(){return(Hv=l._LRN=l.asm.LRN).apply(null,arguments)},qv=l._LRNGrad=function(){return(qv=l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},Kv=l._LeakyRelu=function(){return(Kv=l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},jv=l._Less=function(){return(jv=l._Less=l.asm.Less).apply(null,arguments)},Xv=l._LessEqual=function(){return(Xv=l._LessEqual=l.asm.LessEqual).apply(null,arguments)},Yv=l._LinSpace=function(){return(Yv=l._LinSpace=l.asm.LinSpace).apply(null,arguments)},Zv=l._Log=function(){return(Zv=l._Log=l.asm.Log).apply(null,arguments)},Jv=l._Log1p=function(){return(Jv=l._Log1p=l.asm.Log1p).apply(null,arguments)},Qv=l._LogicalAnd=function(){return(Qv=l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},tC=l._LogicalNot=function(){return(tC=l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},eC=l._LogicalOr=function(){return(eC=l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},rC=l._LogicalXor=function(){return(rC=l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},nC=l._Max=function(){return(nC=l._Max=l.asm.Max).apply(null,arguments)},oC=l._MaxPool=function(){return(oC=l._MaxPool=l.asm.MaxPool).apply(null,arguments)},sC=l._MaxPool3D=function(){return(sC=l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},iC=l._MaxPool3DGrad=function(){return(iC=l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},aC=l._MaxPoolGrad=function(){return(aC=l._MaxPoolGrad=l.asm.MaxPoolGrad).apply(null,arguments)},lC=l._MaxPoolWithArgmax=function(){return(lC=l._MaxPoolWithArgmax=l.asm.MaxPoolWithArgmax).apply(null,arguments)},uC=l._Maximum=function(){return(uC=l._Maximum=l.asm.Maximum).apply(null,arguments)},cC=l._Mean=function(){return(cC=l._Mean=l.asm.Mean).apply(null,arguments)},pC=l._Min=function(){return(pC=l._Min=l.asm.Min).apply(null,arguments)},mC=l._Minimum=function(){return(mC=l._Minimum=l.asm.Minimum).apply(null,arguments)},fC=l._MirrorPad=function(){return(fC=l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},dC=l._Mod=function(){return(dC=l._Mod=l.asm.Mod).apply(null,arguments)},hC=l._Multinomial=function(){return(hC=l._Multinomial=l.asm.Multinomial).apply(null,arguments)},gC=l._Multiply=function(){return(gC=l._Multiply=l.asm.Multiply).apply(null,arguments)},xC=l._Neg=function(){return(xC=l._Neg=l.asm.Neg).apply(null,arguments)},yC=l._NonMaxSuppressionV3=function(){return(yC=l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},bC=l._NonMaxSuppressionV4=function(){return(bC=l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},Fd=l._NonMaxSuppressionV5=function(){return(Fd=l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},Od=l._NotEqual=function(){return(Od=l._NotEqual=l.asm.NotEqual).apply(null,arguments)},ef=l._OneHot=function(){return(ef=l._OneHot=l.asm.OneHot).apply(null,arguments)},wC=l._PadV2=function(){return(wC=l._PadV2=l.asm.PadV2).apply(null,arguments)},vC=l._Pow=function(){return(vC=l._Pow=l.asm.Pow).apply(null,arguments)},Hc=l._Prelu=function(){return(Hc=l._Prelu=l.asm.Prelu).apply(null,arguments)},Pd=l._Prod=function(){return(Pd=l._Prod=l.asm.Prod).apply(null,arguments)},qc=l._RealDiv=function(){return(qc=l._RealDiv=l.asm.RealDiv).apply(null,arguments)},Kc=l._Reciprocal=function(){return(Kc=l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},CC=l._Relu=function(){return(CC=l._Relu=l.asm.Relu).apply(null,arguments)},Y=l._Relu6=function(){return(Y=l._Relu6=l.asm.Relu6).apply(null,arguments)},ct=l._ResizeBilinear=function(){return(ct=l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},Ot=l._ResizeBilinearGrad=function(){return(Ot=l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},pe=l._ResizeNearestNeighbor=function(){return(pe=l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},Ze=l._ResizeNearestNeighborGrad=function(){return(Ze=l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},Je=l._Reverse=function(){return(Je=l._Reverse=l.asm.Reverse).apply(null,arguments)},se=l._RotateWithOffset=function(){return(se=l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},ne=l._Round=function(){return(ne=l._Round=l.asm.Round).apply(null,arguments)},xr=l._Rsqrt=function(){return(xr=l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},Zn=l._ScatterNd=function(){return(Zn=l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},ma=l._SearchSorted=function(){return(ma=l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},Md=l._SelectV2=function(){return(Md=l._SelectV2=l.asm.SelectV2).apply(null,arguments)},rf=l._Selu=function(){return(rf=l._Selu=l.asm.Selu).apply(null,arguments)},IC=l._Sigmoid=function(){return(IC=l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},nn=l._Sign=function(){return(nn=l._Sign=l.asm.Sign).apply(null,arguments)},Il=l._Sin=function(){return(Il=l._Sin=l.asm.Sin).apply(null,arguments)},Ld=l._Sinh=function(){return(Ld=l._Sinh=l.asm.Sinh).apply(null,arguments)},i4=l._Softmax=function(){return(i4=l._Softmax=l.asm.Softmax).apply(null,arguments)},a4=l._Softplus=function(){return(a4=l._Softplus=l.asm.Softplus).apply(null,arguments)},l4=l._SparseFillEmptyRows=function(){return(l4=l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},u4=l._SparseReshape=function(){return(u4=l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},c4=l._SparseSegmentReduction=function(){return(c4=l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},p4=l._SparseToDense=function(){return(p4=l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},m4=l._Sqrt=function(){return(m4=l._Sqrt=l.asm.Sqrt).apply(null,arguments)},f4=l._Square=function(){return(f4=l._Square=l.asm.Square).apply(null,arguments)},d4=l._SquaredDifference=function(){return(d4=l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},h4=l._Step=function(){return(h4=l._Step=l.asm.Step).apply(null,arguments)},g4=l._StridedSlice=function(){return(g4=l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},x4=l._Sub=function(){return(x4=l._Sub=l.asm.Sub).apply(null,arguments)},y4=l._Sum=function(){return(y4=l._Sum=l.asm.Sum).apply(null,arguments)},b4=l._Tan=function(){return(b4=l._Tan=l.asm.Tan).apply(null,arguments)},w4=l._Tanh=function(){return(w4=l._Tanh=l.asm.Tanh).apply(null,arguments)},v4=l._TensorScatterUpdate=function(){return(v4=l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},C4=l._Tile=function(){return(C4=l._Tile=l.asm.Tile).apply(null,arguments)},I4=l._TopK=function(){return(I4=l._TopK=l.asm.TopK).apply(null,arguments)},S4=l._Transform=function(){return(S4=l._Transform=l.asm.Transform).apply(null,arguments)},N4=l._Transpose=function(){return(N4=l._Transpose=l.asm.Transpose).apply(null,arguments)},k4=l.__FusedMatMul=function(){return(k4=l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},T4=l._malloc=function(){return(T4=l._malloc=l.asm.malloc).apply(null,arguments)},_4=l._free=function(){return(_4=l._free=l.asm.free).apply(null,arguments)},E4=l.__emscripten_tls_init=function(){return(E4=l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)},zd=l._pthread_self=function(){return(zd=l._pthread_self=l.asm.pthread_self).apply(null,arguments)},A4=l.___errno_location=function(){return(A4=l.___errno_location=l.asm.__errno_location).apply(null,arguments)},GN=l.__emscripten_thread_init=function(){return(GN=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)},D4=l.__emscripten_thread_crashed=function(){return(D4=l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},R4=l._emscripten_main_thread_process_queued_calls=function(){return(R4=l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},$4=l._emscripten_main_browser_thread_id=function(){return($4=l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)},WN=l._emscripten_run_in_main_runtime_thread_js=function(){return(WN=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},F4=l._emscripten_dispatch_to_thread_=function(){return(F4=l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},UN=l.__emscripten_proxy_execute_task_queue=function(){return(UN=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},SC=l.__emscripten_thread_free_data=function(){return(SC=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},HN=l.__emscripten_thread_exit=function(){return(HN=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},qN=l._emscripten_stack_set_limits=function(){return(qN=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},NC=l.stackSave=function(){return(NC=l.stackSave=l.asm.stackSave).apply(null,arguments)},Bd=l.stackRestore=function(){return(Bd=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},Vd=l.stackAlloc=function(){return(Vd=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)},O4=l.dynCall_iijjiiii=function(){return(O4=l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},P4=l.dynCall_jiji=function(){return(P4=l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)};l.keepRuntimeAlive=Mo,l.wasmMemory=lt,l.cwrap=Dw,l.ExitStatus=Ru,l.PThread=jt;var Gd;pa=function M(){Gd||KN(),Gd||(pa=M)};function KN(M){if(M=M||d,vl>0)return;if(v){c(l),Tr(),startWorker(l);return}if(wi(),vl>0)return;function U(){Gd||(Gd=!0,l.calledRun=!0,!ht&&(Tr(),c(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ca()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),U()},1)):U()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();KN();var Wd;m&&(Wd={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!m.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!m.unhandledRejection.indexOf(M)>-1})});var Ud;if(typeof WasmBackendModule<"u")Ud=WasmBackendModule;else if(typeof e<"u")Ud=e;else throw new Error("Could not find wasm module in post.js");if(Wd){var M4=Ud._dispose;Ud._dispose=function(){M4(),Wd.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),Wd.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return e.ready}})();typeof qb=="object"&&typeof AN=="object"?AN.exports=EN:typeof define=="function"&&define.amd?define([],function(){return EN}):typeof qb=="object"&&(qb.WasmBackendModuleThreadedSimd=EN)});var jU=_r((pQe,KU)=>{"use strict";KU.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`});var XU=_r((Kb,RN)=>{"use strict";var DN=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e){e=e||{};var t=typeof e<"u"?e:{},n,o;t.ready=new Promise(function(Y,ct){n=Y,o=ct});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i=Object.assign({},t),a=[],u="./this.program",l=(Y,ct)=>{throw ct},c=typeof window=="object",p=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f="";function d(Y){return t.locateFile?t.locateFile(Y,f):f+Y}var h,g,x,y;function w(Y){if(Y instanceof Gc)return;A("exiting due to exception: "+Y)}if(m){var v=TN(),N=_N();p?f=N.dirname(f)+"/":f=__dirname+"/",h=(Y,ct)=>(Y=wi(Y)?new URL(Y):N.normalize(Y),v.readFileSync(Y,ct?void 0:"utf8")),x=Y=>{var ct=h(Y,!0);return ct.buffer||(ct=new Uint8Array(ct)),ct},g=(Y,ct,Ot)=>{Y=wi(Y)?new URL(Y):N.normalize(Y),v.readFile(Y,function(pe,Ze){pe?Ot(pe):ct(Ze.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),a=process.argv.slice(2),process.on("uncaughtException",function(Y){if(!(Y instanceof Gc))throw Y}),process.on("unhandledRejection",function(Y){throw Y}),l=(Y,ct)=>{if(fe())throw process.exitCode=Y,ct;w(ct),process.exit(Y)},t.inspect=function(){return"[Emscripten Module object]"}}else(c||p)&&(p?f=self.location.href:typeof document<"u"&&document.currentScript&&(f=document.currentScript.src),r&&(f=r),f.indexOf("blob:")!==0?f=f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):f="",h=Y=>{var ct=new XMLHttpRequest;return ct.open("GET",Y,!1),ct.send(null),ct.responseText},p&&(x=Y=>{var ct=new XMLHttpRequest;return ct.open("GET",Y,!1),ct.responseType="arraybuffer",ct.send(null),new Uint8Array(ct.response)}),g=(Y,ct,Ot)=>{var pe=new XMLHttpRequest;pe.open("GET",Y,!0),pe.responseType="arraybuffer",pe.onload=()=>{if(pe.status==200||pe.status==0&&pe.response){ct(pe.response);return}Ot()},pe.onerror=Ot,pe.send(null)},y=Y=>document.title=Y);var _=t.print||console.log.bind(console),A=t.printErr||console.warn.bind(console);Object.assign(t,i),i=null,t.arguments&&(a=t.arguments),t.thisProgram&&(u=t.thisProgram),t.quit&&(l=t.quit);var D=4,F;t.wasmBinary&&(F=t.wasmBinary);var O=t.noExitRuntime||!0;typeof WebAssembly!="object"&&Yr("no native wasm support detected");var V,G=!1,W;function H(Y,ct){Y||Yr(ct)}var q=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function j(Y,ct,Ot){ct>>>=0;for(var pe=ct+Ot,Ze=ct;Y[Ze]&&!(Ze>=pe);)++Ze;if(Ze-ct>16&&Y.buffer&&q)return q.decode(Y.subarray(ct,Ze));for(var Je="";ct<Ze;){var se=Y[ct++];if(!(se&128)){Je+=String.fromCharCode(se);continue}var ne=Y[ct++]&63;if((se&224)==192){Je+=String.fromCharCode((se&31)<<6|ne);continue}var xr=Y[ct++]&63;if((se&240)==224?se=(se&15)<<12|ne<<6|xr:se=(se&7)<<18|ne<<12|xr<<6|Y[ct++]&63,se<65536)Je+=String.fromCharCode(se);else{var Zn=se-65536;Je+=String.fromCharCode(55296|Zn>>10,56320|Zn&1023)}}return Je}function X(Y,ct){return Y>>>=0,Y?j(ut,Y,ct):""}function Z(Y,ct,Ot,pe){if(Ot>>>=0,!(pe>0))return 0;for(var Ze=Ot,Je=Ot+pe-1,se=0;se<Y.length;++se){var ne=Y.charCodeAt(se);if(ne>=55296&&ne<=57343){var xr=Y.charCodeAt(++se);ne=65536+((ne&1023)<<10)|xr&1023}if(ne<=127){if(Ot>=Je)break;ct[Ot++>>>0]=ne}else if(ne<=2047){if(Ot+1>=Je)break;ct[Ot++>>>0]=192|ne>>6,ct[Ot++>>>0]=128|ne&63}else if(ne<=65535){if(Ot+2>=Je)break;ct[Ot++>>>0]=224|ne>>12,ct[Ot++>>>0]=128|ne>>6&63,ct[Ot++>>>0]=128|ne&63}else{if(Ot+3>=Je)break;ct[Ot++>>>0]=240|ne>>18,ct[Ot++>>>0]=128|ne>>12&63,ct[Ot++>>>0]=128|ne>>6&63,ct[Ot++>>>0]=128|ne&63}}return ct[Ot>>>0]=0,Ot-Ze}function tt(Y,ct,Ot){return Z(Y,ut,ct,Ot)}var st,it,ut,rt,lt,ft,ht,It,Ft;function Dt(Y){st=Y,t.HEAP8=it=new Int8Array(Y),t.HEAP16=rt=new Int16Array(Y),t.HEAP32=ft=new Int32Array(Y),t.HEAPU8=ut=new Uint8Array(Y),t.HEAPU16=lt=new Uint16Array(Y),t.HEAPU32=ht=new Uint32Array(Y),t.HEAPF32=It=new Float32Array(Y),t.HEAPF64=Ft=new Float64Array(Y)}var Ht=t.INITIAL_MEMORY||16777216,qt,ce=[],ye=[],ee=[],be=!1;function fe(){return O}function Ae(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)sr(t.preRun.shift());pa(ce)}function De(){be=!0,pa(ye)}function An(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Mr(t.postRun.shift());pa(ee)}function sr(Y){ce.unshift(Y)}function jn(Y){ye.unshift(Y)}function Mr(Y){ee.unshift(Y)}var Ye=0,Lr=null,zr=null;function Xn(Y){Ye++,t.monitorRunDependencies&&t.monitorRunDependencies(Ye)}function Yn(Y){if(Ye--,t.monitorRunDependencies&&t.monitorRunDependencies(Ye),Ye==0&&(Lr!==null&&(clearInterval(Lr),Lr=null),zr)){var ct=zr;zr=null,ct()}}function Yr(Y){t.onAbort&&t.onAbort(Y),Y="Aborted("+Y+")",A(Y),G=!0,W=1,Y+=". Build with -sASSERTIONS for more info.";var ct=new WebAssembly.RuntimeError(Y);throw o(ct),ct}var ua="data:application/octet-stream;base64,";function Mo(Y){return Y.startsWith(ua)}function wi(Y){return Y.startsWith("file://")}var Tr;Tr="tfjs-backend-wasm.wasm",Mo(Tr)||(Tr=d(Tr));function ca(Y){try{if(Y==Tr&&F)return new Uint8Array(F);if(x)return x(Y);throw"both async and sync fetching of the wasm failed"}catch(ct){Yr(ct)}}function jm(){if(!F&&(c||p)){if(typeof fetch=="function"&&!wi(Tr))return fetch(Tr,{credentials:"same-origin"}).then(function(Y){if(!Y.ok)throw"failed to load wasm binary file at '"+Tr+"'";return Y.arrayBuffer()}).catch(function(){return ca(Tr)});if(g)return new Promise(function(Y,ct){g(Tr,function(Ot){Y(new Uint8Array(Ot))},ct)})}return Promise.resolve().then(function(){return ca(Tr)})}function Xm(){var Y={env:Ym,wasi_snapshot_preview1:Ym};function ct(se,ne){var xr=se.exports;t.asm=xr,V=t.asm.memory,Dt(V.buffer),qt=t.asm.__indirect_function_table,jn(t.asm.__wasm_call_ctors),Yn("wasm-instantiate")}Xn("wasm-instantiate");function Ot(se){ct(se.instance)}function pe(se){return jm().then(function(ne){return WebAssembly.instantiate(ne,Y)}).then(function(ne){return ne}).then(se,function(ne){A("failed to asynchronously prepare wasm: "+ne),Yr(ne)})}function Ze(){return!F&&typeof WebAssembly.instantiateStreaming=="function"&&!Mo(Tr)&&!wi(Tr)&&!m&&typeof fetch=="function"?fetch(Tr,{credentials:"same-origin"}).then(function(se){var ne=WebAssembly.instantiateStreaming(se,Y);return ne.then(Ot,function(xr){return A("wasm streaming compile failed: "+xr),A("falling back to ArrayBuffer instantiation"),pe(Ot)})}):pe(Ot)}if(t.instantiateWasm)try{var Je=t.instantiateWasm(Y,ct);return Je}catch(se){A("Module.instantiateWasm callback failed with error: "+se),o(se)}return Ze().catch(o),{}}var LN,vl;function Gc(Y){this.name="ExitStatus",this.message="Program terminated with exit("+Y+")",this.status=Y}function pa(Y){for(;Y.length>0;)Y.shift()(t)}function Yb(){Yr("")}function yd(){return 4294901760}function Du(){return yd()}function Zb(Y,ct,Ot){ut.copyWithin(Y>>>0,ct>>>0,ct+Ot>>>0)}function bd(Y){try{return V.grow(Y-st.byteLength+65535>>>16),Dt(V.buffer),1}catch{}}function Wc(Y){var ct=ut.length;Y=Y>>>0;var Ot=yd();if(Y>Ot)return!1;let pe=(xr,Zn)=>xr+(Zn-xr%Zn)%Zn;for(var Ze=1;Ze<=4;Ze*=2){var Je=ct*(1+.2/Ze);Je=Math.min(Je,Y+100663296);var se=Math.min(Ot,pe(Math.max(Y,Je),65536)),ne=bd(se);if(ne)return!0}return!1}var Zr={varargs:void 0,get:function(){Zr.varargs+=4;var Y=ft[Zr.varargs-4>>>2];return Y},getStr:function(Y){var ct=X(Y);return ct}};function wd(Y){return 52}function Jb(Y,ct,Ot,pe,Ze){return 70}var Qb=[null,[],[]];function zN(Y,ct){var Ot=Qb[Y];ct===0||ct===10?((Y===1?_:A)(j(Ot,0)),Ot.length=0):Ot.push(ct)}function BN(Y,ct,Ot,pe){for(var Ze=0,Je=0;Je<Ot;Je++){var se=ht[ct>>>2],ne=ht[ct+4>>>2];ct+=8;for(var xr=0;xr<ne;xr++)zN(Y,ut[se+xr>>>0]);Ze+=ne}return ht[pe>>>2]=Ze,0}function vd(Y){var ct=t["_"+Y];return ct}function Ru(Y,ct){it.set(Y,ct>>>0)}function tw(Y,ct,Ot,pe,Ze){var Je={string:nn=>{var Il=0;if(nn!=null&&nn!==0){var Ld=(nn.length<<2)+1;Il=ef(Ld),tt(nn,Il,Ld)}return Il},array:nn=>{var Il=ef(nn.length);return Ru(nn,Il),Il}};function se(nn){return ct==="string"?X(nn):ct==="boolean"?!!nn:nn}var ne=vd(Y),xr=[],Zn=0;if(pe)for(var ma=0;ma<pe.length;ma++){var Md=Je[Ot[ma]];Md?(Zn===0&&(Zn=Fd()),xr[ma]=Md(pe[ma])):xr[ma]=pe[ma]}var rf=ne.apply(null,xr);function IC(nn){return Zn!==0&&Od(Zn),se(nn)}return rf=IC(rf),rf}function ew(Y,ct,Ot,pe){Ot=Ot||[];var Ze=Ot.every(se=>se==="number"||se==="boolean"),Je=ct!=="string";return Je&&Ze&&!pe?vd(Y):function(){return tw(Y,ct,Ot,arguments,pe)}}var Ym={abort:Yb,emscripten_get_heap_max:Du,emscripten_memcpy_big:Zb,emscripten_resize_heap:Wc,fd_close:wd,fd_seek:Jb,fd_write:BN},rw=Xm(),Cd=t.___wasm_call_ctors=function(){return(Cd=t.___wasm_call_ctors=t.asm.__wasm_call_ctors).apply(null,arguments)},Id=t._init=function(){return(Id=t._init=t.asm.init).apply(null,arguments)},nw=t._init_with_threads_count=function(){return(nw=t._init_with_threads_count=t.asm.init_with_threads_count).apply(null,arguments)},Sd=t._get_threads_count=function(){return(Sd=t._get_threads_count=t.asm.get_threads_count).apply(null,arguments)},ow=t._register_tensor=function(){return(ow=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},jt=t._dispose_data=function(){return(jt=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},Zm=t._dispose=function(){return(Zm=t._dispose=t.asm.dispose).apply(null,arguments)},sw=t._Abs=function(){return(sw=t._Abs=t.asm.Abs).apply(null,arguments)},Nd=t._Acos=function(){return(Nd=t._Acos=t.asm.Acos).apply(null,arguments)},Uc=t._Acosh=function(){return(Uc=t._Acosh=t.asm.Acosh).apply(null,arguments)},iw=t._Add=function(){return(iw=t._Add=t.asm.Add).apply(null,arguments)},aw=t._AddN=function(){return(aw=t._AddN=t.asm.AddN).apply(null,arguments)},lw=t._All=function(){return(lw=t._All=t.asm.All).apply(null,arguments)},uw=t._Any=function(){return(uw=t._Any=t.asm.Any).apply(null,arguments)},cw=t._ArgMax=function(){return(cw=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},kd=t._ArgMin=function(){return(kd=t._ArgMin=t.asm.ArgMin).apply(null,arguments)},Td=t._Asin=function(){return(Td=t._Asin=t.asm.Asin).apply(null,arguments)},pw=t._Asinh=function(){return(pw=t._Asinh=t.asm.Asinh).apply(null,arguments)},mw=t._Atan=function(){return(mw=t._Atan=t.asm.Atan).apply(null,arguments)},fw=t._Atan2=function(){return(fw=t._Atan2=t.asm.Atan2).apply(null,arguments)},Jm=t._Atanh=function(){return(Jm=t._Atanh=t.asm.Atanh).apply(null,arguments)},dw=t._AvgPool=function(){return(dw=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},hw=t._AvgPool3D=function(){return(hw=t._AvgPool3D=t.asm.AvgPool3D).apply(null,arguments)},gw=t._AvgPool3DGrad=function(){return(gw=t._AvgPool3DGrad=t.asm.AvgPool3DGrad).apply(null,arguments)},$u=t._AvgPoolGrad=function(){return($u=t._AvgPoolGrad=t.asm.AvgPoolGrad).apply(null,arguments)},xw=t._BatchMatMul=function(){return(xw=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},yw=t._Bincount=function(){return(yw=t._Bincount=t.asm.Bincount).apply(null,arguments)},_d=t._BitwiseAnd=function(){return(_d=t._BitwiseAnd=t.asm.BitwiseAnd).apply(null,arguments)},bw=t._Ceil=function(){return(bw=t._Ceil=t.asm.Ceil).apply(null,arguments)},Qm=t._ClipByValue=function(){return(Qm=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},ww=t._Conv2D=function(){return(ww=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},vw=t._Conv2DBackpropInput=function(){return(vw=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},Cw=t._Conv3D=function(){return(Cw=t._Conv3D=t.asm.Conv3D).apply(null,arguments)},Cl=t._Conv3DBackpropFilterV2=function(){return(Cl=t._Conv3DBackpropFilterV2=t.asm.Conv3DBackpropFilterV2).apply(null,arguments)},tf=t._Conv3DBackpropInputV2=function(){return(tf=t._Conv3DBackpropInputV2=t.asm.Conv3DBackpropInputV2).apply(null,arguments)},Iw=t._Cos=function(){return(Iw=t._Cos=t.asm.Cos).apply(null,arguments)},Sw=t._Cosh=function(){return(Sw=t._Cosh=t.asm.Cosh).apply(null,arguments)},Nw=t._CropAndResize=function(){return(Nw=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},kw=t._Cumprod=function(){return(kw=t._Cumprod=t.asm.Cumprod).apply(null,arguments)},Ed=t._Cumsum=function(){return(Ed=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},Ad=t._DenseBincount=function(){return(Ad=t._DenseBincount=t.asm.DenseBincount).apply(null,arguments)},Tw=t._DepthToSpace=function(){return(Tw=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},_w=t._DepthwiseConv2dNative=function(){return(_w=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Dd=t._Diag=function(){return(Dd=t._Diag=t.asm.Diag).apply(null,arguments)},Rd=t._Dilation2D=function(){return(Rd=t._Dilation2D=t.asm.Dilation2D).apply(null,arguments)},Ew=t._Dilation2DBackpropFilter=function(){return(Ew=t._Dilation2DBackpropFilter=t.asm.Dilation2DBackpropFilter).apply(null,arguments)},Aw=t._Dilation2DBackpropInput=function(){return(Aw=t._Dilation2DBackpropInput=t.asm.Dilation2DBackpropInput).apply(null,arguments)},Dw=t._Elu=function(){return(Dw=t._Elu=t.asm.Elu).apply(null,arguments)},Rw=t._EluGrad=function(){return(Rw=t._EluGrad=t.asm.EluGrad).apply(null,arguments)},$d=t._Equal=function(){return($d=t._Equal=t.asm.Equal).apply(null,arguments)},VN=t._Erf=function(){return(VN=t._Erf=t.asm.Erf).apply(null,arguments)},$w=t._Exp=function(){return($w=t._Exp=t.asm.Exp).apply(null,arguments)},Fw=t._Expm1=function(){return(Fw=t._Expm1=t.asm.Expm1).apply(null,arguments)},Ow=t._FlipLeftRight=function(){return(Ow=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},Pw=t._Floor=function(){return(Pw=t._Floor=t.asm.Floor).apply(null,arguments)},Mw=t._FloorDiv=function(){return(Mw=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},Lw=t._FusedBatchNorm=function(){return(Lw=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},zw=t._FusedConv2D=function(){return(zw=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Bw=t._FusedDepthwiseConv2D=function(){return(Bw=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},Vw=t._Gather=function(){return(Vw=t._Gather=t.asm.Gather).apply(null,arguments)},Gw=t._GatherNd=function(){return(Gw=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},Ww=t._Greater=function(){return(Ww=t._Greater=t.asm.Greater).apply(null,arguments)},Uw=t._GreaterEqual=function(){return(Uw=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},Hw=t._IsFinite=function(){return(Hw=t._IsFinite=t.asm.IsFinite).apply(null,arguments)},qw=t._IsInf=function(){return(qw=t._IsInf=t.asm.IsInf).apply(null,arguments)},Kw=t._IsNan=function(){return(Kw=t._IsNan=t.asm.IsNan).apply(null,arguments)},jw=t._LRN=function(){return(jw=t._LRN=t.asm.LRN).apply(null,arguments)},Xw=t._LRNGrad=function(){return(Xw=t._LRNGrad=t.asm.LRNGrad).apply(null,arguments)},Yw=t._LeakyRelu=function(){return(Yw=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},Zw=t._Less=function(){return(Zw=t._Less=t.asm.Less).apply(null,arguments)},Jw=t._LessEqual=function(){return(Jw=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},Qw=t._LinSpace=function(){return(Qw=t._LinSpace=t.asm.LinSpace).apply(null,arguments)},tv=t._Log=function(){return(tv=t._Log=t.asm.Log).apply(null,arguments)},ev=t._Log1p=function(){return(ev=t._Log1p=t.asm.Log1p).apply(null,arguments)},rv=t._LogicalAnd=function(){return(rv=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},nv=t._LogicalNot=function(){return(nv=t._LogicalNot=t.asm.LogicalNot).apply(null,arguments)},ov=t._LogicalOr=function(){return(ov=t._LogicalOr=t.asm.LogicalOr).apply(null,arguments)},sv=t._LogicalXor=function(){return(sv=t._LogicalXor=t.asm.LogicalXor).apply(null,arguments)},iv=t._Max=function(){return(iv=t._Max=t.asm.Max).apply(null,arguments)},av=t._MaxPool=function(){return(av=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},lv=t._MaxPool3D=function(){return(lv=t._MaxPool3D=t.asm.MaxPool3D).apply(null,arguments)},uv=t._MaxPool3DGrad=function(){return(uv=t._MaxPool3DGrad=t.asm.MaxPool3DGrad).apply(null,arguments)},cv=t._MaxPoolGrad=function(){return(cv=t._MaxPoolGrad=t.asm.MaxPoolGrad).apply(null,arguments)},pv=t._MaxPoolWithArgmax=function(){return(pv=t._MaxPoolWithArgmax=t.asm.MaxPoolWithArgmax).apply(null,arguments)},mv=t._Maximum=function(){return(mv=t._Maximum=t.asm.Maximum).apply(null,arguments)},fv=t._Mean=function(){return(fv=t._Mean=t.asm.Mean).apply(null,arguments)},dv=t._Min=function(){return(dv=t._Min=t.asm.Min).apply(null,arguments)},hv=t._Minimum=function(){return(hv=t._Minimum=t.asm.Minimum).apply(null,arguments)},gv=t._MirrorPad=function(){return(gv=t._MirrorPad=t.asm.MirrorPad).apply(null,arguments)},xv=t._Mod=function(){return(xv=t._Mod=t.asm.Mod).apply(null,arguments)},yv=t._Multinomial=function(){return(yv=t._Multinomial=t.asm.Multinomial).apply(null,arguments)},bv=t._Multiply=function(){return(bv=t._Multiply=t.asm.Multiply).apply(null,arguments)},wv=t._Neg=function(){return(wv=t._Neg=t.asm.Neg).apply(null,arguments)},vv=t._NonMaxSuppressionV3=function(){return(vv=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},Cv=t._NonMaxSuppressionV4=function(){return(Cv=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},Iv=t._NonMaxSuppressionV5=function(){return(Iv=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Sv=t._NotEqual=function(){return(Sv=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},Nv=t._OneHot=function(){return(Nv=t._OneHot=t.asm.OneHot).apply(null,arguments)},kv=t._PadV2=function(){return(kv=t._PadV2=t.asm.PadV2).apply(null,arguments)},Tv=t._Pow=function(){return(Tv=t._Pow=t.asm.Pow).apply(null,arguments)},_v=t._Prelu=function(){return(_v=t._Prelu=t.asm.Prelu).apply(null,arguments)},Ev=t._Prod=function(){return(Ev=t._Prod=t.asm.Prod).apply(null,arguments)},Av=t._RealDiv=function(){return(Av=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},Dv=t._Reciprocal=function(){return(Dv=t._Reciprocal=t.asm.Reciprocal).apply(null,arguments)},Rv=t._Relu=function(){return(Rv=t._Relu=t.asm.Relu).apply(null,arguments)},$v=t._Relu6=function(){return($v=t._Relu6=t.asm.Relu6).apply(null,arguments)},Fv=t._ResizeBilinear=function(){return(Fv=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},Ov=t._ResizeBilinearGrad=function(){return(Ov=t._ResizeBilinearGrad=t.asm.ResizeBilinearGrad).apply(null,arguments)},Pv=t._ResizeNearestNeighbor=function(){return(Pv=t._ResizeNearestNeighbor=t.asm.ResizeNearestNeighbor).apply(null,arguments)},Mv=t._ResizeNearestNeighborGrad=function(){return(Mv=t._ResizeNearestNeighborGrad=t.asm.ResizeNearestNeighborGrad).apply(null,arguments)},Lv=t._Reverse=function(){return(Lv=t._Reverse=t.asm.Reverse).apply(null,arguments)},zv=t._RotateWithOffset=function(){return(zv=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},Bv=t._Round=function(){return(Bv=t._Round=t.asm.Round).apply(null,arguments)},Vv=t._Rsqrt=function(){return(Vv=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},Gv=t._ScatterNd=function(){return(Gv=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},Wv=t._SearchSorted=function(){return(Wv=t._SearchSorted=t.asm.SearchSorted).apply(null,arguments)},Uv=t._SelectV2=function(){return(Uv=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},Hv=t._Selu=function(){return(Hv=t._Selu=t.asm.Selu).apply(null,arguments)},qv=t._Sigmoid=function(){return(qv=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},Kv=t._Sign=function(){return(Kv=t._Sign=t.asm.Sign).apply(null,arguments)},jv=t._Sin=function(){return(jv=t._Sin=t.asm.Sin).apply(null,arguments)},Xv=t._Sinh=function(){return(Xv=t._Sinh=t.asm.Sinh).apply(null,arguments)},Yv=t._Softmax=function(){return(Yv=t._Softmax=t.asm.Softmax).apply(null,arguments)},Zv=t._Softplus=function(){return(Zv=t._Softplus=t.asm.Softplus).apply(null,arguments)},Jv=t._SparseFillEmptyRows=function(){return(Jv=t._SparseFillEmptyRows=t.asm.SparseFillEmptyRows).apply(null,arguments)},Qv=t._SparseReshape=function(){return(Qv=t._SparseReshape=t.asm.SparseReshape).apply(null,arguments)},tC=t._SparseSegmentReduction=function(){return(tC=t._SparseSegmentReduction=t.asm.SparseSegmentReduction).apply(null,arguments)},eC=t._SparseToDense=function(){return(eC=t._SparseToDense=t.asm.SparseToDense).apply(null,arguments)},rC=t._Sqrt=function(){return(rC=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},nC=t._Square=function(){return(nC=t._Square=t.asm.Square).apply(null,arguments)},oC=t._SquaredDifference=function(){return(oC=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},sC=t._Step=function(){return(sC=t._Step=t.asm.Step).apply(null,arguments)},iC=t._StridedSlice=function(){return(iC=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},aC=t._Sub=function(){return(aC=t._Sub=t.asm.Sub).apply(null,arguments)},lC=t._Sum=function(){return(lC=t._Sum=t.asm.Sum).apply(null,arguments)},uC=t._Tan=function(){return(uC=t._Tan=t.asm.Tan).apply(null,arguments)},cC=t._Tanh=function(){return(cC=t._Tanh=t.asm.Tanh).apply(null,arguments)},pC=t._TensorScatterUpdate=function(){return(pC=t._TensorScatterUpdate=t.asm.TensorScatterUpdate).apply(null,arguments)},mC=t._Tile=function(){return(mC=t._Tile=t.asm.Tile).apply(null,arguments)},fC=t._TopK=function(){return(fC=t._TopK=t.asm.TopK).apply(null,arguments)},dC=t._Transform=function(){return(dC=t._Transform=t.asm.Transform).apply(null,arguments)},hC=t._Transpose=function(){return(hC=t._Transpose=t.asm.Transpose).apply(null,arguments)},gC=t.__FusedMatMul=function(){return(gC=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},xC=t._malloc=function(){return(xC=t._malloc=t.asm.malloc).apply(null,arguments)},yC=t._free=function(){return(yC=t._free=t.asm.free).apply(null,arguments)},bC=t.___errno_location=function(){return(bC=t.___errno_location=t.asm.__errno_location).apply(null,arguments)},Fd=t.stackSave=function(){return(Fd=t.stackSave=t.asm.stackSave).apply(null,arguments)},Od=t.stackRestore=function(){return(Od=t.stackRestore=t.asm.stackRestore).apply(null,arguments)},ef=t.stackAlloc=function(){return(ef=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},wC=t.dynCall_iijjiiii=function(){return(wC=t.dynCall_iijjiiii=t.asm.dynCall_iijjiiii).apply(null,arguments)},vC=t.dynCall_jiji=function(){return(vC=t.dynCall_jiji=t.asm.dynCall_jiji).apply(null,arguments)};t.cwrap=ew;var Hc;zr=function Y(){Hc||Pd(),Hc||(zr=Y)};function Pd(Y){if(Y=Y||a,Ye>0||(Ae(),Ye>0))return;function ct(){Hc||(Hc=!0,t.calledRun=!0,!G&&(De(),n(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),An()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),ct()},1)):ct()}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();Pd();var qc;s&&(qc={uncaughtException:process.listeners("uncaughtException").filter(function(Y){return!s.uncaughtException.indexOf(Y)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Y){return!s.unhandledRejection.indexOf(Y)>-1})});var Kc;if(typeof e<"u")Kc=e;else if(typeof WasmBackendModuleThreadedSimd<"u")Kc=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(qc){var CC=Kc._dispose;Kc._dispose=function(){CC(),qc.uncaughtException.forEach(function(Y){process.removeListener("uncaughtException",Y)}),qc.unhandledRejection.forEach(function(Y){process.removeListener("unhandledRejection",Y)})}}return e.ready}})();typeof Kb=="object"&&typeof RN=="object"?RN.exports=DN:typeof define=="function"&&define.amd?define([],function(){return DN}):typeof Kb=="object"&&(Kb.WasmBackendModule=DN)});var da=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Lo=class{refCount(e){return $n("refCount")}incRef(e){return $n("incRef")}timerAvailable(){return!0}time(e){return $n("time")}read(e){return $n("read")}readSync(e){return $n("readSync")}readToGPU(e,t){return $n("readToGPU")}numDataIds(){return $n("numDataIds")}disposeData(e,t){return $n("disposeData")}write(e,t,n){return $n("write")}move(e,t,n,o,s){return $n("move")}createTensorFromGPUData(e,t,n){return $n("createTensorFromGPUData")}memory(){return $n("memory")}floatPrecision(){return $n("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return $n("dispose")}};function $n(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ok(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,jd(r,e,t)}function B4(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,jd(r,t,n),jd(e,t,n)}function Yc(r,e,t){return Math.max(r,Math.min(e,t))}function V4(r){return r%2===0?r:r+1}function jd(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}function G4(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function W4(r,e){let t=Math.random();return e*t+(1-t)*r}function U4(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function E(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Qe(r,e,t=""){E(Fn(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function to(r){E(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Kt(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function H4(r){return r.length===0}function _C(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==null&&e[t]!==null&&r[t]!==e[t])return!1;return!0}function Fn(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function ha(r){return r%1===0}function q4(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function K4(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function j4(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return ok(e),e}function Pu(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function X4(r,e=o=>0,t,n){return new Promise((o,s)=>{let i=0,a=()=>{if(r()){o();return}i++;let u=e(i);if(t!=null&&i>=t){s();return}n!=null?n(a,u):setTimeout(a,u)};a()})}function Y4(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function pr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),E(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),E(r.every(n=>ha(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function EC(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:pr(e,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(t.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(t.push(r[a]),n.push(a))}return{newShape:t,keptDims:n}}function AC(r,e){return Xd(r,e)}function Xd(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function DC(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function RC(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function Z4(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function Zc(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function $C(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function Jc(r){return typeof r=="string"||r instanceof String}function sk(r){return typeof r=="boolean"}function ik(r){return typeof r=="number"}function kl(r){return Array.isArray(r)?kl(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":ik(r)?"float32":Jc(r)?"string":sk(r)?"bool":"float32"}function Qc(r){return!!(r&&r.constructor&&r.call&&r.apply)}function tp(r,e){for(let t=e;t<r;++t)if(r%t===0)return t;return r}function vi(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function ak(r,e,t,n=!1){let o=new Array;if(e.length===1){let s=e[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=t[r+i]}else{let s=e[0],i=e.slice(1),a=i.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=ak(r+u*a,i,t,n)}return o}function Ou(r,e,t=!1){if(r.length===0)return e[0];let n=r.reduce((o,s)=>o*s)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return ak(0,r,e,t)}function J4(r,e){if(Array.isArray(r))return r;if(e==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(e==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${e}`)}function nf(r,e){let t=ep(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function ep(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function Q4(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Ou(r,new Float32Array(t));if(e==="int32")return Ou(r,new Int32Array(t));if(e==="bool")return Ou(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Pe(r){r.forEach(e=>{E(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function tH(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function eH(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function Mu(r){return r&&r.then&&typeof r.then=="function"}var lk="tfjsflags",of=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=nH,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Mu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);lk in e&&e[lk].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=sH(o,s)})}};function nH(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(oH(e,n[0],n[1]),n.join("="))),e}function oH(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function sH(r,e){let t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function z(){return FC}var FC=null;function uk(r){FC=r}var OC;function PC(){if(OC==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");OC=r}return OC}function iH(){let r=PC();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function sf(r,e){let t=iH();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var Ci="Abs",zo="Acos",Bo="Acosh",eo="Add",Vo="AddN",ga="All",xa="Any",Ii="ArgMax",Si="ArgMin",Go="Asin",Wo="Asinh",Uo="Atan",Ho="Atanh",qo="Atan2",Ko="AvgPool",Tl="AvgPoolGrad",Ni="AvgPool3D",_l="AvgPool3DGrad",jo="BatchMatMul",ki="BatchToSpaceND",ya="Bincount",ba="BitwiseAnd",ck="BroadcastTo",El="BroadcastArgs",po="Cast",Xo="Ceil",mo="ClipByValue",rp="Complex",Al="ComplexAbs",Ti="Concat",Yo="Conv2D",np="Conv2DBackpropFilter",Zo="Conv2DBackpropInput",Jo="Conv3D",wa="Conv3DBackpropFilterV2",va="Conv3DBackpropInputV2",Qo="Cos",ts="Cosh",Ca="Cumprod",es="Cumsum",Ia="CropAndResize",Dl="DenseBincount",Sa="DepthToSpace",rs="DepthwiseConv2dNative",op="DepthwiseConv2dNativeBackpropFilter",sp="DepthwiseConv2dNativeBackpropInput",Rl="Diag",ns="Dilation2D",$l="Dilation2DBackpropInput",Fl="Dilation2DBackpropFilter",af="Draw",os="RealDiv",ip="Einsum",ss="Elu",Na="EluGrad",is="Erf",ka="Equal",as="Exp",_i="ExpandDims",ls="Expm1",ap="FFT",Ol="Fill",Ta="FlipLeftRight",us="Floor",cs="FloorDiv",ps="FusedBatchNorm",Ei="GatherV2",_a="GatherNd",Ea="Greater",ms="GreaterEqual",fo="Identity",lp="IFFT",up="Imag",fs="IsFinite",ds="IsInf",hs="IsNan",gs="LeakyRelu",Aa="Less",Da="LessEqual",Ra="LinSpace",xs="Log",ys="Log1p",$a="LogicalAnd",Fa="LogicalNot",Oa="LogicalOr",pk="LogicalXor",mk="LogSoftmax";var bs="LRN",Pa="LRNGrad";var ws="Max",vs="Maximum",Cs="MaxPool",Pl="MaxPoolGrad",Ai="MaxPool3D",Ml="MaxPool3DGrad",Ll="MaxPoolWithArgmax",Is="Mean",Ss="Min",Ns="Minimum",ks="MirrorPad",Ts="Mod",Ma="Multinomial",_s="Multiply",Di="Neg",La="NotEqual",za="NonMaxSuppressionV3",Ba="NonMaxSuppressionV4",Va="NonMaxSuppressionV5",Ri="OnesLike",Es="OneHot",$i="Pack",As="PadV2";var Ds="Pow",Rs="Prelu",$s="Prod",cp="RaggedGather",pp="RaggedRange",mp="RaggedTensorToTensor",zl="Range",fp="Real",Fs="Reciprocal",Os="Relu",Fi="Reshape",Ps="ResizeNearestNeighbor",Ga="ResizeNearestNeighborGrad",Ms="ResizeBilinear",Wa="ResizeBilinearGrad",Ls="Relu6",zs="Reverse",Bs="Round",Vs="Rsqrt",Ua="ScatterNd",Ha="TensorScatterUpdate",qa="SearchSorted",Oi="Select",Gs="Selu",Pi="Slice",Ws="Sin",Us="Sinh",Hs="Sign",qs="Sigmoid",Ks="Softplus",js="Sqrt",Xs="Sum",Mi="SpaceToBatchND",Li="SplitV",Ys="Softmax",Bl="SparseFillEmptyRows",Ka="SparseReshape",Vl="SparseSegmentMean",Gl="SparseSegmentSum",ja="SparseToDense",Zs="SquaredDifference",Wl="Square",Lu="StaticRegexReplace",Xa="StridedSlice",Ul="StringNGrams",Hl="StringSplit",ql="StringToHashBucketFast",Js="Sub",Qs="Tan",ti="Tanh",ro="Tile",Ya="TopK",Za="Transform",no="Transpose",Kl="Unique",zi="Unpack",jl="UnsortedSegmentSum";var Bi="ZerosLike",ho="Step",lf="FromPixels",Ja="RotateWithOffset",Vi="_FusedMatMul",Gi="FusedConv2D",Wi="FusedDepthwiseConv2D";function Ui(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...r)}function aH(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...r)}var Yd=sf("kernelRegistry",()=>new Map),MC=sf("gradRegistry",()=>new Map);function dp(r,e){let t=hk(r,e);return Yd.get(t)}function LC(r){return MC.get(r)}function zC(r){let e=Yd.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&t.push(i)}return t}function hp(r){let{kernelName:e,backendName:t}=r,n=hk(e,t);Yd.has(n)&&Ui(`The kernel '${e}' for backend '${t}' is already registered`),Yd.set(n,r)}function dk(r){let{kernelName:e}=r;MC.has(e)&&z().getBool("DEBUG")&&Ui(`Overriding the gradient for '${e}'`),MC.set(e,r)}function hk(r,e){return`${e}_${r}`}var b={};de(b,{arraysEqual:()=>Fn,arraysEqualWithNull:()=>_C,assert:()=>E,assertNonNegativeIntegerDimensions:()=>Pe,assertNonNull:()=>to,assertShapesMatch:()=>Qe,bytesFromStringArray:()=>$C,bytesPerElement:()=>Zc,checkConversionForErrors:()=>DC,clamp:()=>Yc,computeStrides:()=>vi,convertBackendValuesAndArrayBuffer:()=>J4,createScalarValue:()=>dH,createShuffledIndices:()=>j4,decodeString:()=>wp,distSquared:()=>U4,encodeString:()=>bp,fetch:()=>gH,fingerPrint64:()=>fH,flatten:()=>Yl,getArrayFromDType:()=>Xd,getTypedArrayFromDType:()=>AC,hasEncodingLoss:()=>Z4,hexToLong:()=>uf,indexToLoc:()=>eH,inferDtype:()=>kl,inferFromImplicitShape:()=>Y4,isBoolean:()=>sk,isFunction:()=>Qc,isInt:()=>ha,isNumber:()=>ik,isPromise:()=>Mu,isScalarShape:()=>H4,isString:()=>Jc,isTypedArray:()=>Jr,isValidDtype:()=>RC,locToIndex:()=>tH,makeOnesTypedArray:()=>nf,makeZerosNestedTypedArray:()=>Q4,makeZerosTypedArray:()=>ep,nearestDivisor:()=>tp,nearestLargerEven:()=>V4,now:()=>Wu,parseAxisParam:()=>pr,randUniform:()=>W4,repeatedTry:()=>X4,rightPad:()=>Pu,shuffle:()=>ok,shuffleCombo:()=>B4,sizeFromShape:()=>Kt,sizeToSquarishShape:()=>K4,squeezeShape:()=>EC,sum:()=>G4,swap:()=>jd,tanh:()=>q4,toNestedArray:()=>Ou,toTypedArray:()=>yp});function Zd(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var WC=Sl(kk());var Gu=WC.default||WC;function uf(r){return Gu.fromString(r,!0,16)}var _k=uf("c3a5c85c97cb3127"),Vu=uf("b492b66fbe98f273"),on=uf("9ae16a3b2f90404f");function GC(r){return r.xor(r.shru(47))}function Ek(r,e,t){let n=r.slice(e,e+t);return Gu.fromBytes(Array.from(n),!0,!0)}function Me(r,e){return Ek(r,e,8)}function Tk(r,e){return Ek(r,e,4)}function Er(r,e){return e===0?r:r.shru(e).or(r.shl(64-e))}function Xl(r,e,t=uf("9ddfea08eb382d69")){let n=r.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function uH(r,e,t,n,o,s){o=o.add(r),s=Er(s.add(o).add(n),21);let i=o;return o=o.add(e),o=o.add(t),s=s.add(Er(o,44)),[o.add(n),s.add(i)]}function Qd(r,e,t,n){return uH(Me(r,e),Me(r,e+8),Me(r,e+16),Me(r,e+24),t,n)}function cH(r,e=r.length){if(e>=8){let t=on.add(e*2),n=Me(r,0).add(on),o=Me(r,e-8),s=Er(o,37).mul(t).add(n),i=Er(n,25).add(o).mul(t);return Xl(s,i,t)}if(e>=4){let t=on.add(e*2),n=Tk(r,0);return Xl(n.shl(3).add(e),Tk(r,e-4),t)}if(e>0){let t=r[0],n=r[e>>1],o=r[e-1],s=t+(n<<8),i=e+(o<<2);return GC(on.mul(s).xor(_k.mul(i))).mul(on)}return on}function pH(r,e=r.length){let t=on.add(e*2),n=Me(r,0).mul(Vu),o=Me(r,8),s=Me(r,e-8).mul(t),i=Me(r,e-16).mul(on);return Xl(Er(n.add(o),43).add(Er(s,30)).add(i),n.add(Er(o.add(on),18)).add(s),t)}function mH(r,e=r.length){let t=on.add(e*2),n=Me(r,0).mul(on),o=Me(r,8),s=Me(r,e-8).mul(t),i=Me(r,e-16).mul(on),a=Er(n.add(o),43).add(Er(s,30)).add(i),u=Xl(a,n.add(Er(o.add(on),18)).add(s),t),l=Me(r,16).mul(t),c=Me(r,24),p=a.add(Me(r,e-32)).mul(t),m=u.add(Me(r,e-24)).mul(t);return Xl(Er(l.add(c),43).add(Er(p,30)).add(m),l.add(Er(c.add(n),18)).add(p),t)}function fH(r,e=r.length){let t=Gu.fromNumber(81,!0);if(e<=32)return e<=16?cH(r,e):pH(r,e);if(e<=64)return mH(r,e);let n=t,o=t.mul(Vu).add(113),s=GC(o.mul(on).add(113)).mul(on),i=[Gu.UZERO,Gu.UZERO],a=[Gu.UZERO,Gu.UZERO];n=n.mul(on).add(Me(r,0));let u=0,l=(e-1>>6)*64,c=l+(e-1&63)-63;do n=Er(n.add(o).add(i[0]).add(Me(r,u+8)),37).mul(Vu),o=Er(o.add(i[1]).add(Me(r,u+48)),42).mul(Vu),n=n.xor(a[1]),o=o.add(i[0]).add(Me(r,u+40)),s=Er(s.add(a[0]),33).mul(Vu),i=Qd(r,u,i[1].mul(Vu),n.add(a[0])),a=Qd(r,u+32,s.add(a[1]),o.add(Me(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let p=Vu.add(s.and(255).shl(1));return u=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=Er(n.add(o).add(i[0]).add(Me(r,u+8)),37).mul(p),o=Er(o.add(i[1]).add(Me(r,u+48)),42).mul(p),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(Me(r,u+40))),s=Er(s.add(a[0]),33).mul(p),i=Qd(r,u,i[1].mul(p),n.add(a[0])),a=Qd(r,u+32,s.add(a[1]),o.add(Me(r,u+16))),[s,n]=[n,s],Xl(Xl(i[0],a[0],p).add(GC(o).mul(_k)).add(s),Xl(i[1],a[1],p).add(n),p)}function dH(r,e){return e==="string"?bp(r):yp([r],e)}function hH(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function yp(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Yl(r)),z().getBool("DEBUG")&&DC(r,e),hH(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Wu(){return z().platform.now()}function gH(r,e){return z().platform.fetch(r,e)}function bp(r,e="utf-8"){return e=e||"utf-8",z().platform.encode(r,e)}function wp(r,e="utf-8"){return e=e||"utf-8",z().platform.decode(r,e)}function Jr(r){return z().platform.isTypedArray!=null?z().platform.isTypedArray(r):Zd(r)}function Yl(r,e=[],t=!1){if(e==null&&(e=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Mu(r)||r==null||Jr(r)&&t)e.push(r);else if(Array.isArray(r)||Jr(r))for(let n=0;n<r.length;++n)Yl(r[n],e,t);else{let n=-1;for(let o of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)Yl(r[o],e,t)}return e}var th=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new UC)}profileKernel(e,t,n){let o,s=()=>{o=n()},i,a=Wu();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();i=Promise.resolve({kernelMs:Wu()-a})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let c=o[l];c.data().then(p=>{xH(p,c.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:i}=e;n.forEach(a=>{Promise.all([a.data(),o,i]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],s,u[2])})})}};function xH(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var UC=class{logKernelProfile(e,t,n,o,s,i){let a=typeof o=="number"?Pu(`${o}ms`,9):o.error,u=Pu(e,25),l=t.rank,c=t.size,p=Pu(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Ak(r,e,t){let n={},o={};for(let u=0;u<e.length;u++)n[e[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],c=l.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){l.outputs.forEach(h=>n[h.id]=!0),f=!0,o[l.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let i={};for(let u=r.length-1;u>=0;u--){let l=r[u],c=l.inputs;for(let p=0;p<l.outputs.length;p++)if(s[l.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[l.id]=!0;break}}let a=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&i[l.id]){let c={};for(let m in l.inputs){let f=l.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},l);p.inputs=c,p.outputs=l.outputs,a.push(p)}}return a}function Dk(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],i=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?i.push(l):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let u in s.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);let l=t(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let c=s.inputs[u];if(!Fn(l.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=l;else{let p=r[c.id];r[c.id]=n(p,l),p.dispose()}}}}var Rk=20,cf=3,HC=7;function $k(r,e,t,n){let o=vi(e),s=yH(r,e,t,o),i=e.length,a=eh(r,e,t,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function yH(r,e,t,n){let o=Kt(e),s=n[n.length-1],i=new Array(s).fill(0),a=e.length,u=t==="complex64"?mf(r):r;if(a>1)for(let l=0;l<o/s;l++){let c=l*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],pf(u[c+p],0,t).length)}return i}function pf(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(HC))} + ${parseFloat(r[1].toFixed(HC))}j`:Jc(r)?n=`'${r}'`:t==="bool"?n=Fk(r):n=parseFloat(r.toFixed(HC)).toString(),Pu(n,e)}function Fk(r){return r===0?"false":"true"}function eh(r,e,t,n,o,s=!0){let i=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){let h=mf(r);return[pf(h[0],0,t)]}return t==="bool"?[Fk(r[0])]:[r[0].toString()]}if(u===1){if(a>Rk){let g=cf*i,x=Array.from(r.slice(0,g)),y=Array.from(r.slice((a-cf)*i,a*i));return t==="complex64"&&(x=mf(x),y=mf(y)),["["+x.map((w,v)=>pf(w,o[v],t)).join(", ")+", ..., "+y.map((w,v)=>pf(w,o[a-cf+v],t)).join(", ")+"]"]}return["["+(t==="complex64"?mf(r):Array.from(r)).map((g,x)=>pf(g,o[x],t)).join(", ")+"]"]}let l=e.slice(1),c=n.slice(1),p=n[0]*i,m=[];if(a>Rk){for(let h=0;h<cf;h++){let g=h*p,x=g+p;m.push(...eh(r.slice(g,x),l,t,c,o,!1))}m.push("...");for(let h=a-cf;h<a;h++){let g=h*p,x=g+p;m.push(...eh(r.slice(g,x),l,t,c,o,h===a-1))}}else for(let h=0;h<a;h++){let g=h*p,x=g+p;m.push(...eh(r.slice(g,x),l,t,c,o,h===a-1))}let f=u===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<u;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function mf(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var ae=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Kt(e),n!=null){let o=n.length;E(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Xd(t,this.size),this.strides=vi(e)}set(e,...t){t.length===0&&(t=[0]),E(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ri().makeTensor(this.values,this.shape,this.dtype)}},ri=null,vp=null,bH=null;function Ok(r){ri=r}function Pk(r){vp=r}function Mk(r){bH=r}var zt=class{constructor(e,t,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Kt(e),this.strides=vi(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return vp.buffer(this.shape,this.dtype,e)}bufferSync(){return vp.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ou(this.shape,e,this.dtype==="complex64")}arraySync(){return Ou(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=ri().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>wp(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ri().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ri().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>wp(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ri().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ri().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return vp.print(this,e)}clone(){return this.throwIfDisposed(),vp.clone(this)}toString(e=!1){let t=this.dataSync();return $k(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),vp.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ri().makeVariable(this,e,t,n)}};Object.defineProperty(zt,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function P(){return sf("Tensor",()=>zt)}P();var Qa=class extends zt{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Fn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ri().disposeTensor(this),this.dataId=e.dataId,ri().incRef(this,null)}dispose(){ri().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Qa,Symbol.hasInstance,{value:r=>r instanceof zt&&r.assign!=null&&r.assign instanceof Function});var Lk=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(Lk||{}),zk=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(zk||{}),Bk=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(Bk||{}),Vk=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(Vk||{}),wH={float32:Bk,int32:Lk,bool:zk,complex64:Vk};function ir(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return wH[r][e]}function Uu(r){return ir(r,"int32")}function rh(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function nh(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Yt(r,e){if(r.dtype===e.dtype)return[r,e];let t=ir(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Gk(r,e){E(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function oh(r){let e=[];return Wk(r,e,new Set),e}function Wk(r,e,t){if(r==null)return;if(r instanceof zt){e.push(r);return}if(!vH(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),Wk(s,e,t))}}function vH(r){return Array.isArray(r)||typeof r=="object"}function qC(r){return r.kernelName!=null}var sh=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},IH=(()=>{class r{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new sh}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let o=t[n];if(await this.initializeBackend(o).success){await this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,o=1){return t in this.registryFactory?(Ui(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:o},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:n,asyncInit:o}=this.initializeBackend(t);if(!(o?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new th(this.backendInstance),!0}setupRegisteredKernels(){zC(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){zC(t).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[t])})}initializeBackend(t){let n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let o=n.factory();if(o&&!(o instanceof Lo)&&typeof o.then=="function"){let s=++this.pendingBackendInitId,i=o.then(a=>s<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ui(`Initialization of backend ${t} failed`),Ui(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=o,{success:!0,asyncInit:!1}}catch(o){return Ui(`Initialization of backend ${t} failed`),Ui(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let n=0;n<t.length;n++){let o=t[n],{success:s,asyncInit:i}=this.initializeBackend(o);if(i||s)return{name:o,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){let o=this.state.tensorInfo.get(n),s=o.backend,i=this.readSync(n),a=s.refCount(n);s.disposeData(n,!0),o.backend=t,t.move(n,i,o.shape,o.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let o=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=t}let s;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(s),()=>(s=n(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(t,n,o){t();try{let s=o();return n(),s}catch(s){throw n(),s}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(t){let n=T.runKernel(fo,{x:t}),o={x:t},s=a=>({x:()=>{let u="float32",l={x:a},c={dtype:u};return T.runKernel(po,l,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,o,[n],s,i,{}),n}runKernel(t,n,o){if(this.backendName==null&&this.backend,!(dp(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,o){let s=this.backend.numDataIds(),i=0;o.forEach(l=>{i+=l.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],u=s-n-i-a;if(u>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${u} data ids) after running '${t}'`)}runKernelFunc(t){let n,o=[],s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let u;this.backendName==null&&this.backend;let l,c=qC(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(qC(t)){let{kernelName:h,inputs:g,attrs:x}=t;this.backendName==null&&this.backend;let y=dp(h,this.backendName);E(y!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),u=()=>{let w=this.backend.numDataIds();l=y.kernelFunc({inputs:g,attrs:x,backend:this.backend});let v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,w,v);let N=v.map(_=>_.rank!=null?_:this.makeTensorFromTensorInfo(_));if(s){let _=this.getTensorsForGradient(h,g,N);o=this.saveTensorsForBackwardMode(_)}return N}}else{let{forwardFunc:h}=t,g=x=>{s&&(o=x.map(y=>this.keep(this.clone(y))))};u=()=>{let x=this.backend.numDataIds();l=this.tidy(()=>h(this.backend,g));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,x,y),y}}let{inputs:p,attrs:m}=t,f=qC(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=u():(d=this.profiler.profileKernel(c,p,()=>u()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),n=d.outputs)}),s&&this.addTapeNode(c,p,n,f,o,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(h=>p[h]!=null?p[h].shape:null),outputShapes:n.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(l)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(t,n,o){let s=LC(t);if(s!=null){let i=s.inputsToSave||[],a=s.outputsToSave||[],u;s.saveAllInputs?(E(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),u=Object.keys(n).map(c=>n[c])):u=i.map(c=>n[c]);let l=o.filter((c,p)=>a[p]);return u.concat(l)}return[]}makeTensor(t,n,o,s){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",s=s||this.backend;let i=t;o==="string"&&Jc(t[0])&&(i=t.map(l=>bp(l)));let a=s.write(i,n,o),u=new zt(n,o,a,this.nextTensorId());if(this.trackTensor(u,s),o==="string"){let l=this.state.tensorInfo.get(a),c=$C(i);this.state.numBytes+=c-l.bytes,l.bytes=c}return u}makeTensorFromDataId(t,n,o,s){o=o||"float32";let i={dataId:t,shape:n,dtype:o};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(t,n){let{dataId:o,shape:s,dtype:i}=t,a=new zt(s,i,o,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(t,n=!0,o,s){o=o||this.nextVariableId().toString(),s!=null&&s!==t.dtype&&(t=t.cast(s));let i=new Qa(t,n,o,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let o=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(o=t.size*Zc(t.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:o})),t instanceof Qa||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let o=t.size*Zc(t.dtype);this.state.numBytes-=o}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let n=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,o,s,i,a){let u={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:o,saved:i},l=LC(t);l!=null&&(s=l.gradFunc),s!=null&&(u.gradient=c=>(c=c.map((p,m)=>{if(p==null){let f=o[m],d=ep(f.size,f.dtype);return this.makeTensor(d,f.shape,f.dtype)}return p}),s(c.length>1?c:c[0],i,a))),this.state.activeTape.push(u)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){let n=oh(t),o=new Set(n.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){let a=this.state.activeScope.track[i];!a.kept&&!o.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(t,n,o,s=!1){if(E(n.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));E(i instanceof zt,()=>"The result y returned by f() must be a tensor.");let a=Ak(this.state.activeTape,n,i);if(!s&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let u={};u[i.id]=o??SH(i.shape),Dk(u,a,c=>this.tidy(c),NH);let l=n.map(c=>u[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(t){return E(Qc(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{E(n.every(u=>u instanceof zt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,s={};n.forEach((u,l)=>{s[l]=u});let i=(u,l)=>(o=t(...n,l),E(o.value instanceof zt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(Qc(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),a=(u,l)=>{let c=o.gradFunc(u,l),p=Array.isArray(c)?c:[c];E(p.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(p.every(f=>f instanceof zt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((f,d)=>{m[d]=()=>f}),m};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){let n=Wu(),o=await this.backend.time(t);return o.wallMs=Wu()-n,o}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new sh;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function SH(r){let e=nf(Kt(r),"float32");return T.makeTensor(e,r,"float32")}function KC(){let r=PC();if(r._tfengine==null){let e=new of(r);r._tfengine=new IH(e)}return uk(r._tfengine.ENV),Ok(()=>r._tfengine),r._tfengine}var T=KC();function NH(r,e){let t={a:r,b:e};return T.runKernel(eo,t)}var Zl={};de(Zl,{isBrowser:()=>XC,isMobile:()=>_H,mockIsMobile:()=>TH});function kH(){return typeof navigator<"u"&&navigator!=null}var jC;function TH(r){jC=r}function _H(r){if(jC!==void 0)return jC;if(r||kH()){if(r||(r=navigator),r.product==="ReactNative")return!0;let e=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!e){let t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function XC(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var yn=z();yn.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});yn.registerFlag("IS_BROWSER",()=>XC());yn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");yn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));yn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));yn.registerFlag("PROD",()=>!1);yn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>yn.getBool("DEBUG"));yn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);yn.registerFlag("IS_TEST",()=>!1);yn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>yn.getBool("DEBUG"));yn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);yn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);yn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function bn(r,e){let t=r;if(Jr(r))return e==="string"?[]:[r.length];if(rh(r)){let o=r.channels||"RGBA";return[r.height,r.width*o.length]}else if(nh(r))return[r.buffer.size/(e==null?4:Zc(e))];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||Jr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hk(r,n,[]),n}function Hk(r,e,t){if(t=t||[],!Array.isArray(r)&&!Jr(r)){E(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}E(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),E(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)Hk(r[o],n,t.concat(o))}function Uk(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function S(r,e,t,n="numeric"){if(r instanceof P())return Uk(n,r.dtype,e,t),r;let o=kl(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),Uk(n,o,e,t),r==null||!Jr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}let s=bn(r,o);!Jr(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?yp(r,o):Yl(r,[],!0);return T.makeTensor(a,s,o)}function Hu(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>S(s,`${e}[${i}]`,t,n))}var YC="__op";function k(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+YC;let o=(...s)=>{T.startScope(t);try{let i=n(...s);return Mu(i)&&console.error("Cannot return a Promise inside of tidy."),T.endScope(i),i}catch(i){throw T.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function EH(r,e){let t=S(r,"real","complex"),n=S(e,"imag","complex");Qe(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return T.runKernel(rp,o)}var wn=k({complex_:EH});function sn(r,e,t,n){if(n==null)n=kl(r);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(nh(r)||rh(r)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return T.backend.createTensorFromGPUData(r,e||t,n)}if(!Jr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Pe(e);let o=Kt(e),s=Kt(t);E(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<t.length;++i){let a=t[i],u=i===t.length-1?a!==Kt(e.slice(i)):!0;E(t[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Jr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?yp(r,n):Yl(r,[],!0),T.makeTensor(r,e,n)}function mr(r,e,t){let n=bn(r,t);return sn(r,e,n,t)}var tl={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Br=class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(n=>Jr(n)?n.buffer:n),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let o=e[n];n!==e.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=t+o.byteLength;this.shards.push({buffer:o,start:t,end:s}),t=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(n===-1)throw new Error(`Could not find start shard for byte ${e}`);let o=t-e,s=new ArrayBuffer(o),i=new Uint8Array(s),a=0;for(let u=n;u<this.shards.length;u++){let l=this.shards[u],p=e+a-l.start,m=a,d=Math.min(t,l.end)-l.start,h=new Uint8Array(l.buffer,p,d-p);if(i.set(h,m),a+=h.length,t<l.end)break}return s}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(o){return e<o.start?-1:e>=o.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let n=AH(this.shards,t);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function AH(r,e){let t=0,n=r.length;for(;t<=n;){let o=Math.floor((n-t)/2)+t,s=e(r[o]);if(s===0)return o;s<0?n=o:t=o+1}return-1}function qk(r){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}Mk(qk);function Mn(){return T}function ff(){return T.memory()}function B(r,e){return T.tidy(r,e)}function $t(r){oh(r).forEach(t=>t.dispose())}function Re(r){return T.keep(r)}function ZC(r){return T.setBackend(r)}function Kk(){return T.backendName}function Cp(r,e,t=1){return T.registerBackend(r,e,t)}function ih(){return T.backend}var Jl=4;async function Yk(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],u=Array.isArray(r)?r[i].tensor:r[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);let l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let c=new Promise(async p=>{let m=await u.bytes(),f=m.reduce((g,x)=>g+x.length,0)+Jl*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let x=m[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(y,h),h+=Jl,d.set(x,h),h+=x.length}p(d)});n.push(c)}else n.push(u.data());e!=null&&(l.group=e),t.push(l)}let s=await Promise.all(n);return{data:$H(s),specs:t}}function ah(r,e){let t=new Br(r),n={},o=0;for(let s of e){let i=DH(s,(a,u)=>t.slice(o+a,o+u));n[s.name]=Zk(s,t.slice(o,o+i)),o+=i}return n}function DH(r,e){let t=Kt(r.shape),n;if("quantization"in r){let o=r.quantization;n=tl[o.dtype]}else if(r.dtype==="string"){let o=0;for(let s=0;s<t;s++)o+=Jl+new Uint32Array(e(o,o+Jl))[0];return o}else n=tl[r.dtype];return t*n}async function RH(r,e){let t=Kt(r.shape),n;if("quantization"in r){let o=r.quantization;n=tl[o.dtype]}else if(r.dtype==="string"){let o=0;for(let s=0;s<t;s++)o+=Jl+new Uint32Array(await e(o,o+Jl))[0];return o}else n=tl[r.dtype];return t*n}function Zk(r,e){let t=r.name,n=r.dtype,o=r.shape,s=Kt(o),i,a=0;if("quantization"in r){let u=r.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${r.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(n!=="float32")throw new Error(`Weight ${r.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${n}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let l=tl[u.dtype],c=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(n==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=m*u.scale+u.min}}else if(u.dtype==="float16")i=MH()(c);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(n==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${n}`);a+=s*l}else if(n==="string"){let u=Kt(r.shape);i=[];for(let l=0;l<u;l++){let c=new Uint32Array(e.slice(a,a+Jl))[0];a+=Jl;let p=new Uint8Array(e.slice(a,a+c));i.push(p),a+=c}}else{let u=tl[n];if(n==="float32")i=new Float32Array(e);else if(n==="int32")i=new Int32Array(e);else if(n==="bool")i=new Uint8Array(e);else if(n==="complex64"){i=new Float32Array(e);let l=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let d=0;d<l.length;d++)l[d]=i[d*2],c[d]=i[d*2+1];let p=mr(l,o,"float32"),m=mr(c,o,"float32"),f=wn(p,m);return p.dispose(),m.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${n}`);a+=s*u}return mr(i,o,n)}async function jk(r,e,t){let n=new Uint8Array(e);for(;n.byteLength<t;){let{done:o,value:s}=await r.read();if(o&&s==null){let a=t-n.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let i=new Uint8Array(n.length+s.byteLength);i.set(n,0),i.set(new Uint8Array(s),n.length),n=i}return n.buffer}async function lh(r,e){let t={},n=r.getReader(),o=new ArrayBuffer(0);for(let s of e){let i=await RH(s,async(l,c)=>(o=await jk(n,o,c),o.slice(l,c)));o=await jk(n,o,i);let a=o.slice(0,i);o=o.slice(i);let u=Zk(s,a);if(t[s.name]=u,Kk()==="webgpu"){let l=ih();"uploadToGPU"in l&&Kt(u.shape)>=z().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(u.dataId)}}return t}function $H(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var JC=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Xk(r){return JC?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function Jk(r){if(JC)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function Qk(r){if(JC){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function tT(r){return Br.join(r)}function QC(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function uh(r,e){let t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return r.signature!=null&&(t.signature=r.signature),r.userDefinedMetadata!=null&&(t.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(t.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(t.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(t.trainingConfig=r.trainingConfig),t}function tI(r,e,t){let n={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(n.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=e,n.weightData=t}return r.signature!=null&&(n.signature=r.signature),r.userDefinedMetadata!=null&&(n.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(n.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(n.initializerSignature=r.initializerSignature),n}async function Ip(r,e){let t,n;return r.weightsManifest!=null&&([t,n]=await e(r.weightsManifest)),tI(r,t,n)}function Hi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:Xk(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:Xk(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new Br(r.weightData).byteLength}}function df(r){let e=[];for(let t of r)e.push(...t.weights);return e}function FH(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function OH(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function PH(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function MH(){let r=FH(),e=OH(),t=PH();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],u=r[t[a>>10]+(a&1023)]+e[a>>10];s[i]=u}return new Float32Array(o)}}var wr=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(e,n);a!==null&&o.push(a)}),o}},eT=r=>wr.registerSaveRouter(r),rT=r=>wr.registerLoadRouter(r),nT=r=>wr.getSaveHandlers(r),oT=(r,e)=>wr.getLoadHandlers(r,e);var eI="tensorflowjs",rI=1,qu="models_store",Ql="model_info_store";function sT(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function nI(r){let e=r.result;e.createObjectStore(qu,{keyPath:"modelPath"}),e.createObjectStore(Ql,{keyPath:"modelPath"})}var Ku=(()=>{class r{constructor(t){if(this.indexedDB=sT(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((o,s)=>{let i=this.indexedDB.open(eI,rI);i.onupgradeneeded=()=>nI(i),i.onsuccess=()=>{let a=i.result;if(n==null){let u=a.transaction(qu,"readonly"),c=u.objectStore(qu).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(c.result.modelArtifacts)},c.onerror=p=>(a.close(),s(c.error)),u.oncomplete=()=>a.close()}else{n.weightData=Br.join(n.weightData);let u=Hi(n),l=a.transaction(Ql,"readwrite"),c=l.objectStore(Ql),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:u})}catch(f){return s(f)}let m;p.onsuccess=()=>{m=a.transaction(qu,"readwrite");let f=m.objectStore(qu),d;try{d=f.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:u})}catch(h){return s(h)}d.onsuccess=()=>o({modelArtifactsInfo:u}),d.onerror=h=>{c=l.objectStore(Ql);let g=c.delete(this.modelPath);g.onsuccess=()=>(a.close(),s(d.error)),g.onerror=x=>(a.close(),s(d.error))}},p.onerror=f=>(a.close(),s(p.error)),l.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}return r.URL_SCHEME="indexeddb://",r})();var iT=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ku.URL_SCHEME)?LH(r.slice(Ku.URL_SCHEME.length)):null;wr.registerSaveRouter(iT);wr.registerLoadRouter(iT);function LH(r){return new Ku(r)}function zH(r){return r.startsWith(Ku.URL_SCHEME)?r.slice(Ku.URL_SCHEME.length):r}var ch=class{constructor(){this.indexedDB=sT()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(eI,rI);n.onupgradeneeded=()=>nI(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Ql,"readonly"),a=s.objectStore(Ql).getAll();a.onsuccess=()=>{let u={};for(let l of a.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},a.onerror=u=>(o.close(),t(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=zH(e),new Promise((t,n)=>{let o=this.indexedDB.open(eI,rI);o.onupgradeneeded=()=>nI(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(Ql,"readwrite"),a=i.objectStore(Ql),u=a.get(e),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=a.delete(e),p=()=>{l=s.transaction(qu,"readwrite");let f=l.objectStore(qu).delete(e);f.onsuccess=()=>t(u.result.modelArtifactsInfo),f.onerror=d=>n(u.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(u.error))}},u.onerror=c=>(s.close(),n(u.error)),i.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var el="/",Sp="tensorflowjs_models",aT="info",BH="model_topology",VH="weight_specs",GH="weight_data",WH="model_metadata";function lT(r){return{info:[Sp,r,aT].join(el),topology:[Sp,r,BH].join(el),weightSpecs:[Sp,r,VH].join(el),weightData:[Sp,r,GH].join(el),modelMetadata:[Sp,r,WH].join(el)}}function uT(r){for(let e of Object.values(r))window.localStorage.removeItem(e)}function UH(r){let e=r.split(el);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(el)}function HH(r){return r.startsWith(ju.URL_SCHEME)?r.slice(ju.URL_SCHEME.length):r}var ju=(()=>{class r{constructor(t){if(!z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=lT(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(t.modelTopology),o=JSON.stringify(t.weightSpecs),s=Hi(t),i=Br.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,Jk(i));let a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw uT(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let n={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=o;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=s;let i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){let u=JSON.parse(i);n.format=u.format,n.generatedBy=u.generatedBy,n.convertedBy=u.convertedBy,u.signature!=null&&(n.signature=u.signature),u.userDefinedMetadata!=null&&(n.userDefinedMetadata=u.userDefinedMetadata),u.modelInitializer!=null&&(n.modelInitializer=u.modelInitializer),u.initializerSignature!=null&&(n.initializerSignature=u.initializerSignature),u.trainingConfig!=null&&(n.trainingConfig=u.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=Qk(a),n}}return r.URL_SCHEME="localstorage://",r})();var cT=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ju.URL_SCHEME)?qH(r.slice(ju.URL_SCHEME.length)):null;wr.registerSaveRouter(cT);wr.registerLoadRouter(cT);function qH(r){return new ju(r)}var ph=class{constructor(){E(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Sp+el,n=el+aT;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let i=UH(s);e[i]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=HH(e);let t=lT(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return uT(t),n}};var Np="://",ni=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(e,t){E(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Np)&&(e=e.slice(0,e.indexOf(Np))),E(e.length>0,()=>"scheme must not be an empty string.");let n=r.getInstance();E(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=r.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(r.getInstance().managers)}};function mh(r){if(r.indexOf(Np)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ni.getSchemes().join(",")}`);return{scheme:r.split(Np)[0],path:r.split(Np)[1]}}async function pT(r,e,t=!1){E(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=wr.getLoadHandlers(r);E(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),E(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=wr.getSaveHandlers(e);E(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),E(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let i=s[0],a=mh(r).scheme,u=mh(r).path,l=a===mh(r).scheme,c=await o.load();t&&l&&await ni.getManager(a).removeModel(u);let p=await i.save(c);return t&&!l&&await ni.getManager(a).removeModel(u),p.modelArtifactsInfo}async function mT(){let r=ni.getSchemes(),e={};for(let t of r){let n=await ni.getManager(t).listModels();for(let o in n){let s=t+Np+o;e[s]=n[o]}}return e}async function fT(r){let e=mh(r);return ni.getManager(e.scheme).removeModel(e.path)}async function dT(r,e){return pT(r,e,!1)}async function hT(r,e){return pT(r,e,!0)}var oI=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Zd(e)}};if(z().get("IS_BROWSER")){z().setPlatform("browser",new oI);try{ni.registerManager(ju.URL_SCHEME,new ph)}catch{}try{ni.registerManager(Ku.URL_SCHEME,new ch)}catch{}}var jH={importFetch:()=>xT()},sI;var iI=class{constructor(){this.util=yT(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return z().global.fetch!=null?z().global.fetch(e,t):(sI==null&&(sI=jH.importFetch()),sI(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new iI);function wt(r,e="float32",t){return e=e||"float32",Pe(r),new ae(r,e,t)}function XH(r,e){let t=S(r,"x","cast");if(!RC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return T.runKernel(po,n,o)}var Q=k({cast_:XH});function YH(r){let t={x:S(r,"x","clone","string_or_numeric")};return T.runKernel(fo,t)}var an=k({clone_:YH});function fh(r,e=!1){console.log(r.toString(e))}KC();var ZH={buffer:wt,cast:Q,clone:an,print:fh};Pk(ZH);function JH(r,e){let t=S(r,"a","add"),n=S(e,"b","add");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(eo,o)}var K=k({add_:JH});function QH(r,e){let t=S(r,"a","floorDiv"),n=S(e,"b","floorDiv");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(cs,o)}var Tp=k({floorDiv_:QH});function tq(r,e){let t=S(r,"a","div"),n=S(e,"b","div");if([t,n]=Yt(t,n),t.dtype==="int32"&&n.dtype==="int32")return Tp(t,n);let o={a:t,b:n},s={};return T.runKernel(os,o,s)}var at=k({div_:tq});function eq(r,e){let t=S(r,"a","mul"),n=S(e,"b","mul");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(_s,o)}var R=k({mul_:eq});function rq(r){let e=S(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return T.runKernel(Al,t)}else{let t={x:e};return T.runKernel(Ci,t)}}var Ee=k({abs_:rq});function nq(r){let t={x:S(r,"x","acos")};return T.runKernel(zo,t)}var dh=k({acos_:nq});function oq(r){let t={x:S(r,"x","acosh")};return T.runKernel(Bo,t)}var hh=k({acosh_:oq});function sq(r){E(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),E(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>S(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Fn(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return T.runKernel(Vo,n)}var bT=k({addN_:sq});function iq(r,e=null,t=!1){let o={x:S(r,"x","all","bool")},s={axis:e,keepDims:t};return T.runKernel(ga,o,s)}var _p=k({all_:iq});function aq(r,e=null,t=!1){let o={x:S(r,"x","any","bool")},s={axis:e,keepDims:t};return T.runKernel(xa,o,s)}var Yu=k({any_:aq});function lq(r,e=0){let n={x:S(r,"x","argMax")},o={axis:e};return T.runKernel(Ii,n,o)}var qi=k({argMax_:lq});function uq(r,e=0){let n={x:S(r,"x","argMin")},o={axis:e};return T.runKernel(Si,n,o)}var gh=k({argMin_:uq});function cq(r){let t={x:S(r,"x","asin")};return T.runKernel(Go,t)}var xh=k({asin_:cq});function pq(r){let t={x:S(r,"x","asinh")};return T.runKernel(Wo,t)}var yh=k({asinh_:pq});function mq(r){let t={x:S(r,"x","atan")};return T.runKernel(Uo,t)}var bh=k({atan_:mq});function fq(r,e){let t=S(r,"a","atan2"),n=S(e,"b","atan2");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(qo,o)}var wh=k({atan2_:fq});function dq(r){let t={x:S(r,"x","atanh")};return T.runKernel(Ho,t)}var vh=k({atanh_:dq});function hq(r,e,t,n,o="NHWC",s){let i=r[3],a=[...e,i],u=vT(o);return Zu(r,a,t,s,n,null,null,u)}function lI(r,e,t,n,o,s,i="channelsLast"){let[a,u]=hf(e),l;if(i==="channelsLast")l=[a,u,r[3],r[3]];else if(i==="channelsFirst")l=[a,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Zu(r,l,t,n,o,s,!1,i)}function gq(r,e,t,n,o,s,i="NDHWC"){let[a,u,l]=aI(e),c,p;if(i==="NDHWC")p="channelsLast",c=[a,u,l,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",c=[a,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return wT(r,c,t,n,o,!1,p,s)}function Zu(r,e,t,n,o,s,i=!1,a="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,p]=r;else if(a==="channelsFirst")[u,p,l,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,d]=e,[h,g]=hf(t),[x,y]=hf(n),w=Ep(m,x),v=Ep(f,y),{padInfo:N,outHeight:_,outWidth:A}=bq(o,l,c,h,g,w,v,s,a),D=i?d*p:d,F;return a==="channelsFirst"?F=[u,D,_,A]:a==="channelsLast"&&(F=[u,_,A,D]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:p,outHeight:_,outWidth:A,outChannels:D,padInfo:N,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:x,dilationWidth:y,inShape:r,outShape:F,filterShape:e}}function wT(r,e,t,n,o,s=!1,i="channelsLast",a){let[u,l,c,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,p,m]=r;else if(i==="channelsFirst")[u,m,l,c,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,d,h,,g]=e,[x,y,w]=aI(t),[v,N,_]=aI(n),A=Ep(f,v),D=Ep(d,N),F=Ep(h,_),{padInfo:O,outDepth:V,outHeight:G,outWidth:W}=wq(o,l,c,p,x,y,w,A,D,F,a),H=s?g*m:g,q;return i==="channelsFirst"?q=[u,H,V,G,W]:i==="channelsLast"&&(q=[u,V,G,W,H]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:m,outDepth:V,outHeight:G,outWidth:W,outChannels:H,padInfo:O,strideDepth:x,strideHeight:y,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:A,effectiveFilterHeight:D,effectiveFilterWidth:F,dilationDepth:v,dilationHeight:N,dilationWidth:_,inShape:r,outShape:q,filterShape:e}}function xq(r,e,t,n,o){n==null&&(n=uI(r,e,t));let s=r[0],i=r[1],a=gf((s-e+2*n)/t+1,o),u=gf((i-e+2*n)/t+1,o);return[a,u]}function yq(r,e,t,n,o,s){o==null&&(o=uI(r,e[0],n[0]));let i=[0,0,0,t];for(let a=0;a<3;a++)r[a]+2*o>=e[a]&&(i[a]=gf((r[a]-e[a]+2*o)/n[a]+1,s));return i}function uI(r,e,t,n=1){let o=Ep(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function hf(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function aI(r){return typeof r=="number"?[r,r,r]:r}function Ep(r,e){return e<=1?r:r+(r-1)*(e-1)}function bq(r,e,t,n,o,s,i,a,u){let l,c,p;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=xq([e,t],s,n,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/n),p=Math.ceil(t/o);let m=Math.max(0,(c-1)*n+s-e),f=Math.max(0,(p-1)*o+i-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),x=f-g;l={top:d,bottom:h,left:g,right:x,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/n),p=Math.ceil((t-i+1)/o);else if(typeof r=="object"){let m=u==="channelsLast"?r[1][0]:r[2][0],f=u==="channelsLast"?r[1][1]:r[2][1],d=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=gf((e-s+m+f)/n+1,a),p=gf((t-i+d+h)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:c,outWidth:p}}function wq(r,e,t,n,o,s,i,a,u,l,c){let p,m,f,d;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=yq([e,t,n,1],[a,u,l],1,[o,s,i],r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/i);let h=(m-1)*o+a-e,g=(f-1)*s+u-t,x=(d-1)*i+l-n,y=Math.floor(h/2),w=h-y,v=Math.floor(g/2),N=g-v,_=Math.floor(x/2),A=x-_;p={top:v,bottom:N,left:_,right:A,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function gf(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function oo(r){let[e,t,n]=hf(r);return e===1&&t===1&&n===1}function Ar(r,e){return oo(r)||oo(e)}function Ki(r){return hf(r).every(e=>e>0)}function vT(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Ie(r,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")E(ha(e),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{E(ha(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${e}`)}}function vq(r,e){let n={x:S(r,"x","reshape","string_or_numeric")},o={shape:e};return T.runKernel(Fi,n,o)}var $=k({reshape_:vq});function Cq(r,e,t,n,o){let s=S(r,"x","avgPool","float32"),i=1;E(Ar(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=s,u=!1;s.rank===3&&(u=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ie("avgPool",n,o);let l={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=T.runKernel(Ko,l,c);return p=Q(p,s.dtype),u?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var tu=k({avgPool_:Cq});function Iq(r,e,t,n,o,s="NDHWC"){let i=S(r,"x","avgPool3d","float32"),a=i,u=!1;i.rank===4&&(u=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),E(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Ie("avgPool3d",n,o);let l={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},p=T.runKernel(Ni,l,c);return p=Q(p,a.dtype),u?$(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Ch=k({avgPool3d_:Iq});function Sq(r,e=0){E(r.length>=1,()=>"Pass at least one tensor to concat");let t=Hu(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return an(t[0]);let n=t,o={axis:e};return T.runKernel(Ti,n,o)}var re=k({concat_:Sq});function Nq(r,e,t=!1,n=!1){let o=S(r,"a","matMul"),s=S(e,"b","matMul");[o,s]=Yt(o,s);let i={a:o,b:s},a={transposeA:t,transposeB:n};return T.runKernel(jo,i,a)}var Gt=k({matMul_:Nq});function kq(r){let t={x:S(r,"x","sigmoid","float32")};return T.runKernel(qs,t)}var Dr=k({sigmoid_:kq});function Tq(r,e,t){let n=S(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return T.runKernel(Pi,o,s)}var vt=k({slice_:Tq});function _q(r){let t={x:S(r,"x","tanh","float32")};return T.runKernel(ti,t)}var oi=k({tanh_:_q});function Eq(r,e,t,n,o,s){let i=S(r,"forgetBias","basicLSTMCell"),a=S(e,"lstmKernel","basicLSTMCell"),u=S(t,"lstmBias","basicLSTMCell"),l=S(n,"data","basicLSTMCell"),c=S(o,"c","basicLSTMCell"),p=S(s,"h","basicLSTMCell"),m=re([l,p],1),f=Gt(m,a),d=K(f,u),h=d.shape[0],g=d.shape[1]/4,x=[h,g],y=vt(d,[0,0],x),w=vt(d,[0,g],x),v=vt(d,[0,g*2],x),N=vt(d,[0,g*3],x),_=K(R(Dr(y),oi(w)),R(c,Dr(K(i,v)))),A=R(oi(_),Dr(N));return[_,A]}var CT=k({basicLSTMCell_:Eq});function Aq(r,e,t){let n=S(r,"x","batchToSpaceND"),o=e.reduce((a,u)=>a*u);E(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),E(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),E(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},i={blockShape:e,crops:t};return T.runKernel(ki,s,i)}var eu=k({batchToSpaceND_:Aq});function IT(r){let e;return r.rank===0||r.rank===1?e=$(r,[1,1,1,r.size]):r.rank===2?e=$(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Dq(r,e,t,n,o,s){s==null&&(s=.001);let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let c;n!=null&&(c=S(n,"offset","batchNorm")),E(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:IT(i),scale:l,offset:c,mean:a,variance:u},f={varianceEpsilon:s},d=T.runKernel(ps,m,f);return $(d,i.shape)}var ji=k({batchNorm_:Dq});function Rq(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let c;return n!=null&&(c=S(n,"offset","batchNorm")),E(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),E(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ji(i,a,u,c,l,s)}var Ih=k({batchNorm2d_:Rq});function $q(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let c;return n!=null&&(c=S(n,"offset","batchNorm")),E(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),E(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ji(i,a,u,c,l,s)}var Sh=k({batchNorm3d_:$q});function Fq(r,e,t,n,o,s){let i=S(r,"x","batchNorm"),a=S(e,"mean","batchNorm"),u=S(t,"variance","batchNorm"),l;o!=null&&(l=S(o,"scale","batchNorm"));let c;return n!=null&&(c=S(n,"offset","batchNorm")),E(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),E(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ji(i,a,u,c,l,s)}var Nh=k({batchNorm4d_:Fq});function Oq(r,e,t){let n=S(r,"x","bincount"),o=S(e,"weights","bincount");E(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:t};return T.runKernel(ya,s,i)}var kh=k({bincount_:Oq});function Pq(r,e){let t=S(r,"x","bitwiseAnd"),n=S(e,"y","bitwiseAnd");if(!Fn(t.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${n.shape}`);if(t.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${n.dtype}`);let o={a:t,b:n};return T.runKernel(ba,o)}var ST=k({bitwiseAnd_:Pq});function Mq(r,e){let t=S(r,"s0","broadcastArgs","int32"),n=S(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:t,s1:n};return T.runKernel(El,o)}var NT=k({broadcastArgs_:Mq});function Lq(r,e){let t=S(r,"broadcastTo","x"),n=t.shape;if(Pe(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=$(t,l)}let o=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return an(t);let a={x:t},u={reps:s};return T.runKernel(ro,a,u)}var Xi=k({broadcastTo_:Lq});function zq(r){let t={x:S(r,"x","ceil","float32")};return T.runKernel(Xo,t)}var Th=k({ceil_:zq});function bo(r,e,t){Pe(r),t=t||kl(e);let n={shape:r,value:e,dtype:t};return T.runKernel(Ol,{},n)}function Bq(r,e,t){let n=S(r,"x","clipByValue");if(E(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return bo(n.shape,e,n.dtype);let o={x:n},s={clipValueMin:e,clipValueMax:t};return T.runKernel(mo,o,s)}var vr=k({clipByValue_:Bq});function Vq(r){return re(r,0)}var _h=k({concat1d_:Vq});function Gq(r,e){return re(r,e)}var Ju=k({concat2d_:Gq});function Wq(r,e){return re(r,e)}var Eh=k({concat3d_:Wq});function Uq(r,e){return re(r,e)}var Ah=k({concat4d_:Uq});function Hq(r,e,t,n,o="NHWC",s=[1,1],i){let a=S(r,"x","conv2d","float32"),u=S(e,"filter","conv2d","float32"),l=a,c=!1;a.rank===3&&(c=!0,l=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Ie("conv2d",n,i);let p=o==="NHWC"?l.shape[3]:l.shape[1];E(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),E(Ar(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),E(Ki(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(Ki(t),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:l,filter:u},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=T.runKernel(Yo,m,f);return c?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var vn=k({conv2d_:Hq});function qq(r,e,t,n,o="NWC",s=1,i){let a=S(r,"x","conv1d"),u=S(e,"filter","conv1d"),l=a,c=!1;a.rank===2&&(c=!0,l=$(a,[1,a.shape[0],a.shape[1]])),E(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),E(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Ie("conv1d",n,i),E(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),E(Ar(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),E(Ki(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(Ki(t),()=>"Error in conv1D: Stride should be larger than 0."),E(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=$(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=$(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=vn(m,p,[1,t],n,"NHWC",[1,s],i);return c?$(g,[g.shape[2],g.shape[3]]):$(g,[g.shape[0],g.shape[2],g.shape[3]])}var Ap=k({conv1d_:qq});function Kq(r,e,t,n,o,s="NHWC",i){E(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let a=r,u=e,l=!1;e.rank===3&&(l=!0,u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,r[0],r[1],r[2]]),E(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),E(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),E(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?u.shape[3]:u.shape[1];E(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),E(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),Ie("conv2dDerInput",o,i);let m={dy:u,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},d=T.runKernel(Zo,m,f);return l?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Dp=k({conv2DBackpropInput_:Kq});function jq(r,e,t,n,o,s){let i=S(r,"x","conv2dTranspose"),a=S(e,"filter","conv2dTranspose");return Dp(t,i,a,n,o,"NHWC",s)}var Rp=k({conv2dTranspose_:jq});function Xq(r,e,t,n,o="NDHWC",s=[1,1,1]){let i=S(r,"x","conv3d"),a=S(e,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),E(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),E(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),E(Ar(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),E(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),E(Ki(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(Ki(t),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:u,filter:a},p={strides:t,pad:n,dataFormat:o,dilations:s},m=T.runKernel(Jo,c,p);return l?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Dh=k({conv3d_:Xq});function Yq(r,e,t,n,o){E(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,i=e,a=!1;e.rank===4&&(a=!0,i=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=i.shape[4];E(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),E(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),E(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),E(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),E(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);let c={dy:i,filter:t},p={pad:o,strides:n,inputShape:s},m=T.runKernel(va,c,p);return a?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Rh=k({conv3DBackpropInput_:Yq});function Zq(r,e,t,n,o){let s=S(r,"x","conv3dTranspose"),i=S(e,"filter","conv3dTranspose");return Rh(t,s,i,n,o)}var $h=k({conv3dTranspose_:Zq});function Jq(r){let t={x:S(r,"x","cos","float32")};return T.runKernel(Qo,t)}var ru=k({cos_:Jq});function Qq(r){let t={x:S(r,"x","cosh","float32")};return T.runKernel(ts,t)}var $p=k({cosh_:Qq});function tK(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumprod")},i={axis:e,exclusive:t,reverse:n};return T.runKernel(Ca,s,i)}var Qu=k({cumprod_:tK});function eK(r,e=0,t=!1,n=!1){let s={x:S(r,"x","cumsum")},i={axis:e,exclusive:t,reverse:n};return T.runKernel(es,s,i)}var Fp=k({cumsum_:eK});function rK(r,e,t,n=!1){let o=S(r,"x","denseBincount"),s=S(e,"weights","denseBincount");E(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),E(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),E(t>=0,()=>`size must be non-negative, but got ${t}.`),E(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:t,binaryOutput:n};return T.runKernel(Dl,i,a)}var xf=k({denseBincount_:rK});function nK(r,e,t="NHWC"){let n=S(r,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],i=t==="NHWC"?n.shape[3]:n.shape[1];E(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),E(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),E(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),E(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},u={blockSize:e,dataFormat:t};return T.runKernel(Sa,a,u)}var Fh=k({depthToSpace_:nK});function oK(r,e,t,n,o="NHWC",s=[1,1],i){let a=S(r,"x","depthwiseConv2d","float32"),u=S(e,"filter","depthwiseConv2d","float32"),l=a,c=!1;a.rank===3&&(c=!0,l=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let p=o==="NHWC"?l.shape[3]:l.shape[1];E(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),Ie("depthwiseConv2d",n,i);let m={x:l,filter:u},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=T.runKernel(rs,m,f);return c?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Yi=k({depthwiseConv2d_:oK});function sK(r){let t={x:S(r,"x","diag")};return T.runKernel(Rl,t)}var kT=k({diag_:sK});function iK(r,e,t,n,o=[1,1],s="NHWC"){let i=S(r,"x","dilation2d"),a=S(e,"filter","dilation2d");E(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),E(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),E(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,l=!1;i.rank===3&&(u=$(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),E(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);let c={x:u,filter:a},p={strides:t,pad:n,dilations:o},m=T.runKernel(ns,c,p);return l?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Oh=k({dilation2d_:iK});var Vr={};de(Vr,{assertAndGetBroadcastShape:()=>Pt,getBroadcastDims:()=>TT,getReductionAxes:()=>we});function TT(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,i=r[s]||1;(e[e.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function we(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,i=e[s];(o==null||o===1&&i>1)&&t.unshift(s)}return t}function Pt(r,e){let t=Math.max(r.length,e.length),n=new Array(t);for(let o=0;o<t;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=e[e.length-o-1];if(i==null&&(i=1),s===1)n[t-o-1]=i;else if(i===1)n[t-o-1]=s;else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(a)}else n[t-o-1]=s}return n}function aK(r,e){let t=S(r,"a","equal","string_or_numeric"),n=S(e,"b","equal","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(ka,o)}var Qr=k({equal_:aK});function lK(r,e,t){let n=S(e,"a","where"),o=S(t,"b","where"),s=S(r,"condition","where","bool"),i=Pt(Pt(s.shape,n.shape),o.shape),a=Xi(s,i),u=Xi(n,i),l=Xi(o,i),c={condition:a,t:u,e:l};return T.runKernel(Oi,c)}var Se=k({where_:lK});function uK(r){let t={x:S(r,"x","zerosLike")};return T.runKernel(Bi,t)}var St=k({zerosLike_:uK});function cK(r,e){let t=S(r,"a","div"),n=S(e,"b","div");[t,n]=Yt(t,n);let o=at(t,n),s=St(o),i=Qr(n,s);return Se(i,s,o)}var Ph=k({divNoNan_:cK});function pK(r,e){let t=S(r,"t1","dot"),n=S(e,"t2","dot");E((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(E(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let i=$(t,[1,-1]),a=$(n,[-1,1]),u=Gt(i,a);return $(u,[])}else if(t.rank===1&&n.rank===2){let i=$(t,[1,-1]),a=$(n,[n.shape[0],n.shape[1]]),u=Gt(i,a);return $(u,[u.size])}else if(t.rank===2&&n.rank===1){let i=$(n,[-1,1]),a=Gt(t,i);return $(a,[a.size])}else{let i=$(n,[n.shape[0],n.shape[1]]);return Gt(t,i)}}var Mh=k({dot_:pK});function mK(r,...e){let t=e.map((o,s)=>S(o,`tensors${s}`,"einsum")),n={equation:r};return T.runKernel(ip,t,n)}var nu=k({einsum_:mK});function fK(r){let t={x:S(r,"x","elu","float32")};return T.runKernel(ss,t)}var Zi=k({elu_:fK});function dK(r,e){let t=S(r,"x","ensureShape","string_or_numeric");if(!_C(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return r}var _T=k({ensureShape_:dK});function hK(r){let e=S(r,"x","erf");E(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Q(e,"float32"));let t={x:e};return T.runKernel(is,t)}var Op=k({erf_:hK});function cI(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function ET(r,e,t){let n=r.length+e.length,o=[],s=0,i=0;for(let a=0;a<n;a++)t.indexOf(a)===-1?o.push(r[s++]):o.push(e[i++]);return o}function pI(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function wo(r,e){let t=e.map(n=>1);return ET(r,t,e)}function gK(r,e,t){E(cI(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function mI(r,e){if(cI(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function yf(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function xK(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function yK(r,e=null,t=!1){let o={x:S(r,"x","max")},s={reductionIndices:e,keepDims:t};return T.runKernel(ws,o,s)}var Cr=k({max_:yK});function bK(r,e=null,t=!1){let o={x:S(r,"x","min")},s={axis:e,keepDims:t};return T.runKernel(Ss,o,s)}var rl=k({min_:bK});function wK(r,e){let t=S(r,"base","pow"),n=S(e,"exp","pow");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(Ds,o)}var Gr=k({pow_:wK});function pt(r,e){if((Jr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Jr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sn(r,[],[],e)}function vK(r){let t={x:S(r,"x","sqrt","float32")};return T.runKernel(js,t)}var ge=k({sqrt_:vK});function CK(r){let e=S(r,"x","square"),t={};return T.runKernel("Square",{x:e},t)}var Vt=k({square_:CK});function IK(r,e=null,t=!1){let n=S(r,"x","sum");n.dtype==="bool"&&(n=Q(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return T.runKernel(Xs,o,s)}var mt=k({sum_:IK});function SK(r,e="euclidean",t=null,n=!1){r=S(r,"x","norm");let o=AT(r,e,t),s=o.shape;if(n){let i=pr(t,r.shape);s=wo(o.shape,i)}return $(o,s)}function AT(r,e,t=null){if(r.rank===0)return Ee(r);if(r.rank!==1&&t===null)return AT($(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return mt(Ee(r),t);if(e===1/0)return Cr(Ee(r),t);if(e===-1/0)return rl(Ee(r),t);if(e==="euclidean"||e===2)return ge(mt(Gr(Ee(r),pt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Cr(mt(Ee(r),t[0]),t[1]-1);if(e===1/0)return Cr(mt(Ee(r),t[1]),t[0]);if(e===-1/0)return rl(mt(Ee(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return ge(mt(Vt(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var nl=k({norm_:SK});function NK(r,e=null,t=!1){return nl(r,"euclidean",e,t)}var Lh=k({euclideanNorm_:NK});function kK(r){let t={x:S(r,"x","exp")};return T.runKernel(as,t)}var je=k({exp_:kK});function TK(r,e=0){let t=S(r,"x","expandDims","string_or_numeric");E(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return T.runKernel(_i,n,o)}var Le=k({expandDims_:TK});function _K(r){let t={x:S(r,"x","expm1")};return T.runKernel(ls,t)}var zh=k({expm1_:_K});function EK(r,e){let t=S(r,"x","tile","string_or_numeric");E(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return T.runKernel(ro,n,o)}var Rr=k({tile_:EK});function AK(r,e,t,n="float32"){e==null&&(e=r);let o=wt([r,e],n),s=r<=e?r:e;for(let a=0;a<s;++a)o.set(1,a,a);let i=$(o.toTensor(),[r,e]);if(t==null)return i;if(t.length===1)return Rr(Le(i,0),[t[0],1,1]);if(t.length===2)return Rr(Le(Le(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Rr(Le(Le(Le(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var tc=k({eye_:AK});function DK(r){let t={x:S(r,"x","floor","float32")};return T.runKernel(us,t)}var Ji=k({floor_:DK});function RK(r,e,t=0,n=0){let o=S(r,"x","gather"),s=S(e,"indices","gather","int32"),i={x:o,indices:s},a={axis:t,batchDims:n};return T.runKernel(Ei,i,a)}var Qi=k({gather_:RK});function $K(r,e){let t=S(r,"a","greater","string_or_numeric"),n=S(e,"b","greater","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(Ea,o)}var ze=k({greater_:$K});function FK(r,e){let t=S(r,"a","greaterEqual","string_or_numeric"),n=S(e,"b","greaterEqual","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(ms,o)}var ln=k({greaterEqual_:FK});function OK(r){let t={input:S(r,"input","imag")};return T.runKernel(up,t)}var ou=k({imag_:OK});function PK(r){let t={x:S(r,"x","isFinite")};return T.runKernel(fs,t)}var Bh=k({isFinite_:PK});function MK(r){let t={x:S(r,"x","isInf")};return T.runKernel(ds,t)}var Vh=k({isInf_:MK});function LK(r){let t={x:S(r,"x","isNaN")};return T.runKernel(hs,t)}var Gh=k({isNaN_:LK});function zK(r,e=.2){let n={x:S(r,"x","leakyRelu")},o={alpha:e};return T.runKernel(gs,n,o)}var su=k({leakyRelu_:zK});function BK(r,e){let t=S(r,"a","less","string_or_numeric"),n=S(e,"b","less","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(Aa,o)}var ol=k({less_:BK});function VK(r,e){let t=S(r,"a","lessEqual","string_or_numeric"),n=S(e,"b","lessEqual","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(Da,o)}var Ln=k({lessEqual_:VK});function DT(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return T.runKernel(Ra,{},n)}function GK(r,e=5,t=1,n=1,o=.5){let s=S(r,"x","localResponseNormalization");E(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),E(ha(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},l={depthRadius:e,bias:t,alpha:n,beta:o},c=T.runKernel(bs,u,l);return a?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Wh=k({localResponseNormalization_:GK});function WK(r){let t={x:S(r,"x","log","float32")};return T.runKernel(xs,t)}var Ir=k({log_:WK});function UK(r){let t={x:S(r,"x","log1p")};return T.runKernel(ys,t)}var iu=k({log1p_:UK});function dI(r,e){E(Qc(r),()=>"The f passed in variableGrads(f) must be a function"),E(e==null||Array.isArray(e)&&e.every(l=>l instanceof Qa),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let l in T.registeredVariables)e.push(T.registeredVariables[l])}let n=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),E(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=T.gradients(r,e,null,s);E(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return e.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),n?.forEach(l=>u[l.name]=null),{value:i,grads:u}}function Cn(r){return T.customGrad(r)}function HK(r){let t={x:S(r,"x","neg")};return T.runKernel(Di,t)}var Ut=k({neg_:HK});function qK(r){let t={x:S(r,"x","softplus")};return T.runKernel(Ks,t)}var si=k({softplus_:qK});function KK(r){let e=S(r,"x","logSigmoid");return Cn(n=>({value:Ut(si(Ut(n))),gradFunc:i=>R(i,Dr(Ut(n)))}))(e)}var Uh=k({logSigmoid_:KK});function jK(r,e){let t=S(r,"a","sub"),n=S(e,"b","sub");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(Js,o)}var nt=k({sub_:jK});function XK(r,e=-1){let t=S(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Cn((o,s)=>{let a=Cr(o,e,!0),u=nt(o,a),l=nt(Q(u,"float32"),Ir(mt(je(u),e,!0)));return s([l]),{value:l,gradFunc:(p,m)=>{let[f]=m,d=!0,h=je(f);return nt(p,R(mt(p,e,d),h))}}})(t)}var Pp=k({logSoftmax_:XK});function YK(r,e=null,t=!1){let n=S(r,"x","logSumExp"),o=pr(e,n.shape),s=Cr(n,o,!0),i=nt(n,s),a=je(i),u=mt(a,o),l=Ir(u),c=K($(s,l.shape),l);if(t){let p=wo(c.shape,o);return $(c,p)}return c}var au=k({logSumExp_:YK});function ZK(r,e){let t=S(r,"a","logicalAnd","bool"),n=S(e,"b","logicalAnd","bool");Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel($a,o)}var Wr=k({logicalAnd_:ZK});function JK(r){let t={x:S(r,"x","logicalNot","bool")};return T.runKernel(Fa,t)}var lu=k({logicalNot_:JK});function QK(r,e){let t=S(r,"a","logicalOr","bool"),n=S(e,"b","logicalOr","bool");Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(Oa,o)}var Mp=k({logicalOr_:QK});function tj(r,e){let t=S(r,"a","logicalXor","bool"),n=S(e,"b","logicalXor","bool");return Pt(t.shape,n.shape),Wr(Mp(r,e),lu(Wr(r,e)))}var Hh=k({logicalXor_:tj});var qh=2147483648;function ej(r,e,t="left"){let n=S(r,"sortedSequence","searchSorted"),o=S(e,"values","searchSorted"),s=n.shape[n.shape.length-1],i=o.shape[o.shape.length-1],a=$(n,[-1,s]),u=$(o,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Kt(u.shape)>=qh)throw new Error(`values tensor size must less than ${qh}`);if(a.shape[1]>=qh)throw new Error(`trailing dim_size must less than ${qh} for int32 output type, was ${a.shape[1]}`);let l={sortedSequence:a,values:u},c={side:t};return T.runKernel(qa,l,c)}var bf=k({searchSorted_:ej});function RT(r,e){return bf(r,e,"left")}function rj(r,e,t,n,o){let s=S(r,"x","maxPool"),i=1,a=s,u=!1;s.rank===3&&(u=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),E(Ar(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Ie("maxPool",n,o);let l={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=T.runKernel(Cs,l,c);return u?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var uu=k({maxPool_:rj});function nj(r,e=[1,1,1],t,n,o,s="NDHWC"){let i=S(r,"x","maxPool3d"),a=i,u=!1;i.rank===4&&(u=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Ie("maxPool3d",n,o);let l={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s},p=T.runKernel(Ai,l,c);return u?$(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Kh=k({maxPool3d_:nj});function oj(r,e,t,n,o=!1){let i={x:S(r,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},u=T.runKernel(Ll,i,a);return{result:u[0],indexes:u[1]}}var $T=k({maxPoolWithArgmax_:oj});function sj(r,e){let t=S(r,"a","maximum"),n=S(e,"b","maximum");[t,n]=Yt(t,n),t.dtype==="bool"&&(t=Q(t,"int32"),n=Q(n,"int32")),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(vs,o)}var In=k({maximum_:sj});function ij(r,e=null,t=!1){let o={x:S(r,"x","mean")},s={axis:e,keepDims:t};return T.runKernel(Is,o,s)}var Ne=k({mean_:ij});function ke(r,e="float32"){if(Pe(r),e==="complex64"){let n=ke(r,"float32"),o=ke(r,"float32");return wn(n,o)}let t=ep(Kt(r),e);return T.makeTensor(t,r,e)}function or(r,e="float32"){if(Pe(r),e==="complex64"){let n=or(r,"float32"),o=ke(r,"float32");return wn(n,o)}let t=nf(Kt(r),e);return T.makeTensor(t,r,e)}function FT(r,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=S(r,"x","meshgrid",r instanceof zt?r.dtype:"float32");if(e===void 0)return[n];let o=S(e,"y","meshgrid",e instanceof zt?e.dtype:"float32"),s=Kt(n.shape),i=Kt(o.shape);return t==="xy"?(n=$(n,[1,-1]),o=$(o,[-1,1]),[Gt(or([i,1],n.dtype),n),Gt(o,or([1,s],o.dtype))]):(n=$(n,[-1,1]),o=$(o,[1,-1]),[Gt(n,or([1,i],n.dtype)),Gt(or([s,1],o.dtype),o)])}function aj(r,e){let t=S(r,"a","minimum"),n=S(e,"b","minimum");[t,n]=Yt(t,n),t.dtype==="bool"&&(t=Q(t,"int32"),n=Q(n,"int32")),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(Ns,o)}var io=k({minimum_:aj});function lj(r,e,t){E(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=S(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let a=0;a<n.rank;a++)E(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(e[a][0]>=0&&e[a][0]<=n.shape[a]-o&&e[a][1]>=0&&e[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},i={x:n};return T.runKernel(ks,i,s)}var jh=k({mirrorPad_:lj});function uj(r,e){let t=S(r,"a","mod"),n=S(e,"b","mod");[t,n]=Yt(t,n);let o={a:t,b:n};return T.runKernel(Ts,o)}var Xh=k({mod_:uj});function cj(r,e=null,t=!1){r=S(r,"x","moments");let n=pr(e,r.shape),o=Ne(r,n,t),s=o.shape;t||(s=wo(o.shape,n));let i=Vt(nt(Q(r,"float32"),$(o,s))),a=Ne(i,n,t);return{mean:o,variance:a}}var ec=k({moments_:cj});function pj(r,e,t,n){let o=S(e,"data","multiRNNCell"),s=Hu(t,"c","multiRNNCell"),i=Hu(n,"h","multiRNNCell"),a=o,u=[];for(let p=0;p<r.length;p++){let m=r[p](a,s[p],i[p]);u.push(m[0]),u.push(m[1]),a=m[1]}let l=[],c=[];for(let p=0;p<u.length;p+=2)l.push(u[p]),c.push(u[p+1]);return[l,c]}var OT=k({multiRNNCell_:pj});function mj(r,e,t,n=!1){let o=S(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();let u={logits:i===1?$(o,[1,-1]):o},l={numSamples:e,seed:t,normalized:n},c=T.runKernel(Ma,u,l);return i===1?$(c,[c.size]):c}var PT=k({multinomial_:mj});function fj(r,e){let t=S(r,"a","notEqual","string_or_numeric"),n=S(e,"b","notEqual","string_or_numeric");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n};return T.runKernel(La,o)}var ii=k({notEqual_:fj});function dj(r,e,t=1,n=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let i={indices:S(r,"indices","oneHot","int32")},a={dtype:o,depth:e,onValue:t,offValue:n};return T.runKernel(Es,i,a)}var rc=k({oneHot_:dj});function hj(r){let t={x:S(r,"x","onesLike")};return T.runKernel(Ri,t)}var yr=k({onesLike_:hj});function gj(r,e){let t=S(r,"v1","outerProduct"),n=S(e,"v2","outerProduct");E(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=$(t,[-1,1]),s=$(n,[1,-1]);return Gt(o,s)}var MT=k({outerProduct_:gj});function xj(r,e,t=0){let n=S(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return T.runKernel(As,s,o)}var un=k({pad_:xj});function yj(r,e,t=0){return E(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),un(r,[e],t)}var LT=k({pad1d_:yj});function bj(r,e,t=0){return E(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),un(r,e,t)}var zT=k({pad2d_:bj});function wj(r,e,t=0){return E(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),un(r,e,t)}var BT=k({pad3d_:wj});function vj(r,e,t=0){return E(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),un(r,e,t)}var VT=k({pad4d_:vj});function Cj(r,e,t){let n=S(r,"x","spaceToBatchND");E(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),E(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),E(n.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+t[u-1][0]+t[u-1][1])%e[u-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return T.runKernel(Mi,o,s)}var cu=k({spaceToBatchND_:Cj});function Ij(r,e,t,n,o,s,i){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=S(r,"x","maxPool"),u=a,l=!1;a.rank===3&&(l=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(Ar(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let c=lI(u.shape,e,s,o,n),p=[c.dilationHeight,c.dilationWidth],m;n==="same"?m=Nj([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[d,h]=Sj([c.inHeight,c.inWidth],p,m),g=f?n:"valid",x=f?u:cu(u,p,d),w=(t==="avg"?()=>tu(x,e,s,g,i):()=>uu(x,e,s,g,i))(),v=f?w:eu(w,p,h);return l?$(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function Sj(r,e,t){let n=t.map(c=>c[0]),o=t.map(c=>c[1]),s=r.concat(n,o),i=e.map((c,p)=>(c-s[p]%c)%c),a=o.map((c,p)=>c+i[p]),u=e.map((c,p)=>[n[p],a[p]]),l=e.map((c,p)=>[0,i[p]]);return[u,l]}function Nj(r,e){let n=r.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var Yh=k({pool_:Ij});function kj(r,e){let t=S(r,"x","prelu"),n=S(e,"alpha","prelu"),o={x:t,alpha:n};return T.runKernel(Rs,o)}var pu=k({prelu_:kj});function Tj(r,e=null,t=!1){let n=S(r,"x","prod");n.dtype==="bool"&&(n=Q(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return T.runKernel($s,o,s)}var Zh=k({prod_:Tj});function _j(r,e,t,n){let o=r.map((c,p)=>S(c,`tensors${p}`,"raggedGather","int32")),s=S(e,"paramsDenseValues","raggedGather"),i=S(t,"indices","raggedGather","int32"),a={paramsNestedSplits:o,paramsDenseValues:s,indices:i},u={outputRaggedRank:n},l=T.runKernel(cp,a,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}var GT=k({raggedGather_:_j});function Ej(r,e,t){let n=S(r,"starts","raggedRange"),o=S(e,"limits","raggedRange",n.dtype),s=S(t,"deltas","raggedRange",n.dtype),i={starts:n,limits:o,deltas:s},a=T.runKernel(pp,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var WT=k({raggedRange_:Ej});function Aj(r,e,t,n,o){let s=S(r,"shape","raggedTensorToTensor","int32"),i=S(e,"values","raggedTensorToTensor"),a=S(t,"defaultValue","raggedTensorToTensor",i.dtype),u=n.map((p,m)=>S(p,`tensors${m}`,"raggedTensorToTensor","int32")),l={shape:s,values:i,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:o};return T.runKernel(mp,l,c)}var UT=k({raggedTensorToTensor_:Aj});function Dj(r,e,t){Pe(r);let n=Kt(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return T.makeTensor(o,r,t)}var HT=k({rand_:Dj});var eg=Sl(wf());var oc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=eg.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Qh=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=eg.alea(s.toString()),this.randn=new oc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),s=this.randu(),s<t||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},tg=class{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=eg.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function Lj(r,e,t=1,n="float32",o){if(Pe(r),t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Qh(e,t,n,o),i=wt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var a1=k({randomGamma_:Lj});function zj(r,e=0,t=1,n,o){if(Pe(r),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new oc(e,t,n,!1,o),i=wt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var sc=k({randomNormal_:zj});function Bj(r,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return sc(r,0,1,e,t)}var l1=k({randomStandardNormal_:Bj});function Vj(r,e=0,t=1,n="float32",o){Pe(r);let s=wt(r,n),i=new tg(e,t,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var zn=k({randomUniform_:Vj});function Gj(r,e,t,n){return zn(r,e,t,"int32",n)}var u1=k({randomUniformInt_:Gj});function ta(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return T.runKernel(zl,{},o)}function Wj(r){let t={input:S(r,"input","real")};return T.runKernel(fp,t)}var sl=k({real_:Wj});function Uj(r){let t={x:S(r,"x","reciprocal")};return T.runKernel(Fs,t)}var rg=k({reciprocal_:Uj});function Hj(r){let t={x:S(r,"x","relu")};return T.runKernel(Os,t)}var $r=k({relu_:Hj});function qj(r){let t={x:S(r,"x","relu6")};return T.runKernel(Ls,t)}var Lp=k({relu6_:qj});function Kj(r,e){let n={x:S(r,"x","reverse")},o={dims:e};return T.runKernel(zs,n,o)}var fr=k({reverse_:Kj});function jj(r){let e=S(r,"x","reverse");return E(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),fr(e,0)}var c1=k({reverse1d_:jj});function Xj(r,e){let t=S(r,"x","reverse");return E(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),fr(t,e)}var p1=k({reverse2d_:Xj});function Yj(r,e){let t=S(r,"x","reverse");return E(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),fr(t,e)}var m1=k({reverse3d_:Yj});function Zj(r,e){let t=S(r,"x","reverse");return E(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),fr(t,e)}var f1=k({reverse4d_:Zj});function Jj(r){let t={x:S(r,"x","round")};return T.runKernel(Bs,t)}var zp=k({round_:Jj});function Qj(r){let t={x:S(r,"x","rsqrt","float32")};return T.runKernel(Vs,t)}var Bp=k({rsqrt_:Qj});function t6(r){let t={x:S(r,"x","selu")};return T.runKernel(Gs,t)}var Vp=k({selu_:t6});function e6(r,e,t,n,o,s=[1,1],i="NHWC"){let a=S(r,"x","separableConv2d"),u=S(e,"depthwiseFilter","separableConv2d"),l=S(t,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),E(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),E(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let m=u.shape[2],f=u.shape[3];E(l.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${l.shape[2]}.`);let d=Yi(c,u,n,o,i,s),g=vn(d,l,1,"valid",i);return p?$(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Gp=k({separableConv2d_:e6});async function r6(r,e){let t=S(r,"x","setdiff1d"),n=S(e,"y","setdiff1d");E(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),E(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),E(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),i=new Set(s),a=0;for(let c=0;c<o.length;c++)i.has(o[c])||a++;let u=new ae([a],t.dtype),l=new ae([a],"int32");for(let c=0,p=0;c<o.length;c++)i.has(o[c])||(u.values[p]=o[c],l.values[p]=c,p++);return[u.toTensor(),l.toTensor()]}var d1=r6;function n6(r){let t={x:S(r,"x","sign")};return T.runKernel(Hs,t)}var ng=k({sign_:n6});function o6(r){let t={x:S(r,"x","sin","float32")};return T.runKernel(Ws,t)}var Wp=k({sin_:o6});function s6(r){let t={x:S(r,"x","sinh")};return T.runKernel(Us,t)}var Up=k({sinh_:s6});function i6(r,e,t){let n=S(r,"x","slice1d");return E(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),vt(n,[e],[t])}var Hp=k({slice1d_:i6});function a6(r,e,t){let n=S(r,"x","slice2d");return E(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),vt(n,e,t)}var vf=k({slice2d_:a6});function l6(r,e,t){let n=S(r,"x","slice3d");return E(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),vt(n,e,t)}var qp=k({slice3d_:l6});function u6(r,e,t){let n=S(r,"x","slice4d");return E(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),vt(n,e,t)}var ic=k({slice4d_:u6});function c6(r,e=-1){let t=S(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return T.runKernel(Ys,n,o)}var mu=k({softmax_:c6});function p6(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return T.runKernel(ap,e)}var fu=k({fft_:p6});function m6(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return T.runKernel(lp,e)}var il=k({ifft_:m6});function f6(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=$(r,[t,e]);n=il(o)}else{let o=[t,2*(e-1)],s=$(sl(r),[t,e]),i=$(ou(r),[t,e]),a=fr(vt(s,[0,1],[t,e-2]),1),u=R(fr(vt(i,[0,1],[t,e-2]),1),pt(-1)),l=re([s,a],1),c=re([i,u],1),p=$(wn(l,c),[o[0],o[1]]);n=il(p)}if(n=sl(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=$(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Kp=k({irfft_:f6});function d6(r,e,t=0){let o={x:S(r,"x","split")},s={numOrSizeSplits:e,axis:t};return T.runKernel(Li,o,s)}var dr=k({split_:d6});function h6(r,e){E(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=vt(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=re([r,ke(d)],r.shape.length-1),t=e}else o=r;let s=St(o),i=$(wn(o,s),[n,t]),a=fu(i),u=Math.floor(t/2)+1,l=sl(a),c=ou(a),p=dr(l,[u,t-u],l.shape.length-1),m=dr(c,[u,t-u],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,$(wn(p[0],m[0]),f)}var du=k({rfft_:h6});function g6(r,e){let t=S(r,"a","squaredDifference"),n=S(e,"b","squaredDifference");[t,n]=Yt(t,n),Pt(t.shape,n.shape);let o={a:t,b:n},s={};return T.runKernel(Zs,o,s)}var jp=k({squaredDifference_:g6});function x6(r,e){let t=S(r,"x","squeeze","string_or_numeric");return $(t,EC(t.shape,e).newShape)}var Fr=k({squeeze_:x6});function y6(r,e=0){let t=Hu(r,"tensors","stack","string_or_numeric");E(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&E(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return T.runKernel($i,n,o)}var Be=k({stack_:y6});function b6(r,e=0){let n={x:S(r,"x","step")},o={alpha:e};return T.runKernel(ho,n,o)}var vo=k({step_:b6});function w6(r,e,t,n,o=0,s=0,i=0,a=0,u=0){let c={x:S(r,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return T.runKernel(Xa,c,p)}var og=k({stridedSlice_:w6});function v6(r){let t={x:S(r,"x","tan","float32")};return T.runKernel(Qs,t)}var sg=k({tan_:v6});function Te(r,e){to(r);let t=bn(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sn(r,null,t,e)}function Co(r,e,t){if(to(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=bn(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sn(r,e,n,t)}function ig(r,e,t){if(to(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=bn(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function h1(r,e,t){if(to(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=bn(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function g1(r,e,t){if(to(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=bn(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sn(r,e,n,t)}function x1(r,e,t){if(to(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=bn(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,sn(r,e,n,t)}var hu={};de(hu,{calculateShapes:()=>y1,validateInput:()=>Xp,validateUpdateShape:()=>vI});function vI(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function Xp(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}vI(t,e,r)}function y1(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,i=1;for(let p=o;p<s;++p)i*=t[p];let a=o<1?1:o,u=Kt(e.shape)/a,l=[...vi(t.slice(0,o)),1],c=Kt(t);return{sliceRank:o,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}function C6(r,e,t){let n=S(r,"tensor","tensorScatterupdate"),o=S(e,"indices","tensorScatterupdate","int32"),s=S(t,"updates","tensorScatterupdate");if(Xp(s,o,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let i={tensor:n,indices:o,updates:s},a={};return T.runKernel(Ha,i,a)}var b1=k({tensorScatterUpdate_:C6});function I6(r,e=1,t=!0){let n=S(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},i={k:e,sorted:t},[a,u]=T.runKernel(Ya,s,i);return{values:a,indices:u}}var ag=k({topk_:I6});function S6(r,e=0,t=1,n,o){if(Pe(r),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new oc(e,t,n,!0,o),i=wt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Yp=k({truncatedNormal_:S6});function N6(r,e=0){let t=S(r,"x","unique","string_or_numeric");E(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,i]=T.runKernel(Kl,n,o);return{values:s,indices:i}}var lg=k({unique_:N6});function k6(r,e,t){let n=S(r,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");E(ha(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:t};return T.runKernel(jl,s,i)}var Zp=k({unsortedSegmentSum_:k6});function T6(r,e=0){let t=S(r,"x","unstack","string_or_numeric");E(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return T.runKernel(zi,n,o)}var hr=k({unstack_:T6});function w1(r,e){return bf(r,e,"right")}function ug(r,e=!0,t,n){return T.makeVariable(r,e,t,n)}function cg(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=wt(r,"int32"),o=wt([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let i=n.indexToLoc(t[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}async function _6(r){let e=S(r,"condition","whereAsync","bool"),t=await e.data(),n=cg(e.shape,t);return r!==e&&e.dispose(),n}var pg=_6;async function E6(r,e,t){let n=S(r,"tensor","boolMask"),o=S(e,"mask","boolMask","bool"),s=t??0,i=o.rank,a=n.shape;E(i>0,()=>"mask cannot be scalar"),Qe(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+i;h++)u*=a[h];let l=a.slice(0,s).concat([u],a.slice(s+i)),c=$(n,l),p=$(o,[-1]),m=await pg(p),f=Fr(m,[1]),d=Qi(c,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var A6=E6;function D6(r,e,t){let n=S(r,"x","transpose");if(e==null&&(e=n.shape.map((i,a)=>a).reverse()),E(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(i=>{E(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:e};return n.dtype==="complex64"?B(()=>{let i=sl(n),a=ou(n);return i=T.runKernel(no,{x:i},s),a=T.runKernel(no,{x:a},s),t&&(a=Ut(a)),wn(i,a)}):T.runKernel(no,o,s)}var Wt=k({transpose_:D6});function R6(r,e,t,n,o=!0){let s=S(r,"v","movingAverage"),i=S(e,"x","movingAverage"),a=S(t,"decay","movingAverage");Gk(s,i),E(Fn(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=pt(1),l=nt(u,a),c=R(nt(i,s),l);if(o){E(n!=null,()=>"When using zeroDebias: true, step is required.");let p=S(n,"step","movingAverage");c=at(c,nt(u,Gr(a,p)))}return K(s,c)}var $6=k({movingAverage_:R6});function F6(r,e,t){Pe(t);let n=S(r,"indices","scatterND","int32"),o=S(e,"updates","scatterND");Xp(o,n,t);let s={indices:n,updates:o},i={shape:t};return T.runKernel(Ua,s,i)}var O6=k({scatterND_:F6});function v1(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let i=e.size;if(!(e.rank===0||e.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function M6(r,e,t,n=0){Pe(t);let o=S(r,"sparseIndices","sparseToDense","int32"),s=S(e,"sparseValues","sparseToDense","string_or_numeric"),i=S(n,"defaultValue","sparseToDense",s.dtype);v1(o,s,t,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},u={outputShape:t};return T.runKernel(ja,a,u)}var L6=k({sparseToDense_:M6});function z6(r,e){let t=S(e,"indices","gatherND","int32"),o={params:S(r,"x","gatherND","string_or_numeric"),indices:t};return T.runKernel(_a,o)}var B6=k({gatherND_:z6});function C1(r,e){if(e==null)return r.shape.slice();if(Fn(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function V6(r,e,t,n){let o=S(r,"x","dropout");if(E(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),E(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof zt?o.clone():o;let s=C1(o,t),i=1-e,a=at(Ji(K(zn(s,0,1,"float32",n),i)),i);return R(o,a)}var CI=k({dropout_:V6});function II(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Cf(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(i)}return Te(o,"float32")}async function G6(r,e,t=1){let n=S(r,"predictions","inTopK"),o=S(e,"targets","inTopK");E(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),E(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Qe(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];E(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let i=await n.data(),a=await o.data(),[u,l]=[i.length/s,s],c=AC("bool",u);for(let p=0;p<u;p++){let m=p*l,f=i.subarray(m,m+l),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<t;h++)if(d[h].index===a[p]){c[p]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),mr(c,o.shape,"bool")}var W6=G6;var gu={};de(gu,{conv2d:()=>I1,depthwiseConv2d:()=>S1,matMul:()=>N1});function U6(r,e,t,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]])),E(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),E(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),E(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let l=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?u.shape[3]:u.shape[1];E(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),E(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Ie("conv2dDerFilter",o,i);let p={x:a,dy:u},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:t};return T.runKernel(np,p,m)}var Jp=k({conv2DBackpropFilter_:U6});function ac(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return R(r,vo(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function lc(r,e){let t=e,n=we(r.shape,e.shape);return n.length>0&&(t=mt(t,n)),$(t,r.shape)}function uc(r,e,t,n){if(e==="linear")return r;if(e==="relu")return $r(r);if(e==="elu")return Zi(r);if(e==="relu6")return Lp(r);if(e==="prelu")return pu(r,t);if(e==="leakyrelu")return su(r,n);if(e==="sigmoid")return Dr(r);throw new Error(`Unknown fused activation ${e}.`)}var cc=(r,e)=>!(r>0)||e==="linear";function H6({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",cc(T.state.gradientDepth,u)===!1){E(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=vn(r,e,t,n,o,s,i);return a!=null&&(_=K(_,a)),uc(_,u,l,c)}let p=S(r,"x","conv2d","float32"),m=S(e,"filter","conv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=$(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),Ie("fused conv2d",n,i);let h=o==="NHWC"?f.shape[3]:f.shape[1];E(m.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${m.shape[2]}.`),E(Ar(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let g=Zu(f.shape,m.shape,t,s,n,i),x;a!=null&&(x=S(a,"bias","fused conv2d"),[x]=Yt(x,p),o==="NHWC"?Pt(g.outShape,x.shape):(E(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),E(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(l!=null){let _=l.shape;if(E(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)E(_[0]===1||_[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${g.outChannels}).`);else if(_.length===3)try{Pt(_,g.outShape)}catch{let D=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(D)}y=S(l,"prelu weights","fused conv2d")}let w=(_,A)=>{E(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[D,F,O,V]=A,G=ac(_,O,u);E(oo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Dp(F.shape,G,D,t,n),H=Jp(F,G,D.shape,t,n),q=[W,H];if(V!=null){let j=lc(V,G);q.push(j)}return q},v={x:f,filter:m,bias:x,preluActivationWeights:y},N={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?Cn((A,D,F)=>{let O=T.runKernel(Gi,v,N);return F([D,A,O]),d&&(O=$(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:w}})(f,m):Cn((A,D,F,O)=>{let V=T.runKernel(Gi,v,N);return O([D,A,V,F]),d&&(V=$(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:w}})(f,m,x)}var I1=k({fusedConv2d_:H6});function q6(r,e,t,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=e;u.rank===3&&(u=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={x:a,dy:u},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:t};return T.runKernel(op,l,c)}var mg=k({depthwiseConv2dNativeBackpropFilter_:q6});function K6(r,e,t,n,o,s=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=$(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l={dy:a,filter:t},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},p=T.runKernel(sp,l,c);return u?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var fg=k({depthwiseConv2dNativeBackpropInput_:K6});function j6({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(cc(T.state.gradientDepth,u)===!1){let N=Yi(r,e,t,n,o,s,i);return a!=null&&(N=K(N,a)),uc(N,u,l,c)}let p=S(r,"x","depthwiseConv2d","float32"),m=S(e,"filter","depthwiseConv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=$(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),E(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),E(Ar(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Ie("fused depthwiseConv2d",n,i);let h=Zu(f.shape,m.shape,t,s,n,i,!0),g;a!=null&&(g=S(a,"bias","fused conv2d"),[g]=Yt(g,p),Pt(h.outShape,g.shape));let x;l!=null&&(x=S(l,"prelu weights","fused depthwiseConv2d"));let y=(N,_)=>{E(oo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,D,F,O]=_,V=ac(N,F,u),G=fg(D.shape,V,A,t,n,s,i),W=mg(D,V,A.shape,t,n,s,i);if(O!=null){let H=lc(g,V);return[G,W,H]}return[G,W]},w={x:f,filter:m,bias:g,preluActivationWeights:x},v={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?Cn((_,A,D)=>{let F=T.runKernel(Wi,w,v);return D([A,_,F]),d&&(F=$(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:y}})(f,m):Cn((_,A,D,F)=>{let O=T.runKernel(Wi,w,v);return F([A,_,O,D]),d&&(O=$(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(f,m,g)}var S1=k({fusedDepthwiseConv2d_:j6});function X6({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(cc(T.state.gradientDepth,s)===!1){let V=Gt(r,e,t,n);return o!=null&&(V=K(V,o)),uc(V,s,i,a)}let u=S(r,"a","fused matMul"),l=S(e,"b","fused matMul");[u,l]=Yt(u,l);let c=t?u.shape[u.rank-2]:u.shape[u.rank-1],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],m=t?u.shape[u.rank-1]:u.shape[u.rank-2],f=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=Kt(d),x=Kt(h);E(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${n} must match.`);let w=Pt(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([m,f]),v=t?$(u,[g,c,m]):$(u,[g,m,c]),N=n?$(l,[x,f,p]):$(l,[x,p,f]),_;o!=null&&(_=S(o,"bias","fused matMul"),[_]=Yt(_,u),Pt(w,_.shape));let A;i!=null&&(A=S(i,"prelu weights","fused matMul"));let D=(V,G)=>{let[W,H,q,j]=G,X=ac($(V,q.shape),q,s),Z,tt;if(!t&&!n?(Z=Gt(X,H,!1,!0),tt=Gt(W,X,!0,!1)):!t&&n?(Z=Gt(X,H,!1,!1),tt=Gt(X,W,!0,!1)):t&&!n?(Z=Gt(H,X,!1,!0),tt=Gt(W,X,!1,!1)):(Z=Gt(H,X,!0,!0),tt=Gt(X,W,!0,!0)),o!=null){let st=lc(j,X);return[Z,tt,st]}else return[Z,tt]},F={a:v,b:N,bias:_,preluActivationWeights:A},O={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?Cn((G,W,H)=>{let q=T.runKernel(Vi,F,O);return H([G,W,q]),{value:$(q,w),gradFunc:D}})(v,N):Cn((G,W,H,q)=>{let j=T.runKernel(Vi,F,O);return q([G,W,j,H]),{value:$(j,w),gradFunc:D}})(v,N,_)}var N1=k({fusedMatMul_:X6});function Y6(r){return Cf(r,.54,.46)}var k1=k({hammingWindow_:Y6});function Z6(r){return Cf(r,.5,.5)}var dg=k({hannWindow_:Z6});function J6(r,e,t,n=!1,o=0){let s=0,i=[];for(;s+e<=r.size;)i.push(vt(r,s,e)),s+=t;if(n)for(;s<r.size;){let a=s+e-r.size,u=re([vt(r,s,e-a),bo([a],o)]);i.push(u),s+=t}return i.length===0?Co([],[0,e]):$(re(i),[i.length,e])}var hg=k({frame_:J6});function Q6(r,e,t,n,o=dg){n==null&&(n=II(e));let s=hg(r,e,t),i=R(s,o(e));return du(i,n)}var T1=k({stft_:Q6});function t5(r,e,t,n,o="bilinear",s=0){let i=S(r,"image","cropAndResize"),a=S(e,"boxes","cropAndResize","float32"),u=S(t,"boxInd","cropAndResize","int32"),l=a.shape[0];E(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),E(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),E(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),E(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),E(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:i,boxes:a,boxInd:u},p={method:o,extrapolationValue:s,cropSize:n};return T.runKernel(Ia,c,p)}var _1=k({cropAndResize_:t5});function e5(r){let e=S(r,"image","flipLeftRight","float32");E(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return T.runKernel(Ta,t,{})}var E1=k({flipLeftRight_:e5});function r5(r){let e=S(r,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];E(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),E(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Rr(e,o)}var A1=k({grayscaleToRGB_:r5});function n5(r){let e=S(r,"image","RGBToGrayscale"),t=e.rank-1,n=e.shape[t];E(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),E(n===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`);let o=e.dtype,s=Q(e,"float32"),i=Te([.2989,.587,.114]),a;switch(e.rank){case 2:a=nu("ij,j->i",s,i);break;case 3:a=nu("ijk,k->ij",s,i);break;case 4:a=nu("ijkl,l->ijk",s,i);break;case 5:a=nu("ijklm,m->ijkl",s,i);break;case 6:a=nu("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Le(a,-1),Q(a,o)}var D1=k({rgbToGrayscale_:n5});function o5(r,e,t=0,n=.5){let o=S(r,"image","rotateWithOffset","float32");E(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:e,fillValue:t,center:n};return T.runKernel(Ja,s,i)}var R1=k({rotateWithOffset_:o5});function Io(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return t=Math.min(t,i),E(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),E(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),E(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),E(e.rank===1,()=>"scores must be a 1D tensor"),E(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),E(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function s5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppression","float32"),i=S(e,"scores","nonMaxSuppression","float32"),a=Io(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return T.runKernel(za,{boxes:s,scores:i},u)}var $1=k({nonMaxSuppression_:s5});function F1(r,e,t){let n=i5(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function i5(r,e,t){return l5(r,e,t||a5)}function a5(r,e){return r>e?1:r<e?-1:0}function l5(r,e,t){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=t(e,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function gg(r,e,t,n,o){return SI(r,e,t,n,o,0)}function xg(r,e,t,n,o,s){return SI(r,e,t,n,o,0,!1,s,!0)}function yg(r,e,t,n,o,s){return SI(r,e,t,n,o,s,!0)}function SI(r,e,t,n,o,s,i=!1,a=!1,u=!1){let l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(O1);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&l.length>0;){let g=l.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=g;if(x<o)break;let v=!1;for(let N=p.length-1;N>=w;--N){let _=u5(r,y,p[N]);if(_>=n){v=!0;break}if(g.score=g.score*c5(n,c,_),g.score<=o)break}g.suppressBeginIndex=p.length,v||(g.score===x?(p.push(y),m.push(g.score)):g.score>o&&F1(l,g,O1))}let f=p.length,d=t-f;a&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return i&&(h.selectedScores=m),u&&(h.validOutputs=f),h}function u5(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(a-s)*(u-i),d=(p-l)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,l),g=Math.max(i,c),x=Math.min(a,p),y=Math.min(u,m),w=Math.max(x-h,0)*Math.max(y-g,0);return w/(f+d-w)}function c5(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function O1(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function p5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=S(r,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),a=Io(s,i,t,n,o);t=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=gg(l,c,t,n,o);return s!==r&&s.dispose(),i!==e&&i.dispose(),Te(p,"int32")}var P1=p5;function m5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),u=Io(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=T.runKernel(Va,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}var M1=k({nonMaxSuppressionWithScore_:m5});async function f5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),u=Io(i,a,t,n,o,s);t=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([i.data(),a.data()]),c=l[0],p=l[1],{selectedIndices:m,selectedScores:f}=yg(c,p,t,n,o,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Te(m,"int32"),selectedScores:Te(f)}}var L1=f5;function d5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=S(r,"boxes","nonMaxSuppression"),a=S(e,"scores","nonMaxSuppression"),u=Io(i,a,t,n,o,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=T.runKernel(Ba,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var z1=k({nonMaxSuppressionPadded_:d5});async function h5(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=S(r,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),u=Io(i,a,t,n,o,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[m,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:d,validOutputs:h}=xg(m,f,l,c,p,s);return i!==r&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Te(d,"int32"),validOutputs:pt(h,"int32")}}var B1=h5;function g5(r,e,t=!1,n=!1){let o=S(r,"images","resizeBilinear");E(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),E(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),E(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=T.runKernel(Ms,a,u);return i?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var bg=k({resizeBilinear_:g5});function x5(r,e,t=!1,n=!1){let o=S(r,"images","resizeNearestNeighbor");E(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),E(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),E(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,a={images:s},u={alignCorners:t,halfPixelCenters:n,size:e},l=T.runKernel(Ps,a,u);return i?$(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var wg=k({resizeNearestNeighbor_:x5});function y5(r,e="binary",t=!1,n=.5){let o=S(r,"image","threshold"),s=.2989,i=.587,a=.114,u=o.shape[0]*o.shape[1],l=R(Te([n]),255),c,p,m,f;if(E(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),E(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),E(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),E(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[c,p,m]=dr(o,[1,1,1],-1);let g=R(c,s),x=R(p,i),y=R(m,a);f=K(K(g,x),y)}else f=r;if(e==="otsu"){let g=kh(Q(zp(f),"int32"),mr([]),256);l=b5(g,u)}let d=t?Ln(f,l):ze(f,l);return Q(R(d,255),"int32")}function b5(r,e){let t=Te([-1]),n=Te([0]),o=Te([0]),s,i,a,u,l,c;for(let p=0;p<r.size-1;p++){s=vt(r,0,p+1),i=vt(r,p+1),l=at(mt(s),e),c=at(mt(i),e);let m=mt(R(s,ta(0,s.size)));a=at(m,mt(s));let f=bo(i.shape,s.size),d=K(ta(0,i.size),f),h=R(i,d);u=at(mt(h),mt(i));let g=nt(a,u),x=nt(a,u),y=R(l,c);o=R(R(y,g),x);let w=ze(o,n);n=Se(w,o,n),t=Se(w,Te([p]),t)}return t}var V1=k({threshold_:y5});function w5(r,e,t="nearest",n="constant",o=0,s){let i=S(r,"image","transform","float32"),a=S(e,"transforms","transform","float32");E(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:a},l={interpolation:t,fillMode:n,fillValue:o,outputShape:s};return T.runKernel(Za,u,l)}var G1=k({transform_:w5});function v5(r,e,t){let n=S(r,"a","bandPart");E(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2),a,u;typeof e=="number"?(E(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),E(e<=s,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`),a=S(e<0?s:e,"numLower","bandPart")):(E(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Se(ol(e,0),s,io(e,s))),typeof t=="number"?(E(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),E(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),u=S(t<0?i:t,"numUpper","bandPart")):(E(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Se(ol(t,0),i,io(t,i)));let l=$(ta(0,s,1,"int32"),[-1,1]),c=ta(0,i,1,"int32"),p=nt(l,c),m=Wr(Ln(p,a),ln(p,Ut(u))),f=ke([s,i],n.dtype);return $(Be(hr($(n,[-1,s,i])).map(d=>Se(m,d,f))),o)}var W1=k({bandPart_:v5});function C5(r){let e;if(Array.isArray(r)){e=!1,E(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)E(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=dr(r,r.shape[0],0).map(o=>Fr(o,[0]));E(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(T.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=R(mt(R(t[i],s)),t[i]);s=nt(s,a)}return at(s,nl(s,"euclidean"))}));return e?Be(t,0):t}var U1=k({gramSchmidt_:C5});function I5(r,e=!1){if(E(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return H1(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=hr($(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,c]=H1(u,e);o.push(l),s.push(c)});let i=$(Be(o,0),r.shape),a=$(Be(s,0),r.shape);return[i,a]}}function H1(r,e=!1){return T.tidy(()=>{E(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=tc(t),s=an(r),i=Co([[1]],[1,1]),a=an(i),u=t>=n?n:t;for(let l=0;l<u;++l){let c=s,p=a,m=o;[a,s,o]=T.tidy(()=>{let f=vt(s,[l,l],[t-l,1]),d=nl(f),h=vt(s,[l,l],[1,1]),g=Se(ze(h,0),Co([[-1]]),Co([[1]])),x=nt(h,R(g,d)),y=at(f,x);y.shape[0]===1?a=an(i):a=re([i,vt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let w=Ut(at(Gt(g,x),d)),v=vt(s,[l,0],[t-l,n]),N=R(w,a),_=Wt(a);if(l===0)s=nt(v,Gt(N,Gt(_,v)));else{let F=nt(v,Gt(N,Gt(_,v)));s=re([vt(s,[0,0],[l,n]),F],0)}let A=Wt(N),D=vt(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=nt(D,Gt(Gt(D,a),A));else{let F=nt(D,Gt(Gt(D,a),A));o=re([vt(o,[0,0],[t,l]),F],1)}return[a,s,o]}),$t([c,p,m])}return!e&&t>n&&(o=vt(o,[0,0],[t,n]),s=vt(s,[0,0],[n,n])),[o,s]})}var q1=k({qr_:I5});var ar=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(ar||{});function S5(r,e,t=ar.SUM_BY_NONZERO_WEIGHTS){let n=S(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));let s=o==null?n:R(n,o);if(t===ar.NONE)return s;if(t===ar.SUM)return mt(s);if(t===ar.MEAN){if(o==null)return Ne(s);{let i=n.size/o.size,a=at(mt(s),mt(o));return i>1?at(a,pt(i)):a}}if(t===ar.SUM_BY_NONZERO_WEIGHTS){if(o==null)return at(mt(s),pt(n.size));{let i=R(o,or(n.shape)),a=Q(mt(ii(i,pt(0))),"float32");return at(mt(s),a)}}throw Error(`Unknown reduction: ${t}`)}var Ur=k({computeWeightedLoss_:S5});function N5(r,e,t,n=ar.SUM_BY_NONZERO_WEIGHTS){let o=S(r,"labels","absoluteDifference"),s=S(e,"predictions","absoluteDifference"),i=null;t!=null&&(i=S(t,"weights","absoluteDifference")),Qe(o.shape,s.shape,"Error in absoluteDifference: ");let a=Ee(nt(o,s));return Ur(a,i,n)}var K1=k({absoluteDifference_:N5});function k5(r,e,t,n,o=ar.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","cosineDistance"),i=S(e,"predictions","cosineDistance"),a=null;n!=null&&(a=S(n,"weights","cosineDistance")),Qe(s.shape,i.shape,"Error in cosineDistance: ");let u=pt(1),l=nt(u,mt(R(s,i),t,!0));return Ur(l,a,o)}var j1=k({cosineDistance_:k5});function T5(r,e,t,n=ar.SUM_BY_NONZERO_WEIGHTS){let o=S(r,"labels","hingeLoss"),s=S(e,"predictions","hingeLoss"),i=null;t!=null&&(i=S(t,"weights","hingeLoss")),Qe(o.shape,s.shape,"Error in hingeLoss: ");let a=pt(1);o=nt(R(pt(2),o),a);let u=$r(nt(a,R(o,s)));return Ur(u,i,n)}var X1=k({hingeLoss_:T5});function _5(r,e,t,n=1,o=ar.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","huberLoss"),i=S(e,"predictions","huberLoss"),a=null;t!=null&&(a=S(t,"weights","huberLoss")),Qe(s.shape,i.shape,"Error in huberLoss: ");let u=pt(n),l=Ee(nt(i,s)),c=io(l,u),p=nt(l,c),m=K(R(pt(.5),Vt(c)),R(u,p));return Ur(m,a,o)}var Y1=k({huberLoss_:_5});function E5(r,e,t,n=1e-7,o=ar.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"labels","logLoss"),i=S(e,"predictions","logLoss"),a=null;t!=null&&(a=S(t,"weights","logLoss")),Qe(s.shape,i.shape,"Error in logLoss: ");let u=pt(1),l=pt(n),c=Ut(R(s,Ir(K(i,l)))),p=R(nt(u,s),Ir(K(nt(u,i),l))),m=nt(c,p);return Ur(m,a,o)}var Z1=k({logLoss_:E5});function A5(r,e,t,n=ar.SUM_BY_NONZERO_WEIGHTS){let o=S(r,"labels","meanSquaredError"),s=S(e,"predictions","meanSquaredError"),i=null;t!=null&&(i=S(t,"weights","meanSquaredError")),Qe(o.shape,s.shape,"Error in meanSquaredError: ");let a=jp(o,s);return Ur(a,i,n)}var J1=k({meanSquaredError_:A5});function D5(r,e){let t=S(r,"labels","sigmoidCrossEntropyWithLogits"),n=S(e,"logits","sigmoidCrossEntropyWithLogits");Qe(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=$r(n),s=R(n,t),i=iu(je(Ut(Ee(n))));return K(nt(o,s),i)}function R5(r,e,t,n=0,o=ar.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"multiClassLabels","sigmoidCrossEntropy"),i=S(e,"logits","sigmoidCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","sigmoidCrossEntropy")),Qe(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=pt(n),c=pt(1),p=pt(.5);s=K(R(s,nt(c,l)),R(p,l))}let u=D5(s,i);return Ur(u,a,o)}var Q1=k({sigmoidCrossEntropy_:R5});function $5(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Cn((o,s,i)=>{let u=au(s,[t],!0),l=nt(Q(s,"float32"),u);i([o,l]);let c=Ut(R(l,o));return{value:mt(c,[t]),gradFunc:(f,d)=>{let[h,g]=d,x=wo(f.shape,[t]);return[R($(f,x),nt(Q(h,"float32"),je(g))),R($(f,x),nt(je(g),Q(h,"float32")))]}}})(r,e)}function F5(r,e,t,n=0,o=ar.SUM_BY_NONZERO_WEIGHTS){let s=S(r,"onehotLabels","softmaxCrossEntropy"),i=S(e,"logits","softmaxCrossEntropy"),a=null;if(t!=null&&(a=S(t,"weights","softmaxCrossEntropy")),Qe(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let l=pt(n),c=pt(1),p=pt(s.shape[1]);s=K(R(s,nt(c,l)),at(l,p))}let u=$5(s,i);return Ur(u,a,o)}var t_=k({softmaxCrossEntropy_:F5});function O5(r,e,t,n){let o=S(r,"indices","sparseFillEmptyRows","int32"),s=S(e,"values","sparseFillEmptyRows"),i=S(t,"denseShape","sparseFillEmptyRows","int32"),a=S(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let u={indices:o,values:s,denseShape:i,defaultValue:a},l=T.runKernel(Bl,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var e_=k({sparseFillEmptyRows_:O5});function P5(r,e,t){let n=S(r,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),s=S(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=T.runKernel(Ka,i);return{outputIndices:a[0],outputShape:a[1]}}var r_=k({sparseReshape_:P5});function M5(r,e,t){let n=S(r,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),s=S(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return T.runKernel(Vl,i)}var n_=k({sparseSegmentMean_:M5});function L5(r,e,t){let n=S(r,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),s=S(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return T.runKernel(Gl,i)}var o_=k({sparseSegmentSum_:L5});function z5(r,e,t,n,o,s,i,a){let u=S(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=S(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:t,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},p={data:u,dataSplits:l},m=T.runKernel(Ul,p,c);return{nGrams:m[0],nGramsSplits:m[1]}}var s_=k({stringNGrams_:z5});function B5(r,e,t=!0){let n=S(r,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:t},i={input:n,delimiter:o},a=T.runKernel(Hl,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var i_=k({stringSplit_:B5});function V5(r,e){let t=S(r,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");let o={input:t};return T.runKernel(ql,o,n)}var a_=k({stringToHashBucketFast_:V5});function G5(r,e,t,n=!0){let o=S(r,"input","staticRegexReplace","string"),s={pattern:e,rewrite:t,replaceGlobal:n};return T.runKernel(Lu,{x:o},s)}var l_=k({staticRegexReplace_:G5});var W5={fft:fu,ifft:il,rfft:du,irfft:Kp},U5={hammingWindow:k1,hannWindow:dg,frame:hg,stft:T1},Hr={flipLeftRight:E1,grayscaleToRGB:A1,resizeNearestNeighbor:wg,resizeBilinear:bg,rgbToGrayscale:D1,rotateWithOffset:R1,cropAndResize:_1,nonMaxSuppression:$1,nonMaxSuppressionAsync:P1,nonMaxSuppressionWithScore:M1,nonMaxSuppressionWithScoreAsync:L1,nonMaxSuppressionPadded:z1,nonMaxSuppressionPaddedAsync:B1,threshold:V1,transform:G1},NI={bandPart:W1,gramSchmidt:U1,qr:q1},H5={absoluteDifference:K1,computeWeightedLoss:Ur,cosineDistance:j1,hingeLoss:X1,huberLoss:Y1,logLoss:Z1,meanSquaredError:J1,sigmoidCrossEntropy:Q1,softmaxCrossEntropy:t_},q5={sparseFillEmptyRows:e_,sparseReshape:r_,sparseSegmentMean:n_,sparseSegmentSum:o_},K5={stringNGrams:s_,stringSplit:i_,stringToHashBucketFast:a_,staticRegexReplace:l_};var J={};de(J,{Serializable:()=>If,SerializationMap:()=>vg,getRegisteredName:()=>X5,registerClass:()=>TI});var j5=new Map,kI=new Map,If=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},vg=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(e){r.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function TI(r,e,t){E(r.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),E(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=r.className);let n=t,o=e+">"+n;return vg.register(r),j5.set(o,r),kI.set(r,o),r}function X5(r){return kI.has(r)?kI.get(r):r.className}var qr=class extends If{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return $t(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return dI(e,t)}dispose(){this.iterations_!=null&&$t(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:pt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(qr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Qp=class extends qr{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=T.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=T.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:B(()=>St(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:B(()=>St(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;B(()=>{let c=K(R(u,this.rho),R(Vt(a),1-this.rho)),p=R(at(ge(K(l,this.epsilon)),ge(K(u,this.epsilon))),a),m=K(R(l,this.rho),R(Vt(p),1-this.rho));u.assign(c),l.assign(m);let f=K(R(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&($t(this.accumulatedGrads.map(e=>e.variable)),$t(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};var tm=class extends qr{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=T.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:B(()=>bo(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;B(()=>{let u=K(a,Vt(i));a.assign(u);let l=K(R(at(i,ge(K(u,T.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&$t(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};var em=class extends qr{static get className(){return"Adam"}constructor(e,t,n,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],B(()=>{this.accBeta1=pt(t).variable(),this.accBeta2=pt(n).variable()}),o==null&&(this.epsilon=T.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);B(()=>{let n=nt(1,this.accBeta1),o=nt(1,this.accBeta2);t.forEach((s,i)=>{let a=T.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:B(()=>St(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:B(()=>St(a).variable(u))});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=K(R(c,this.beta1),R(l,1-this.beta1)),f=K(R(p,this.beta2),R(Vt(l),1-this.beta2)),d=at(m,n),h=at(f,o);c.assign(m),p.assign(f);let g=K(R(at(d,K(ge(h),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&$t(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&$t(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),B(()=>{this.accBeta1.assign(Gr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Gr(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};var rm=class extends qr{static get className(){return"Adamax"}constructor(e,t,n,o=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],B(()=>{this.iteration=pt(0).variable(),this.accBeta1=pt(t).variable()}),o==null&&(this.epsilon=T.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);B(()=>{let n=nt(1,this.accBeta1),o=at(-this.learningRate,K(R(this.iteration,this.decay),1));t.forEach((s,i)=>{let a=T.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:St(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:St(a).variable(u)});let l=Array.isArray(e)?e[i].tensor:e[s];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=K(R(c,this.beta1),R(l,1-this.beta1)),f=R(p,this.beta2),d=Ee(l),h=In(f,d);c.assign(m),p.assign(h);let g=K(R(at(o,n),at(m,K(h,this.epsilon))),a);a.assign(g)}),this.iteration.assign(K(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&$t(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&$t(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};var xu=class extends qr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let i=T.registeredVariables[n];B(()=>{let a=K(R(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Re(pt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};var nm=class extends xu{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=pt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=T.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:B(()=>St(s).variable(!1))});let i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[n];a!=null&&B(()=>{let u,l=K(R(this.m,i),a);this.useNesterov?u=K(R(this.c,K(a,R(l,this.m))),s):u=K(R(this.c,l),s),i.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&$t(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};var om=class extends qr{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,o=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=T.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=T.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:B(()=>St(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:B(()=>St(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:B(()=>St(s).variable(i))});let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;B(()=>{let c=K(R(u,this.decay),R(Vt(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=K(R(p,this.decay),R(a,1-this.decay)),f=at(R(a,this.learningRate),ge(nt(c,K(Vt(m),this.epsilon)))),d=K(R(l,this.momentum),f);u.assign(c),p.assign(m),l.assign(d);let h=nt(s,d);s.assign(h)}else{let p=K(R(u,this.decay),R(Vt(a),1-this.decay)),m=K(R(l,this.momentum),at(R(a,this.learningRate),ge(K(p,this.epsilon))));u.assign(p),l.assign(m);let f=nt(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&$t(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&$t(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&$t(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};var Y5=[Qp,tm,em,rm,nm,om,xu];function u_(){for(let r of Y5)TI(r)}var ai={};de(ai,{CompositeArrayBuffer:()=>Br,browserFiles:()=>p_,browserHTTPRequest:()=>g_,concatenateArrayBuffers:()=>tT,copyModel:()=>dT,decodeWeights:()=>ah,decodeWeightsStream:()=>lh,encodeWeights:()=>Yk,fromMemory:()=>x_,fromMemorySync:()=>FI,getLoadHandlers:()=>oT,getModelArtifactsForJSON:()=>Ip,getModelArtifactsForJSONSync:()=>tI,getModelArtifactsInfoForJSON:()=>Hi,getSaveHandlers:()=>nT,getWeightSpecs:()=>df,http:()=>Ig,isHTTPScheme:()=>Cg,listModels:()=>mT,loadWeights:()=>f_,moveModel:()=>hT,registerLoadRouter:()=>rT,registerSaveRouter:()=>eT,removeModel:()=>fT,weightsLoaderFactory:()=>RI,withSaveHandler:()=>y_,withSaveHandlerSync:()=>b_});var Z5="model",J5=".json",Q5=".weights.bin";function c_(r){return new Promise(e=>setTimeout(e)).then(r)}var _I=(()=>{class r{constructor(t){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(r.URL_SCHEME)&&(t=t.slice(r.URL_SCHEME.length)),(t==null||t.length===0)&&(t=Z5),this.modelJsonFileName=t+J5,this.weightDataFileName=t+Q5}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let n=Br.join(t.weightData),o=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=uh(t,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),u=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(u.download=this.modelJsonFileName,u.href=a,await c_(()=>u.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=o,await c_(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Hi(t)}}}}return r.URL_SCHEME="downloads://",r})();var EI=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}let u=Ip(s,l=>this.loadWeights(l));e(u)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let i of e)t.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(e),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>QC(s.name)),o={};for(let s of e)s.paths.forEach(i=>{let a=QC(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},tX=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_I.URL_SCHEME)?eX(r.slice(_I.URL_SCHEME.length)):null;wr.registerSaveRouter(tX);function eX(r="model"){return new _I(r)}function p_(r){return new EI(r)}function AI(r,e,t,n){i(r),t=t??0,n=n??1,a(t,n);let o=0,s=u=>(u.then(l=>{let c=t+ ++o/r.length*(n-t);return e(c),l}),u);function i(u){E(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),E(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),E(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function DI(r,e){e==null&&(e={});let t=e.fetchFunc==null?z().platform.fetch:e.fetchFunc,n=r.map(p=>t(p,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(n):await AI(n,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?await Promise.all(a):await AI(a,e.onProgress,.5,1)}function m_(r,e){var t;let n=e.fetchFunc==null?z().platform.fetch:e.fetchFunc,o=0,s;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;o<r.length;){s||(s=(await n(r[o],e.requestInit,{isBinary:!0})).body.getReader());let{done:u,value:l}=await s.read();if(u){o++,s=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,o/r.length);continue}i.enqueue(l);return}i.close()}})}async function f_(r,e="",t,n){return RI(i=>DI(i,{requestInit:n}))(r,e,t)}function RI(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,y=tl[x]*Kt(g.shape),w=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:y})};n!=null?n.forEach((v,N)=>{v===g.name&&(w(),i[N]=!0)}):w(),a.push(g.name),h+=y})}),!i.every(f=>f)){let f=n.filter((d,h)=>!i[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let u=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),l=[];u.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;l.push(h)})});let c=await r(l),p={},m=0;return u.forEach(f=>{let d=e[f].paths.length,h=new Br(c.slice(m,m+d));s[f].forEach(x=>{let y=h.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=ah(y,[x.manifestEntry]);for(let v in w)p[v]=w[v]}),m+=d}),p}}var rX="application/octet-stream",nX="application/json",d_=(()=>{class r{constructor(t,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(E(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=z().platform.fetch,E(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&E(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s=uh(t,o);if(n.body.append("model.json",new Blob([JSON.stringify(s)],{type:nX}),"model.json"),t.weightData!=null){let a=Br.join(t.weightData);n.body.append("model.weights.bin",new Blob([a],{type:rX}),"model.weights.bin")}let i=await this.fetch(this.path,n);if(i.ok)return{modelArtifactsInfo:Hi(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let o=n.modelTopology,s=n.weightsManifest;if(o==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let t=await this.loadModelJSON();return Ip(t,n=>this.loadWeights(n))}async loadStream(){let t=await this.loadModelJSON(),n=await this.getWeightUrls(t.weightsManifest),o=df(t.weightsManifest),s=()=>m_(n,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:o,getWeightStream:s})}async getWeightUrls(t){let n=Array.isArray(this.path)?this.path[1]:this.path,[o,s]=oX(n),i=this.weightPathPrefix||o,a=[],u=[];for(let l of t)for(let c of l.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(c)):a.push(i+c+s);return this.weightUrlConverter&&a.push(...await Promise.all(u)),a}async loadWeights(t){let n=await this.getWeightUrls(t),o=df(t),s=await DI(n,this.loadOptions);return[o,s]}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function oX(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Cg(r){return r.match(d_.URL_SCHEME_REGEX)!=null}var h_=(r,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Cg(n)):t=Cg(r),t)return Ig(r,e)}return null};wr.registerSaveRouter(h_);wr.registerLoadRouter(h_);function Ig(r,e){return new d_(r,e)}function g_(r,e){return Ig(r,e)}var Sf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Sg=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},$I=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function x_(r,e,t,n){let o=arguments;return new $I(FI(...o))}function FI(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Sf(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sf({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sf({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function y_(r){return new Sg(r)}function b_(r){return new Sg(r)}var Nf={};de(Nf,{draw:()=>mX,fromPixels:()=>fX,fromPixelsAsync:()=>uX,toPixels:()=>pX});var pc,w_=!1;function v_(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(dp(lf,T.backendName)!=null){let d={pixels:r},h={numChannels:e};return T.runKernel(lf,d,h)}let[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(i)p=r.getContext("2d").getImageData(0,0,l,c).data;else if(n||t)p=r.data;else if(s||o||a){if(pc==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")pc=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else pc=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});pc.canvas.width=l,pc.canvas.height=c,pc.drawImage(r,0,0,l,c),p=pc.getImageData(0,0,l,c).data}let m;if(e===4)m=new Int32Array(p);else{let d=l*c;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=p[h*4+g]}return ig(m,[c,l,e],"int32")}function sX(r){return r!=null&&r.data instanceof Uint8Array}function iX(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function aX(r){return r!=null&&r.width!==0&&r.height!==0}function lX(r){return iX()&&!(r instanceof ImageBitmap)&&aX(r)&&!sX(r)}async function uX(r,e=3){let t=null;if(z().getBool("WRAP_TO_IMAGEBITMAP")&&lX(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?t=n:t=r}else t=r;return v_(t,e)}function C_(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let e=r.rank===2?1:r.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function cX(r){let e=r?.alpha||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function pX(r,e){let t=S(r,"img","toPixels");if(!(r instanceof zt)){let l=t;t=Q(l,"int32"),l.dispose()}C_(t);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=i[l*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*a,c[1]=f*a,c[2]=f*a):c[m]=f*a}let p=l*4;u[p+0]=Math.round(c[0]),u[p+1]=Math.round(c[1]),u[p+2]=Math.round(c[2]),u[p+3]=Math.round(c[3])}if(e!=null){w_||dp(af,T.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),w_=!0),e.width=o,e.height=n;let l=e.getContext("2d"),c=new ImageData(u,o,n);l.putImageData(c,0,0)}return t!==r&&t.dispose(),u}function mX(r,e,t){let n=S(r,"img","draw");if(!(r instanceof zt)){let i=n;n=Q(i,"int32"),i.dispose()}C_(n),cX(t?.imageOptions);let o={image:n},s={canvas:e,options:t};T.runKernel(af,o,s)}var fX=k({fromPixels_:v_});var Ng={};de(Ng,{prepareAndValidate:()=>I_});function I_(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(Kt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],i=1;for(let p=0;p<o.length-1;++p)i*=o[p];let a=r.shape,u=o.slice();u.pop();let l=1;for(let p=s;p<t;++p)l*=a[p],u.push(a[p]);let c=[...vi(r.shape).map(p=>p/l),1].slice(0,s);return[u,i,l,c]}var Ve={};de(Ve,{assertParamsValid:()=>hX,computeFlatOffset:()=>wX,computeOutShape:()=>xX,getNormalizedAxes:()=>yX,isSliceContinous:()=>bX,maskToAxes:()=>gX,parseSliceParams:()=>PI,sliceInfo:()=>vX,startForAxis:()=>D_,startIndicesWithElidedDims:()=>__,stopForAxis:()=>R_,stopIndicesWithElidedDims:()=>E_,stridesForAxis:()=>A_,stridesWithElidedDims:()=>N_});var OI=-2,dX=-1;function hX(r,e,t){let n=r.shape.length;E(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),E(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)E(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function gX(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function xX(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function N_(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function k_(r,e,t){return t<=r?t:t-(e-1)}function T_(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function yX(r,e,t,n,o,s,i,a,u){let l=r.length,c=new Array(l),p=new Array(l),m=new Array(l);if(e.length&&t>0){let f=e[0],d=t+1;c=__(i,f,d,n,r),p=E_(a,f,d,o,r),m=N_(s,f,d,r)}else for(let f=0;f<l;f++)c[f]=D_(i,n,s,r,f,u),p[f]=R_(a,o,s,r,f,u),m[f]=A_(s,f,u);return{begin:c,end:p,strides:m}}function __(r,e,t,n,o){let s=[...o],i=T_(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let u=k_(e,t,a),l=n[u];r&1<<u&&(l=0),s[a]=l}return s}function E_(r,e,t,n,o){let s=[...o],i=T_(t,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let u=k_(e,t,a),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[a]=l}for(let a=0;a<s.length;a++){let u=o[a];s[a]<0&&(s[a]+=u),s[a]=Yc(0,s[a],o[a])}return s}function A_(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function D_(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),i=Yc(0,i,u-1),i}function R_(r,e,t,n,o,s){let i=e[o],a=t[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),a>0?i=Yc(0,i,u):i=Yc(-1,i,u-1),i}function bX(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function wX(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function PI(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(i=>{E(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((i,a)=>i>=0?i:(E(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function vX(r,e,t,n,o,s,i,a,u){let l;if(n==null?(l=new Array(e.length),l.fill(1)):l=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let w=0;w<p.dims;w++)c&&(1<<w&a)!==0&&p.numAddAxisAfterEllipsis++,1<<w&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};CX(p,m);let f=!0,d=!0,h=!0,g=[],x=[];for(let w=0;w<r.length;++w){if(m.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);let v=!!(m.shrinkAxisMask&1<<w),N=r[w];if(N===-1){g.push(v?1:-1);continue}let _=[m.beginMask&1<<w,m.endMask&1<<w],A=[m.strides[w]>0?0:-1,m.strides[w]>0?N:N-1];if(v&&m.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&m.strides[w]===1;let D=!!(m.beginMask&1<<w&&m.endMask&1<<w);if(m.beginValid&&m.endValid){if(v){let G=m.begin[w]<0?N+m.begin[w]:m.begin[w];if(m.begin[w]=G,m.end[w]=m.begin[w]+1,G<0||G>=N)throw Error(`slice index ${m.begin[w]} of dimension ${w} out of bounds.`)}else m.begin[w]=S_(m.begin[w],0,m.strides[w],N,_,A),m.end[w]=S_(m.end[w],1,m.strides[w],N,_,A);let V=m.strides[w]===1&&m.begin[w]===0&&m.end[w]===N;f=f&&V,d=d&&(w===0&&m.strides[w]===1||V)}else f=f&&m.strides[w]===1&&D,d=d&&(w===0&&m.strides[w]===1||D);let F,O=!1;if(m.beginValid&&m.endValid?(F=m.end[w]-m.begin[w],O=!0):v?(F=1,O=!0):D&&N>=0&&(m.strides[w]<0?F=-N:F=N,O=!0),O){let V;F===0||F<0!=m.strides[w]<0?V=0:V=Math.trunc(F/m.strides[w])+(F%m.strides[w]!==0?1:0),g.push(V)}else g.push(-1)}for(let w=0;w<m.finalShapeGatherIndices.length;++w){let v=m.finalShapeGatherIndices[w];v>=0?x.push(g[v]):v===OI&&x.push(1)}return{finalShapeSparse:x.filter((w,v)=>m.finalShapeGatherIndices[v]!==OI),finalShape:x,isIdentity:f,sliceDim0:d,isSimpleSlice:h,begin:m.begin,end:m.end,strides:m.strides}}function CX(r,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=r.begin!=null,e.endValid=r.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(e.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&r.newAxisMask)e.finalShapeGatherIndices.push(OI),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);r.begin!=null&&(e.begin[t]=r.begin[n]),r.end!=null&&(e.end[t]=r.end[n]),e.strides[t]=r.strides[n],r.beginMask&1<<n&&(e.beginMask|=1<<t),r.endMask&1<<n&&(e.endMask|=1<<t),r.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(dX),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function S_(r,e,t,n,o,s){if(o[e])return t>0?s[e]:s[e+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var kg=class{static sgd(e){return new xu(e)}static momentum(e,t,n=!1){return new nm(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new om(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new em(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new Qp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new rm(e,t,n,o,s)}static adagrad(e,t=.1){return new tm(e,t)}};var mc=kg;var IX=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function kf(){return new Promise(r=>IX(()=>r()))}var I={};de(I,{ERF_A1:()=>LX,ERF_A2:()=>zX,ERF_A3:()=>BX,ERF_A4:()=>VX,ERF_A5:()=>GX,ERF_P:()=>MX,PARALLELIZE_THRESHOLD:()=>Tg,RowPartitionType:()=>al,SELU_SCALE:()=>LI,SELU_SCALEALPHA:()=>MI,applyActivation:()=>uc,assertAndGetBroadcastShape:()=>Pt,assertAxesAreInnerMostDims:()=>gK,assertParamsConsistent:()=>SX,assignToTypedArray:()=>jX,axesAreInnerMostDims:()=>cI,calculateShapes:()=>y1,checkEinsumDimSizes:()=>t8,checkPadOnDimRoundingMode:()=>Ie,combineLocations:()=>ET,combineRaggedTensorToTensorShapes:()=>kX,complexWithEvenIndex:()=>HX,complexWithOddIndex:()=>qX,computeConv2DInfo:()=>Zu,computeConv3DInfo:()=>wT,computeDefaultPad:()=>uI,computeDilation2DInfo:()=>hq,computeOptimalWindowSize:()=>AX,computeOutAndReduceShapes:()=>pI,computeOutShape:()=>NX,computePool2DInfo:()=>lI,computePool3DInfo:()=>gq,convertConv2DDataFormat:()=>vT,decodeEinsumEquation:()=>JX,eitherStridesOrDilationsAreOne:()=>Ar,expandShapeToKeepDim:()=>wo,exponent:()=>YX,exponents:()=>XX,fromStringArrayToUint8:()=>v8,fromUint8ToStringArray:()=>w8,getAxesPermutation:()=>mI,getBroadcastDims:()=>TT,getComplexWithIndex:()=>KX,getEinsumComputePath:()=>e8,getEinsumPermutation:()=>QX,getFusedBiasGradient:()=>lc,getFusedDyActivation:()=>ac,getImageCenter:()=>DX,getInnerMostAxes:()=>xK,getPermuted:()=>$X,getRaggedRank:()=>_X,getReductionAxes:()=>we,getReshaped:()=>RX,getReshapedPermuted:()=>FX,getRowPartitionTypesHelper:()=>TX,getSliceBeginCoords:()=>OX,getSliceSize:()=>PX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>s8,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>i8,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>a8,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>c8,getSparseReshapeInputOutputMismatchErrorMessage:()=>m8,getSparseReshapeInputOutputMultipleErrorMessage:()=>p8,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>l8,getSparseReshapeNegativeOutputDimErrorMessage:()=>u8,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>g8,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>f8,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>d8,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>h8,getUndoAxesPermutation:()=>yf,isIdentityPermutation:()=>r8,log:()=>aH,mergeRealAndImagArrays:()=>WX,prepareAndValidate:()=>I_,prepareSplitSize:()=>o8,segment_util:()=>BI,shouldFuse:()=>cc,slice_util:()=>Ve,splitRealAndImagArrays:()=>UX,stridesOrDilationsArePositive:()=>Ki,tupleValuesAreOne:()=>oo,upcastType:()=>ir,validateDefaultValueShape:()=>EX,validateInput:()=>Xp,validateUpdateShape:()=>vI,warn:()=>Ui});function SX(r,e){let t=r[0].length;r.forEach((o,s)=>{E(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),E(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<t;i++)E(i===e||o[i]===n[i],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function NX(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var al=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(al||{});function kX(r,e,t){let n=new Array;if(t==null&&e==null)return n;if(e==null)for(;n.length<r+t.length;)n.push(-1);else n=e.slice();if(t==null)return n;if(r+t.length!==n.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${r+t.length}, but shape.rank = ${n.length}`);for(let o=1;o<t.length;++o){let s=t[o],i=n[n.length-t.length+o],a=n[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${a}`)}else n[i]=s}return n}function TX(r){let e={FIRST_DIM_SIZE:al.FIRST_DIM_SIZE,VALUE_ROWIDS:al.VALUE_ROWIDS,ROW_LENGTHS:al.ROW_LENGTHS,ROW_SPLITS:al.ROW_SPLITS,ROW_LIMITS:al.ROW_LIMITS,ROW_STARTS:al.ROW_STARTS},t=[];for(let n of r)if(n in e)t.push(e[n]);else break;return t}function _X(r){return r.length===0?0:r[0]===al.FIRST_DIM_SIZE?r.length-1:r.length}function EX(r,e){if(r==null||e==null)return;let t=r.length,n=e.length;if(t>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(t,n-1);++o){let s=r[o],i=e[o+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${i}`)}}var Tg=30;function AX(r){return r<=Tg?r:tp(r,Math.floor(Math.sqrt(r)))}function DX(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function RX(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/e[i],e[i]]);o=o.concat(r.slice(s+1))}return o}function $X(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=e*2+1||i%2===1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function FX(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function OX(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function PX(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var MI=1.7580993408473768,LI=1.0507009873554805;var MX=.3275911,LX=.254829592,zX=-.284496736,BX=1.421413741,VX=-1.453152027,GX=1.061405429;function WX(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function UX(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function HX(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function qX(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function KX(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function jX(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function XX(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function YX(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var zI="->",ZX=/->/g,$_=",",F_="...";function JX(r,e){r=r.replace(/\s/g,"");let t=(r.length-r.replace(ZX,"").length)/zI.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${zI}").`);let[n,o]=r.split(zI);E(n.indexOf(F_)===-1,()=>`The ellipsis notation ("${F_}") is not supported yet.`);let s=n.split($_),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<n.length;++m){let f=n[m];a.indexOf(f)===-1&&f!==$_&&a.push(f)}let u=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let f=0;f<s[m].length;++f)u[m].push(a.indexOf(s[m][f]))}let l=a.length,c=o.length,p=[];for(let m=c;m<l;++m)p.push(m);return{allDims:a,summedDims:p,idDims:u}}function QX(r,e){let t=new Array(r);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;let n=[];for(let o=0;o<r;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function t8(r,e,t){let n=new Array(r);for(let o=0;o<t.length;++o){let s=t[o].shape;for(let i=0;i<e[o].length;++i)n[e[o][i]]===void 0?n[e[o][i]]=s[i]:E(n[e[o][i]]===s[i],()=>`Expected dimension ${n[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function e8(r,e){let t=r,n=[],o=0;r.length===0&&t.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<t.length;++i){let a=t[i],u=n8(e,a);for(let l of u)s.indexOf(l)===-1&&(n[i].push(l),s.push(l))}return{path:t,steps:n}}function r8(r){return r.every((e,t)=>e===t)}function n8(r,e){let t=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function o8(r,e,t=0){let n=[];if(typeof e=="number")E(r.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);E(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let i=e.reduce((a,u)=>u>0?a+u:a);e[s]=r.shape[t]-i}E(r.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}function s8(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function i8(r,e){return`indices(${r}, 0) is invalid: ${e} < 0`}function a8(r,e,t){return`indices(${r}, 0) is invalid: ${e} >= ${t}`}function l8(r,e){return`only one output dimension may be -1, not both ${r} and ${e}`}function u8(r,e){return`size ${r} must be non-negative, not ${e}`}function c8(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function p8(r,e){let t=Kt(r),n=Kt(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${e}`}function m8(r,e){let t=Kt(r),n=Kt(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${e}`}function f8(){return"segment ids must be >= 0"}function d8(){return"segment ids are not increasing"}function h8(r,e){return`Segment id ${r} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function g8(r,e,t){return`Bad: indices[${r}] == ${e} out of range [0, ${t})`}var BI={};de(BI,{collectGatherOpShapeInfo:()=>b8,computeOutShape:()=>y8,segOpComputeOptimalWindowSize:()=>x8});function x8(r,e){let t=!1,n;for(r<=Tg?(n=r,t=!0):n=tp(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=tp(r,n+1);return n}function y8(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function b8(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let p=0;p<n;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let i=r.shape[t],a=[],u=1,l=1,c=1;for(let p=0;p<n;++p)a.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<t;p++)a.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<o;p++)a.push(e.shape[p]);for(let p=t+1;p<s;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:a}}function w8(r){try{return r.map(e=>wp(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function v8(r){return r.map(e=>bp(e))}var Kr={};de(Kr,{nonMaxSuppressionV3Impl:()=>gg,nonMaxSuppressionV4Impl:()=>xg,nonMaxSuppressionV5Impl:()=>yg,whereImpl:()=>cg});u_();var _g={kernelName:Ci,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,vo(Q(t,"float32"),-1))}}};var O_={kernelName:zo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Vt(Q(t,"float32")),o=ge(nt(pt(1),n));return Ut(at(r,o))}}}};var P_={kernelName:Bo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=ge(nt(Vt(Q(t,"float32")),1));return at(r,n)}}}};var M_={kernelName:eo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=r,u=we(t.shape,o);return u.length>0&&(a=mt(a,u)),$(a,t.shape)},b:()=>{let a=r,u=we(n.shape,o);return u.length>0&&(a=mt(a,u)),$(a,n.shape)}}}};var L_={kernelName:Vo,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var z_={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>St(t)}}};var B_={kernelName:Si,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>St(t)}}};var V_={kernelName:Go,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,ge(nt(pt(1),Vt(Q(t,"float32")))))}}};var G_={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=ge(K(pt(1),Vt(Q(t,"float32"))));return at(r,n)}}}};var W_={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=K(Vt(t),Vt(n)),u=R(r,at(n,a)),l=we(t.shape,o);return l.length>0&&(u=mt(u,l)),$(u,t.shape)},b:()=>{let a=K(Vt(t),Vt(n)),u=Ut(R(r,at(t,a))),l=we(n.shape,o);return l.length>0&&(u=mt(u,l)),$(u,n.shape)}}}};var U_={kernelName:Uo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,K(Vt(Q(t,"float32")),1))}}};var H_={kernelName:Ho,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,nt(pt(1),Vt(Q(t,"float32"))))}}};function C8(r,e,t,n,o,s){let i=S(r,"dy","avgPool3dGrad"),a=S(e,"input","avgPool3dGrad"),u=i,l=a,c=!1;a.rank===4&&(c=!0,u=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),E(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Ie("avgPool3dGrad",o,s);let p={dy:u,input:l},m={filterSize:t,strides:n,pad:o,dimRoundingMode:s},f=T.runKernel(_l,p,m);return c?$(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var q_=k({avgPool3dGrad_:C8});var K_={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=t;return{x:()=>q_(r,n,o,s,i,a)}}};function I8(r,e,t,n,o){let s=S(r,"dy","avgPoolGrad"),i=S(e,"input","avgPoolGrad");E(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,u=s,l=!1;i.rank===3&&(l=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),E(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let c={dy:u,input:a},p={filterSize:t,strides:n,pad:o},m=T.runKernel(Tl,c,p);return l?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var j_=k({avgPoolGrad_:I8});var X_={kernelName:Ko,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:i}=t;return{x:()=>j_(r,n,o,s,i)}}};var Y_={kernelName:jo,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:i}=t;return!s&&!i?{a:()=>Gt(r,o,!1,!0),b:()=>Gt(n,r,!0,!1)}:!s&&i?{a:()=>Gt(r,o,!1,!1),b:()=>Gt(r,n,!0,!1)}:s&&!i?{a:()=>Gt(o,r,!1,!0),b:()=>Gt(n,r,!1,!1)}:{a:()=>Gt(o,r,!0,!0),b:()=>Gt(r,n,!0,!0)}}};var Z_={kernelName:ki,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>cu(r,n,o)}}};var J_={kernelName:ck,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,i=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])i[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>mt(r,a,!0)}}};var Q_={kernelName:po,gradFunc:r=>({x:()=>r.clone()})};var tE={kernelName:Xo,gradFunc:r=>({x:()=>St(r)})};var eE={kernelName:mo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>Se(Wr(ln(n,o),Ln(n,s)),r,St(r))}}};var rE={kernelName:Al,inputsToSave:["x"],gradFunc:_g.gradFunc};var nE={kernelName:Ti,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(u=>u.shape),{axis:o}=t,s=pr(o,e[0].shape)[0],i=n.map(u=>u[s]);return dr(r,i,s).map(u=>()=>u)}};var oE={kernelName:Yo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:i,pad:a,dataFormat:u}=t;return E(oo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Dp(n.shape,r,o,i,a,u),filter:()=>Jp(n,r,o.shape,i,a,u)}}};var sE={kernelName:Zo,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:i,dataFormat:a,dimRoundingMode:u}=t;return{dy:()=>vn(r,o,s,i,a,1,u),filter:()=>Jp(r,n,o.shape,s,i,a,u)}}};function S8(r,e,t,n,o){let s=r;r.rank===4&&(s=$(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=e;i.rank===4&&(i=$(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),E(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),E(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),E(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),E(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),E(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);let a={x:s,dy:i},u={strides:n,pad:o,filterShape:t};return T.runKernel(wa,a,u)}var iE=k({conv3DBackpropFilter_:S8});var aE={kernelName:Jo,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;E(oo(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=e;return{x:()=>Rh(i.shape,r,a,o,s),filter:()=>iE(i,r,a.shape,o,s)}}};var lE={kernelName:Qo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Ut(Wp(Q(t,"float32"))),r)}}};var uE={kernelName:ts,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(Up(Q(t,"float32")),r)}}};var cE={kernelName:es,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:i}=t;return{x:()=>{let a=mI([o],n.rank),u=Fp(r,o,s,!i);return a!=null&&(u=Wt(u,a)),u}}}};var pE={kernelName:rs,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=t,a=n??[1,1];E(oo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[u,l]=e;return E(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),E(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),E(Ar(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Ie("depthwiseConv2d",s,i),{x:()=>fg(u.shape,r,l,o,s,a,i),filter:()=>mg(u,r,l.shape,o,s,a,i)}}};var mE={kernelName:ns,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>T.runKernel($l,s,t),filter:()=>T.runKernel(Fl,i,t)}}};var fE={kernelName:ss,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>T.runKernel(Na,n)}}};var dE={kernelName:is,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(je(Ut(Vt(t))),2/Math.sqrt(Math.PI));return{x:()=>R(r,n)}}};var hE={kernelName:as,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,t)}}};var gE={kernelName:_i,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>$(r,t.shape)}}};var xE={kernelName:ls,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,je(t))}}};var yE={kernelName:us,gradFunc:r=>({x:()=>St(r)})};var bE={kernelName:cs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=at(r,Q(n,"float32")),u=we(t.shape,o);return u.length>0?$(mt(a,u),t.shape):a},b:()=>{let a=R(r,Q(t,"float32")),u=we(n.shape,o);u.length>0&&(a=$(mt(a,u),n.shape));let l=Vt(n);return Ut(at(a,Q(l,"float32")))}}}};var wE={kernelName:ps,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,i,a]=e,u=a??pt(1),l=we(s.shape,o.shape),c=[];if(s.rank===1){for(let v=0;v<o.shape.length-1;++v)c.push(o.shape[v]);c.push(1)}let p=nt(o,s),m=R(r,u),f=Bp(K(i,pt(n))),d=R(R(R(f,f),f),pt(-.5));return{x:()=>s.rank===1?$(R(R(r,Rr($(f,[1,1,1,s.shape[0]]),c)),u),o.shape):$(R(R(r,f),u),o.shape),mean:()=>{let v=R(R(f,pt(-1)),m);return s.rank===1&&(v=mt(v,l)),$(v,s.shape)},variance:()=>{let v=R(R(d,p),m);return s.rank===1&&(v=mt(v,l)),$(v,s.shape)},scale:()=>{let v=R(p,f),N=R(r,v);return s.rank===1&&(N=mt(N,l)),$(N,s.shape)},offset:()=>{let v=r;return s.rank===1&&(v=mt(v,l)),$(v,s.shape)}}}};var IE={kernelName:Ei,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s,batchDims:i}=t,a=pr(s,n.shape)[0],u=(l,c,p)=>()=>{let m=l.shape,f=c.size,d=m.slice(0,a),h=d.length,g=m.slice(s,m.length).slice(1),x=g.length,y=vE(0,h),w=vE(h+1,h+1+x),v=CE([d,[f],g]),N=$(p,v),_=$(c,[f]),A=CE([[h],y,w]),D=Wt(N,A),F=Zp(D,_,l.shape[a]),O=yf(A);return F=Wt(F,O),F};if(i===1){let l=n.shape[0],c=n.split(l,0);return{x:()=>Be(c.map((f,d)=>u(f,o.slice(d,1),r.slice(d,1))())).reshape(n.shape),indices:()=>o}}else return{x:u(n,o,r),indices:()=>o}}};function vE(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function CE(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var SE={kernelName:ms,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>St(t),b:()=>St(n)}}};var NE={kernelName:fo,gradFunc:r=>({x:()=>Q(r,"float32")})};var kE={kernelName:fs,gradFunc:r=>({x:()=>St(r)})};var TE={kernelName:ds,gradFunc:r=>({x:()=>St(r)})};var _E={kernelName:hs,gradFunc:r=>({x:()=>St(r)})};var EE={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=ze(n,0);return{x:()=>Se(s,r,R(r,o))}}};var AE={kernelName:ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,K(t,1))}}};var DE={kernelName:xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,Q(t,"float32"))}}};var RE={kernelName:mk,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let i=je(n);return nt(r,R(mt(r,o,!0),i))}}}};function N8(r,e,t,n=5,o=1,s=1,i=.5){let a={x:r,y:e,dy:t},u={depthRadius:n,bias:o,alpha:s,beta:i};return T.runKernel(Pa,a,u)}var $E=k({localResponseNormalizationBackprop_:N8});var FE={kernelName:bs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:i,alpha:a,beta:u}=t;return{x:()=>$E(n,o,r,s,i,a,u)}}};function Eg(r,e,t,n){return e.rank<t.rank&&(e=$(e,wo(e.shape,n))),r.rank<t.rank&&(r=$(r,wo(r.shape,n))),{x:()=>R(r,Q(Qr(t,e),r.dtype))}}var VI={kernelName:ws,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],i=e[1],a=pr(o,s.shape),u=Eg(r,i,s,a);return{x:()=>u.x()}}};var OE={kernelName:vs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Q(ln(t,n),"float32")),b:()=>R(r,Q(ol(t,n),"float32"))}}};function k8(r,e,t,n,o,s,i){let a=S(r,"dy","maxPool3dGrad"),u=S(e,"input","maxPool3dGrad"),l=S(t,"output","maxPool3dGrad"),c=a,p=u,m=l,f=!1;u.rank===4&&(f=!0,c=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=$(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=$(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),E(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),E(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),E(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),Ie("maxPool3dGrad",s,i);let d={dy:c,input:p,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:i},g=T.runKernel(Ml,d,h);return f?$(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var PE=k({maxPool3dGrad_:k8});var ME={kernelName:Ai,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=t;return{x:()=>PE(r,n,o,s,i,a,u)}}};function T8(r,e,t,n,o,s,i){let a=S(r,"dy","maxPoolGrad"),u=S(e,"input","maxPoolGrad"),l=S(t,"output","maxPoolGrad");E(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),E(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),E(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Ie("maxPoolGrad",s,i);let c={dy:a,input:u,output:l},p={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return T.runKernel(Pl,c,p)}var LE=k({maxPoolGrad_:T8});var zE={kernelName:Cs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>LE(r,n,o,s,i,a)}}};var BE={kernelName:Is,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=pr(o,n.shape),a=pI(n.shape,s)[1],u=Kt(a);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=$(r,c);return at(R(p,or(n.shape,"float32")),u)}}}};var VE={kernelName:Ss,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,i]=e,a=pr(o,s.shape),u=Eg(r,i,s,a);return{x:()=>u.x()}}};var GE={kernelName:Ns,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>R(r,Q(Ln(t,n),"float32")),b:()=>R(r,Q(ze(t,n),"float32"))}}};var WE={kernelName:ks,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>vt(r,s,n.shape)}}};var UE={kernelName:Ts,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=we(t.shape,o);return a.length>0?$(mt(r,a),t.shape):r},b:()=>{let a=R(r,Ut(Ji(at(t,n)))),u=we(n.shape,o);return u.length>0?$(mt(a,u),n.shape):a}}}};var HE={kernelName:_s,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=R(r,Q(n,"float32")),u=we(t.shape,o);return u.length>0?$(mt(a,u),t.shape):a},b:()=>{let a=R(r,Q(t,"float32")),u=we(n.shape,o);return u.length>0?$(mt(a,u),n.shape):a}}}};var qE={kernelName:Di,gradFunc:r=>({x:()=>Ut(r)})};var KE={kernelName:Es,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>ke(t.shape,"float32")}}};var jE={kernelName:Ri,gradFunc:r=>({x:()=>St(r)})};var XE={kernelName:$i,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return hr(r,n).map(s=>()=>s)}};var GI={kernelName:As,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(i=>i[0]);return{x:()=>vt(r,s,n.shape)}}};var YE={kernelName:Ds,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,i=n,a=Pt(s.shape,i.shape);return{a:()=>{let c=Q(i,"float32"),p=R(r,R(c,Gr(s,nt(c,pt(1))))),m=we(s.shape,a);return m.length>0&&(p=mt(p,m)),$(p,s.shape)},b:()=>{let c=ze(s,0),p=Se(c,Ir(s),St(s)),m=R(r,R(o,p)),f=we(i.shape,a);return f.length>0&&(m=mt(m,f)),$(m,i.shape)}}}};var ZE={kernelName:Rs,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=ze(t,0);return{x:()=>Se(o,r,R(r,n)),alpha:()=>{let s=Se(o,St(r),R(r,t)),i=we(n.shape,r.shape);return i.length>0&&(s=mt(s,i)),$(s,n.shape)}}}};function _8(r,e,t){let n=r.shape.slice();n[t]=1;let o=$(e,n),s=Qu(r,t,!0,!1),i=Qu(r,t,!0,!0),a=R(s,i);return R(o,a)}function E8(r,e,t){let n=r.shape.length,o=n-t.length,s=I.getAxesPermutation(t,n),i=r;s!=null&&(i=Wt(r,s));let a=i.shape.slice(),l=a.splice(n-t.length,t.length).reduce((m,f)=>m*f,1);a.push(l);let c=i.reshape(a),p=_8(c,e,o);if(p=p.reshape(i.shape),s!=null){let m=I.getUndoAxesPermutation(s);p=Wt(p,m)}return p}var JE={kernelName:$s,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=[];return o==null?s=n.shape.map((i,a)=>a):typeof o=="number"?s=[o]:s=o,{x:()=>E8(n,r,s)}}};var QE={kernelName:os,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=at(r,Q(n,"float32")),u=we(t.shape,o);return u.length>0?$(mt(a,u),t.shape):a},b:()=>{let a=R(r,Q(t,"float32")),u=we(n.shape,o);u.length>0&&(a=$(mt(a,u),n.shape));let l=Vt(n);return Ut(at(a,Q(l,"float32")))}}}};var tA={kernelName:Fs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,Ut(Vt(t)))}}};var eA={kernelName:Ls,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=R(Ln(t,6),vo(t));return{x:()=>R(r,Q(n,"float32"))}}};var rA={kernelName:Os,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,Q(vo(t),"float32"))}}};var nA={kernelName:Fi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>$(r,t.shape)}}};var oA={kernelName:Ms,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>T.runKernel(Wa,o,t)}}};var sA={kernelName:Ps,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>T.runKernel(Ga,o,t)}}};var iA={kernelName:zs,gradFunc:(r,e,t)=>{let{dims:n}=t,o=pr(n,r.shape);return{x:()=>fr(r,o)}}};var aA={kernelName:Bs,gradFunc:r=>({x:()=>St(r)})};var lA={kernelName:Vs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Ut(at(r,R(Gr(t,1.5),2)))}}};var uA={kernelName:Oi,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>Q(St(t),"float32"),t:()=>R(r,Q(t,r.dtype)),e:()=>R(r,Q(lu(t),r.dtype))}}};var cA={kernelName:Gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=ze(t,pt(0)),o=pt(MI),s=pt(LI),i=R(r,s),a=R(R(r,o),je(Q(t,"float32")));return Se(n,i,a)}}}};var pA={kernelName:qs,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(t,nt(pt(1),t)))}}};var mA={kernelName:Hs,gradFunc:r=>({x:()=>St(r)})};var fA={kernelName:Ws,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(ru(Q(t,"float32")),r)}}};var dA={kernelName:Us,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R($p(Q(t,"float32")),r)}}};var hA={kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,i=n.shape,[a,u]=PI(n,o,s),l=[];for(let c=0;c<r.rank;c++)l.push([a[c],i[c]-a[c]-u[c]]);return{x:()=>un(r,l)}}};var gA={kernelName:Ys,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,i=R(r,n);return{logits:()=>nt(i,R(mt(i,[o],s),n))}}};var xA={kernelName:Ks,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,Dr(t))}}};var WI={kernelName:Mi,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>eu(r,n,o)}}};var UI={kernelName:Li,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>re(r,n)}}};var yA={kernelName:js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,R(ge(Q(t,"float32")),2))}}};var bA={kernelName:Wl,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(r,R(Q(t,"float32"),2))}}};var wA={kernelName:Zs,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=pt(2);return{a:()=>R(r,R(o,nt(t,n))),b:()=>R(r,R(o,nt(n,t)))}}};var vA={kernelName:ho,gradFunc:r=>({x:()=>St(r)})};var CA={kernelName:Js,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Pt(t.shape,n.shape);return{a:()=>{let a=r,u=we(t.shape,o);return u.length>0&&(a=mt(a,u)),$(a,t.shape)},b:()=>{let a=r,u=we(n.shape,o);return u.length>0&&(a=mt(a,u)),$(Ut(a),n.shape)}}}};var IA={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;pr(s,n.shape).forEach(l=>{o[l]=1});let a=$(r,o),u=R(a,or(n.shape,"float32"));return{x:()=>u}}};var SA={kernelName:Qs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>at(r,Vt(ru(t)))}}};var NA={kernelName:ti,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>R(nt(pt(1),Vt(t)),r)}}};var kA={kernelName:ro,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let i=St(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=K(i,vt(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)i=K(i,vt(r,[a*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)i=K(i,vt(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let c=0;c<o[3];++c)i=K(i,vt(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var TA={kernelName:no,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=yf(o);return{x:()=>Wt(r,s)}}};var _A={kernelName:zi,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>Be(r,o)}}};var EA={kernelName:jl,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>A8(r,t)}}};function A8(r,e){let t=In(e,St(e)),n=Qi(r,t),o=ln(e,pt(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=Le(o,a+1);o=Wr(o,or(n.shape,"bool"));let i=St(n);return Se(o,n,i)}var AA={kernelName:Bi,gradFunc:r=>({x:()=>St(r)})};var D8=[_g,O_,P_,M_,L_,z_,B_,V_,G_,W_,U_,H_,K_,X_,Y_,Z_,J_,Q_,tE,eE,rE,nE,sE,oE,aE,lE,uE,cE,pE,mE,QE,fE,dE,hE,gE,xE,bE,yE,wE,IE,SE,NE,kE,TE,_E,EE,AE,DE,RE,FE,VI,VI,OE,ME,zE,BE,VE,GE,WE,UE,HE,qE,KE,jE,XE,GI,GI,YE,ZE,JE,tA,eA,rA,nA,oA,sA,iA,aA,lA,uA,cA,pA,mA,fA,dA,hA,gA,xA,WI,WI,UI,UI,yA,wA,bA,vA,CA,IA,SA,NA,kA,TA,_A,EA,AA];for(let r of D8)dk(r);P().prototype.abs=function(){return this.throwIfDisposed(),Ee(this)};P().prototype.acos=function(){return this.throwIfDisposed(),dh(this)};P().prototype.acosh=function(){return this.throwIfDisposed(),hh(this)};P().prototype.add=function(r){return this.throwIfDisposed(),K(this,r)};P().prototype.all=function(r,e){return this.throwIfDisposed(),_p(this,r,e)};P().prototype.any=function(r,e){return this.throwIfDisposed(),Yu(this,r,e)};P().prototype.argMax=function(r){return this.throwIfDisposed(),qi(this,r)};P().prototype.argMin=function(r){return this.throwIfDisposed(),gh(this,r)};P().prototype.asScalar=function(){return this.throwIfDisposed(),E(this.size===1,()=>"The array must have only 1 element."),$(this,[])};P().prototype.asType=function(r){return this.throwIfDisposed(),Q(this,r)};P().prototype.as1D=function(){return this.throwIfDisposed(),$(this,[this.size])};P().prototype.as2D=function(r,e){return this.throwIfDisposed(),$(this,[r,e])};P().prototype.as3D=function(r,e,t){return this.throwIfDisposed(),$(this,[r,e,t])};P().prototype.as4D=function(r,e,t,n){return this.throwIfDisposed(),$(this,[r,e,t,n])};P().prototype.as5D=function(r,e,t,n,o){return this.throwIfDisposed(),$(this,[r,e,t,n,o])};P().prototype.asin=function(){return this.throwIfDisposed(),xh(this)};P().prototype.asinh=function(){return this.throwIfDisposed(),yh(this)};P().prototype.atan=function(){return this.throwIfDisposed(),bh(this)};P().prototype.atan2=function(r){return this.throwIfDisposed(),wh(this,r)};P().prototype.atanh=function(){return this.throwIfDisposed(),vh(this)};P().prototype.avgPool=function(r,e,t,n){return this.throwIfDisposed(),tu(this,r,e,t,n)};P().prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),eu(this,r,e)};P().prototype.batchNorm=function(r,e,t,n,o){return this.throwIfDisposed(),ji(this,r,e,t,n,o)};P().prototype.broadcastTo=function(r){return this.throwIfDisposed(),Xi(this,r)};P().prototype.cast=function(r){return this.throwIfDisposed(),Q(this,r)};P().prototype.ceil=function(){return this.throwIfDisposed(),Th(this)};P().prototype.clipByValue=function(r,e){return this.throwIfDisposed(),vr(this,r,e)};P().prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof zt&&(r=[r]),re([this,...r],e)};P().prototype.conv1d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Ap(this,r,e,t,n,o,s)};P().prototype.conv2dTranspose=function(r,e,t,n,o){return this.throwIfDisposed(),Rp(this,r,e,t,n,o)};P().prototype.conv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),vn(this,r,e,t,n,o,s)};P().prototype.cos=function(){return this.throwIfDisposed(),ru(this)};P().prototype.cosh=function(){return this.throwIfDisposed(),$p(this)};P().prototype.cumprod=function(r,e,t){return this.throwIfDisposed(),Qu(this,r,e,t)};P().prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),Fp(this,r,e,t)};P().prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),Fh(this,r,e)};P().prototype.depthwiseConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Yi(this,r,e,t,n,o,s)};P().prototype.dilation2d=function(r,e,t,n,o){return this.throwIfDisposed(),Oh(this,r,e,t,n,o)};P().prototype.divNoNan=function(r){return this.throwIfDisposed(),Ph(this,r)};P().prototype.div=function(r){return this.throwIfDisposed(),at(this,r)};P().prototype.dot=function(r){return this.throwIfDisposed(),Mh(this,r)};P().prototype.elu=function(){return this.throwIfDisposed(),Zi(this)};P().prototype.equal=function(r){return this.throwIfDisposed(),Qr(this,r)};P().prototype.erf=function(){return this.throwIfDisposed(),Op(this)};P().prototype.euclideanNorm=function(r,e){return this.throwIfDisposed(),Lh(this,r,e)};P().prototype.exp=function(){return this.throwIfDisposed(),je(this)};P().prototype.expandDims=function(r){return this.throwIfDisposed(),Le(this,r)};P().prototype.expm1=function(){return this.throwIfDisposed(),zh(this)};P().prototype.fft=function(){return this.throwIfDisposed(),fu(this)};P().prototype.flatten=function(){return this.throwIfDisposed(),$(this,[this.size])};P().prototype.floor=function(){return this.throwIfDisposed(),Ji(this)};P().prototype.floorDiv=function(r){return this.throwIfDisposed(),Tp(this,r)};P().prototype.gather=function(r,e,t){return this.throwIfDisposed(),Qi(this,r,e,t)};P().prototype.greaterEqual=function(r){return this.throwIfDisposed(),ln(this,r)};P().prototype.greater=function(r){return this.throwIfDisposed(),ze(this,r)};P().prototype.ifft=function(){return this.throwIfDisposed(),il(this)};P().prototype.irfft=function(){return this.throwIfDisposed(),Kp(this)};P().prototype.isFinite=function(){return this.throwIfDisposed(),Bh(this)};P().prototype.isInf=function(){return this.throwIfDisposed(),Vh(this)};P().prototype.isNaN=function(){return this.throwIfDisposed(),Gh(this)};P().prototype.leakyRelu=function(r){return this.throwIfDisposed(),su(this,r)};P().prototype.lessEqual=function(r){return this.throwIfDisposed(),Ln(this,r)};P().prototype.less=function(r){return this.throwIfDisposed(),ol(this,r)};P().prototype.localResponseNormalization=function(r,e,t,n){return this.throwIfDisposed(),Wh(this,r,e,t,n)};P().prototype.logSigmoid=function(){return this.throwIfDisposed(),Uh(this)};P().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Pp(this,r)};P().prototype.logSumExp=function(r,e){return this.throwIfDisposed(),au(this,r,e)};P().prototype.log=function(){return this.throwIfDisposed(),Ir(this)};P().prototype.log1p=function(){return this.throwIfDisposed(),iu(this)};P().prototype.logicalAnd=function(r){return this.throwIfDisposed(),Wr(this,r)};P().prototype.logicalNot=function(){return this.throwIfDisposed(),lu(this)};P().prototype.logicalOr=function(r){return this.throwIfDisposed(),Mp(this,r)};P().prototype.logicalXor=function(r){return this.throwIfDisposed(),Hh(this,r)};P().prototype.matMul=function(r,e,t){return this.throwIfDisposed(),Gt(this,r,e,t)};P().prototype.maxPool=function(r,e,t,n){return this.throwIfDisposed(),uu(this,r,e,t,n)};P().prototype.max=function(r,e){return this.throwIfDisposed(),Cr(this,r,e)};P().prototype.maximum=function(r){return this.throwIfDisposed(),In(this,r)};P().prototype.mean=function(r,e){return this.throwIfDisposed(),Ne(this,r,e)};P().prototype.min=function(r,e){return this.throwIfDisposed(),rl(this,r,e)};P().prototype.minimum=function(r){return this.throwIfDisposed(),io(this,r)};P().prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),jh(this,r,e)};P().prototype.mod=function(r){return this.throwIfDisposed(),Xh(this,r)};P().prototype.mul=function(r){return this.throwIfDisposed(),R(this,r)};P().prototype.neg=function(){return this.throwIfDisposed(),Ut(this)};P().prototype.norm=function(r,e,t){return this.throwIfDisposed(),nl(this,r,e,t)};P().prototype.notEqual=function(r){return this.throwIfDisposed(),ii(this,r)};P().prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),rc(this,r,e,t)};P().prototype.onesLike=function(){return this.throwIfDisposed(),yr(this)};P().prototype.pad=function(r,e){return this.throwIfDisposed(),un(this,r,e)};P().prototype.pool=function(r,e,t,n,o,s){return this.throwIfDisposed(),Yh(this,r,e,t,n,o,s)};P().prototype.pow=function(r){return this.throwIfDisposed(),Gr(this,r)};P().prototype.prelu=function(r){return this.throwIfDisposed(),pu(this,r)};P().prototype.prod=function(r,e){return this.throwIfDisposed(),Zh(this,r,e)};P().prototype.reciprocal=function(){return this.throwIfDisposed(),rg(this)};P().prototype.relu=function(){return this.throwIfDisposed(),$r(this)};P().prototype.relu6=function(){return this.throwIfDisposed(),Lp(this)};P().prototype.reshapeAs=function(r){return this.throwIfDisposed(),$(this,r.shape)};P().prototype.reshape=function(r){return this.throwIfDisposed(),$(this,r)};P().prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),bg(this,r,e,t)};P().prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),wg(this,r,e,t)};P().prototype.reverse=function(r){return this.throwIfDisposed(),fr(this,r)};P().prototype.rfft=function(){return this.throwIfDisposed(),du(this)};P().prototype.round=function(){return this.throwIfDisposed(),zp(this)};P().prototype.rsqrt=function(){return this.throwIfDisposed(),Bp(this)};P().prototype.selu=function(){return this.throwIfDisposed(),Vp(this)};P().prototype.separableConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Gp(this,r,e,t,n,o,s)};P().prototype.sigmoid=function(){return this.throwIfDisposed(),Dr(this)};P().prototype.sign=function(){return this.throwIfDisposed(),ng(this)};P().prototype.sin=function(){return this.throwIfDisposed(),Wp(this)};P().prototype.sinh=function(){return this.throwIfDisposed(),Up(this)};P().prototype.slice=function(r,e){return this.throwIfDisposed(),vt(this,r,e)};P().prototype.softmax=function(r){return this.throwIfDisposed(),mu(this,r)};P().prototype.softplus=function(){return this.throwIfDisposed(),si(this)};P().prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),cu(this,r,e)};P().prototype.split=function(r,e){return this.throwIfDisposed(),dr(this,r,e)};P().prototype.sqrt=function(){return this.throwIfDisposed(),ge(this)};P().prototype.square=function(){return this.throwIfDisposed(),Vt(this)};P().prototype.squaredDifference=function(r){return this.throwIfDisposed(),jp(this,r)};P().prototype.squeeze=function(r){return this.throwIfDisposed(),Fr(this,r)};P().prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof zt?[this,r]:[this,...r];return Be(t,e)};P().prototype.step=function(r){return this.throwIfDisposed(),vo(this,r)};P().prototype.stridedSlice=function(r,e,t,n,o,s,i,a){return this.throwIfDisposed(),og(this,r,e,t,n,o,s,i,a)};P().prototype.sub=function(r){return this.throwIfDisposed(),nt(this,r)};P().prototype.sum=function(r,e){return this.throwIfDisposed(),mt(this,r,e)};P().prototype.tan=function(){return this.throwIfDisposed(),sg(this)};P().prototype.tanh=function(){return this.throwIfDisposed(),oi(this)};P().prototype.tile=function(r){return this.throwIfDisposed(),Rr(this,r)};P().prototype.toBool=function(){return this.throwIfDisposed(),Q(this,"bool")};P().prototype.toFloat=function(){return this.throwIfDisposed(),Q(this,"float32")};P().prototype.toInt=function(){return this.throwIfDisposed(),Q(this,"int32")};P().prototype.topk=function(r,e){return this.throwIfDisposed(),ag(this,r,e)};P().prototype.transpose=function(r){return this.throwIfDisposed(),Wt(this,r)};P().prototype.unique=function(r){return this.throwIfDisposed(),lg(this,r)};P().prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),Zp(this,r,e)};P().prototype.unstack=function(r){return this.throwIfDisposed(),hr(this,r)};P().prototype.where=function(r,e){return this.throwIfDisposed(),Se(r,this,e)};P().prototype.zerosLike=function(){return this.throwIfDisposed(),St(this)};var ao=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},cn=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},L=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},_t=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}},Ag=class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}};var Tf=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function No(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function lo(r,e){if(!r)throw new Ag(e)}function qI(r,e){let t=0;for(let n of r)n===e&&t++;return t}function Sr(r){return r.length===1?r[0]:r}function le(r){return Array.isArray(r)?r:[r]}function ko(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function ll(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var So={};function sm(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function HI(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>HI(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:HI(n))}}}function ea(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in t)i=t[s];else if(s in So)i=So[s];else if(i=e[s],i==null)throw new L(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new L(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,u;if(i in t?[a,u]=t[i]:i in So?[a,u]=So.className:i in e&&([a,u]=e[i]),a==null)throw new L(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let f of Object.keys(So))l[f]=So[f];for(let f of Object.keys(t))l[f]=t[f];let c=s.config;c.customObjects=l;let p=Object.assign({},So);for(let f of Object.keys(t))So[f]=t[f];HI(s.config);let m=u(a,s.config,t,o);return So=Object.assign({},p),m}else{let l=Object.assign({},So);for(let p of Object.keys(t))So[p]=t[p];let c=new a(s.config);return So=Object.assign({},l),c}}}function R8(r,e){return r<e?-1:r>e?1:0}function _f(r,e){return-1*R8(r,e)}function To(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function DA(r){if(r==null)throw new L(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function ra(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new L(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function Dg(r,e,t=0,n=1/0){return lo(t>=0),lo(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function tr(r,e){Array.isArray(r)?(b.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>tr(t,`element ${n+1} of ${e}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${RA(r)}.`)}function RA(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>RA(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function $A(r,e,t){let n=t!=null?t():b.now(),o;return(...i)=>{let a=t!=null?t():b.now();return a-n<e||(n=a,o=r(...i)),o}}function Rg(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var $8=0;function Fg(){return $8++}var $g={};function yu(r=""){return r in $g||($g[r]=0),$g[r]+=1,r+$g[r].toString()}var FA=["channelsFirst","channelsLast"],OA=["nearest","bilinear"],PA=["valid","same","causal"],MA=["max","avg"],LA=["sum","mul","concat","ave"];var im=new Map;function Fe(r){ra(FA,"DataFormat",r)}function BA(r){ra(OA,"InterpolationFormat",r)}function pn(r){ra(PA,"PaddingMode",r)}function KI(r){ra(MA,"PoolMode",r)}var Ef=[],zA="/";function ui(r,e){Ef.push(r);try{let t=e();return Ef.pop(),t}catch(t){throw Ef.pop(),t}}function F8(){return Ef.length===0?"":Ef.join(zA)+zA}function Og(r){if(!VA(r))throw new Error("Not a valid tensor name: '"+r+"'");return F8()+r}function Pg(r){if(!VA(r))throw new Error("Not a valid tensor name: '"+r+"'");im.has(r)||im.set(r,0);let e=im.get(r);if(im.set(r,im.get(r)+1),e>0){let t=`${r}_${e}`;return im.set(t,1),t}else return r}var O8=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function VA(r){return!!r.match(O8)}function GA(r){return r===parseInt(r.toString(),10)}function _o(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function fc(r){if(r.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n<e&&(e=n)}return e}function ci(r){if(r.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){let n=r[t];n>e&&(e=n)}return e}function mn(r,e){if(e<r)throw new L(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}var jI;function lr(){return jI==null&&(jI=ih().epsilon()),jI}function fn(){return"channelsLast"}function tn(r,e){return Q(r,e)}function cl(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),$(r,t)}function WA(r,e){return B(()=>{if(r.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=cl(r,1);return Lg(t,[1,e,1])})}function UA(r){let e=[_o(r.shape)];return $(r,e)}function HA(r){if(r.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],_o(r.shape,1)];return $(r,e)}function ul(r,e,t){return B(()=>{switch(r.rank){case 1:return Hp(r,e,t);case 2:return vf(r,[e,0],[t,r.shape[1]]);case 3:return qp(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return ic(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return vt(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return vt(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function XI(r,e,t){return B(()=>{switch(r.rank){case 1:return Hp(r,e,t);case 2:return vf(r,[0,e],[r.shape[0],t]);case 3:return qp(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return ic(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Af(r,e,t,n){return B(()=>{switch(r.rank){case 1:return Hp(r,e,t);case 2:switch(n){case 1:return ul(r,e,t);case 2:return XI(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return ul(r,e,t);case 2:return qp(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return XI(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return ul(r,e,t);case 2:return ic(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return ic(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return XI(r,e,t);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function am(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),re(r,e)}function ZI(r,e){switch(r.rank){case 1:return _h([r,e]);case 2:return Ju([r,e],0);case 3:return Eh([r,e],0);case 4:return Ah([r,e],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Lg(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new L(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return Rr(r,e)}function lm(r,e=0,t=1,n,o){return sc(r,e,t,n,o)}function Eo(r,e,t,n){if(r.rank<2||e.rank<2)throw new _t(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new _t(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2)return gu.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?YI(r.rank,n,fn()):null,activation:t});{let o=r.shape.slice(),s=o.pop();r=$(r,[-1,s]);let i=e.shape.slice(),a=i.pop(),u=i.pop(),l=[...i,a],c=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=$(Wt(e,c),[u,-1]);let p=[...o,...l];return $(gu.matMul({a:r,b:e,transposeA:!1,transposeB:!1,bias:n?YI(r.rank,n,fn()):null,activation:t}),p)}}function zg(r,e,t){return B(()=>(Array.isArray(e)?e=Te(e,"int32"):e=Q(e,"int32"),Qi(r,e,t)))}function dc(r){return R(r,r)}function YI(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new L(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1,1]):$(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1,1]):$(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,1,n[0]]):$(e,[1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?$(e,[1,n[0],1]):$(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?$(e,[1,1,n[0]]):$(e,[1].concat(n))}else if(r<3)return e;throw new L(`Unsupported input rank by biasAdd: ${e.rank}`)}function dn(r,e,t){return B(()=>(t==null&&(t=fn()),Fe(t),K(r,YI(r.rank,e,t))))}function qA(r,e=1){if(e!==1)throw new _t(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Zi(r)}function KA(r){return B(()=>at(r,K(Ee(r),1)))}function Bg(r,e,t,n){return B(()=>CI(r,e,t,n))}function jA(r){return B(()=>{let e=K(.5,R(.2,r));return vr(e,0,1)})}function bu(r,e,t=!1){return t?r():e()}var XA=["fanIn","fanOut","fanAvg"],YA=["normal","uniform","truncatedNormal"];function P8(r){ra(XA,"FanMode",r)}function M8(r){ra(YA,"Distribution",r)}var hn=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},QA=(()=>{class r extends hn{apply(t,n){return ke(t,n)}}return r.className="Zeros",r})();J.registerClass(QA);var Vg=(()=>{class r extends hn{apply(t,n){return or(t,n)}}return r.className="Ones",r})();J.registerClass(Vg);var t2=(()=>{class r extends hn{constructor(t){if(super(),typeof t!="object")throw new L(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new L(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return B(()=>R(pt(this.value),or(t,n)))}getConfig(){return{value:this.value}}}return r.className="Constant",r})();J.registerClass(t2);var e2=(()=>{class r extends hn{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return zn(t,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return r.className="RandomUniform",r})();J.registerClass(e2);var r2=(()=>{class r extends hn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _t(`randomNormal does not support dType ${n}.`);return lm(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="RandomNormal",r})();J.registerClass(r2);var n2=(()=>{class r extends hn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _t(`truncatedNormal does not support dType ${n}.`);return Yp(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="TruncatedNormal",r})();J.registerClass(n2);var o2=(()=>{class r extends hn{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,n){return B(()=>{if(t.length!==2||t[0]!==t[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,tc(t[0]))})}getConfig(){return{gain:this.gain}}}return r.className="Identity",r})();J.registerClass(o2);function L8(r,e="channelsLast"){let t,n;if(Fe(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=_o(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=_o(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=_o(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var Bn=(()=>{class r extends hn{constructor(t){if(super(),t.scale<0)throw new L(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,P8(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,M8(this.distribution),this.seed=t.seed}apply(t,n){let o=L8(t),s=o[0],i=o[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(s+i)/2),this.distribution==="normal"){let u=Math.sqrt(a);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new _t(`${this.getClassName()} does not support dType ${n}.`);return Yp(t,0,u,n,this.seed)}else{let u=Math.sqrt(3*a);return zn(t,-u,u,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return r.className="VarianceScaling",r})();J.registerClass(Bn);var JI=(()=>{class r extends Bn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="GlorotUniform",r})();J.registerClass(JI);var QI=(()=>{class r extends Bn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="GlorotNormal",r})();J.registerClass(QI);var tS=(()=>{class r extends Bn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="HeNormal",r})();J.registerClass(tS);var eS=(()=>{class r extends Bn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="HeUniform",r})();J.registerClass(eS);var rS=(()=>{class r extends Bn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="LeCunNormal",r})();J.registerClass(rS);var nS=(()=>{class r extends Bn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Bn.className}}return r.className="LeCunUniform",r})();J.registerClass(nS);var s2=(()=>{class r extends hn{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,n){return B(()=>{if(t.length<2)throw new _t("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;let o=b.sizeFromShape(t.slice(0,-1)),s=t[t.length-1],i=o*s;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);let a=[Math.max(s,o),Math.min(s,o)],u=lm(a,0,1,n,this.seed),l=NI.qr(u,!1),c=l[0],m=l[1].flatten().stridedSlice([0],[Math.min(s,o)*Math.min(s,o)],[Math.min(s,o)+1]);return c=R(c,m.sign()),o<s&&(c=c.transpose()),R(pt(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return r.className="Orthogonal",r})();J.registerClass(s2);var ZA={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function JA(r,e={}){return ea(r,J.SerializationMap.getMap().classNameMap,e,"initializer")}function _e(r){return sm(r)}function xe(r){if(typeof r=="string"){let e=r in ZA?ZA[r]:r;if(e==="GlorotNormal")return new QI;if(e==="GlorotUniform")return new JI;if(e==="HeNormal")return new tS;if(e==="HeUniform")return new eS;if(e==="LeCunNormal")return new rS;if(e==="LeCunUniform")return new nS;{let t={};return t.className=e,t.config={},JA(t)}}else return r instanceof hn?r:JA(r)}function Gg(r){return Array.isArray(r)&&Array.isArray(r[0])}function um(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Nt(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new L(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function Bt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new L(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function cm(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var a2="Variable",Df=class{constructor(e,t="float32",n=a2,o=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Fg(),n=n??a2,this.originalName=Og(n),this.name=Pg(this.originalName),this.trainable_=o,this.constraint=s,this.val=ug(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),B8(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function B8(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function Rf(r){return r.map(e=>e.read())}function pm(r){r.forEach(e=>{e[0].write(e[1])})}var ve=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},en=class{constructor(e,t,n,o,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=a,this.id=Fg(),i!=null&&(this.originalName=Og(i),this.name=Pg(this.originalName)),this.rank=t.length}},V8=0,pl=class{constructor(e,t){this.callArgs=t,this.id=V8++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},G8=0,Et=class extends J.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=G8++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ko(n)+"_"+yu(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new cn(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new L(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ao(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ao(`Layer ${this.name} is not connected, no input to return.`);return Sr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ao(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ao(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=le(e);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=le(this.inputSpec);if(t.length!==n.length)throw new L(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let o=0;o<t.length;o++){let s=t[o],i=n[o];if(i==null)continue;let a=s.rank;if(i.ndim!=null&&a!==i.ndim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&s.dtype!==i.dtype)throw new L(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${s.dtype}.`);if(i.axes){let u=s.shape;for(let l in i.axes){let c=Number(l),p=i.axes[l],m=c>=0?u[c]:u[u.length+c];if(p!=null&&[p,null].indexOf(m)===-1)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${p} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){let l=i.shape[u],c=s.shape[u];if(l!=null&&c!=null&&l!==c)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=le(e),o=H8(e),s=q8(e);if(o===s)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return ui(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let a of le(e))i.push(a.shape);this.build(Sr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);let a=le(i),u=[];for(let l of a)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(i=Sr(u),this.activityRegularizer!=null)throw new _t("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=W8(e),a=this.computeOutputShape(i),u,l=U8(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((c,p)=>new en(l,c,this,le(e),t,this.name,p)):u=new en(l,a,this,le(e),t,this.name),this.addInboundNode(e,u,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new _t("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ao(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ao(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return cm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Rf(e?this.trainableWeights:this.weights)}setWeights(e){B(()=>{let t=this.weights;if(t.length!==e.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=Rf(t);for(let s=0;s<o.length;++s){let i=o[s],a=t[s],u=e[s];if(!b.arraysEqual(i.shape,u.shape))throw new L(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}pm(n)})}addWeight(e,t,n,o,s,i,a,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new L(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():xe("zeros"));let l=o.apply(t,n),c=new Df(l,n,e,i,a);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=le(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let o=this.computeMask(e,n),s=le(t),i=le(o);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(e,t,n,o,s,i,a=null){let u=le(e);t=le(t),n=le(n),o=le(o),s=um(s),i=um(i);let l=[],c=[],p=[];for(let m of u)l.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new pl({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:p,inputTensors:u,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function W8(r){r=le(r);let e=[];for(let t of r)e.push(t.shape);return Sr(e)}function U8(r){return"float32"}function oS(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],u=n.nodeIndices[s],l=oS(i,a,u);for(let c of l)o.indexOf(c)===-1&&o.push(c)}return o}}}function H8(r){let e=!0;for(let t of le(r))if(!(t instanceof en)){e=!1;break}return e}function q8(r){let e=!0;for(let t of le(r))if(t instanceof en){e=!1;break}return e}var hc=(()=>{class r extends Et{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:yu("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=t.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new en(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return r.className="InputLayer",r})();J.registerClass(hc);function sS(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new hc({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function K8(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return Q(e,r.dtype)}catch{throw new L(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var na=class r{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof r)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=K8(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new L(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof en){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof en){if(this.id2Value[e.id]==null)throw new L(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new L(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&$t(this.id2Mask)}},Wg=new Tf,Ug=new Tf;function u2(r){Wg?.setMaxEntries(r),Ug?.setMaxEntries(r)}function gc(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),i=s?r:[r],a=i.map(d=>d.name),u=[],l=e.names();for(let d of a)l.indexOf(d)!==-1?u.push(e.getValue(d)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let c=a.join(",")+"|"+e.names().sort().join(","),p=Wg.get(c),m;if(p==null){let d=j8(i,e);p=d.sorted,m=d.recipientCounts,Wg.put(c,p),Ug.put(c,m)}m={},o||Object.assign(m,Ug.get(c));let f=new na(e);for(let d=0;d<p.length;++d){if(n!=null){let F=ff().numTensors;F>n.maxNumTensors&&(n.maxNumTensors=F),F<n.minNumTensors&&(n.minNumTensors=F)}let h=p[d],g=h.sourceLayer;if(g instanceof hc)continue;let x=[],y=[],w=[],v=!1;for(let F of h.inputs){let O=f.getValue(F),V=f.getMask(F);x.push(O),y.push(V),V!=null&&(v=!0),o||(m[F.name]--,m[F.name]===0&&!e.hasKey(F)&&a.indexOf(F.name)===-1&&!O.isDisposed&&F.sourceLayer.stateful!==!0&&w.push(O))}v&&(t=t||{},t.mask=y[0]);let N=le(g.apply(x,t)),_=null;g.supportsMasking&&(_=g.computeMask(x,y));let A=Y8(h),D=Array.isArray(A)?A:[A];for(let F=0;F<D.length;++F){f.hasKey(D[F])||f.add(D[F],N[F],Array.isArray(_)?_[0]:_);let O=a.indexOf(D[F].name);O!==-1&&(u[O]=N[F])}o||$t(w)}return f.disposeMasks(),s?u:u[0]}function j8(r,e){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=l2(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=l2(s,e);for(let u of i)o.has(u.name)||(t.push(u),o.add(u.name));for(let u in a)n[u]==null&&(n[u]=new Set),a[u].forEach(l=>n[u].add(l))}}return{sorted:t,recipientCounts:X8(n)}}function X8(r){let e={};for(let t in r)e[t]=r[t].size;return e}function l2(r,e){let t=new Set,n=[],o={};for(let a of e.names())t.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(t.has(a.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(a.inputs.length===0||u)s.pop(),n.push(a),t.add(a.name),u&&i.pop();else{i.push(s.length-1);for(let l of a.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(a.name),!t.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function Y8(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var Z8=z();Z8.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,u2);function iS(r,e){return B(()=>ge(mt(R(r,r),e,!0)))}var xc=class extends J.Serializable{getConfig(){return{}}},m2=(()=>{class r extends xc{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>{let n=iS(t,this.axis),o=vr(n,0,this.maxValue);return R(t,at(o,K(lr(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return r.className="MaxNorm",r})();J.registerClass(m2);var f2=(()=>{class r extends xc{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>at(t,K(lr(),iS(t,this.axis))))}getConfig(){return{axis:this.axis}}}return r.className="UnitNorm",r})();J.registerClass(f2);var d2=(()=>{class r extends xc{apply(t){return $r(t)}}return r.className="NonNeg",r})();J.registerClass(d2);var h2=(()=>{class r extends xc{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>{let n=iS(t,this.axis),o=K(R(this.rate,vr(n,this.minValue,this.maxValue)),R(1-this.rate,n));return R(t,at(o,K(lr(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return r.className="MinMaxNorm",r})();J.registerClass(h2);var c2={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ge(r){return sm(r)}function p2(r,e={}){return ea(r,J.SerializationMap.getMap().classNameMap,e,"constraint")}function We(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in c2?c2[r]:r,config:{}};return p2(t)}else return r instanceof xc?r:p2(r)}async function ml(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;e.push(i.data()),t.push(o),n.push(i)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];$t(n)}}function Hg(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var t9=125,wu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},qg=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},aS=class extends wu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=B(()=>K(this.totals[o],R(s,n)));this.totals[o]=a,i?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:B(()=>{let o=R(at(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Re(t[n])}))}},Kg=class extends wu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let u=i[a];e.push(u.data()),t.push(s),n.push(a)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},jg=class extends wu{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kf,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=t9),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=$A(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await ml(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ml(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ml(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ml(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ml(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ml(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ml(e),await this.trainEnd(e))}};function Xg(r,e){return r==null&&(r={}),r instanceof wu?[r]:Array.isArray(r)&&r[0]instanceof wu?r:le(r).map(n=>new jg(n,e))}var g2=(()=>{class r{constructor(){}static registerCallbackConstructor(t,n){b.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),r.checkForDuplicate(n),r.constructors[t]==null&&(r.constructors[t]=[]),r.constructors[t].push(n)}static checkForDuplicate(t){for(let n in r.constructors)r.constructors[+n].forEach(s=>{if(s===t)throw new L("Duplicate callback constructor.")})}static clear(){r.constructors={}}static createCallbacks(t){let n=[];for(let o in r.constructors){let s=+o;t>=s&&n.push(...r.constructors[s])}return n.map(o=>new o)}}return r.constructors={},r})();function Yg(r,e,t,n,o,s,i,a,u){let l=new Kg,c=[new aS,...g2.createCallbacks(e)];r!=null&&c.push(...r),c.push(l);let p=new qg(c);return p.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:e,doValidation:a,metrics:u}),{callbackList:p,history:l}}function Vn(r,e={},t=!1){return ea(r,J.SerializationMap.getMap().classNameMap,e,"layer",t)}function $f(r,e){return B(()=>{r.dtype!=="float32"&&(r=Q(r,"float32"));let t=mt(dc(r),e,!0),n=bo(t.shape,lr()),o=ge(In(t,n));return at(r,o)})}function yc(r,e){return B(()=>Ne(dc(nt(e,r)),-1))}function Of(r,e){return B(()=>Ne(Ee(nt(e,r)),-1))}function Pf(r,e){return B(()=>{let t=nt(r,e),n=vr(Ee(r),lr(),Number.MAX_VALUE),o=Ee(at(t,n));return R(100,Ne(o,-1))})}function e9(r,e){return B(()=>{let t=vr(e,lr(),Number.MAX_VALUE),n=Ir(K(1,t)),o=vr(r,lr(),Number.MAX_VALUE),s=Ir(K(1,o));return Ne(dc(nt(n,s)),-1)})}function r9(r,e){return B(()=>{let t=In(0,nt(1,R(r,e)));return Ne(dc(t),-1)})}function n9(r,e){return B(()=>{let t=In(0,nt(1,R(r,e)));return Ne(t,-1)})}function o9(r,e){return B(()=>{let t=mt(R(r,e),-1),n=Cr(R(nt(1,r),e),-1);return In(0,K(1,nt(n,t)))})}function s9(r,e){return B(()=>{let t=Math.log(2),n=nt(e,r),o=nt(K(n,si(R(-2,n))),t);return Ne(o,-1)})}function bc(r,e,t=!1){return B(()=>{if(t)e=mu(e);else{let n=mt(e,e.shape.length-1,!0);e=at(e,n)}return e=vr(e,lr(),1-lr()),Ut(mt(R(Q(r,"float32"),Ir(e)),e.shape.length-1))})}function mm(r,e,t=!1){return B(()=>{let n=Q(Ji(UA(r)),"int32");e=vr(e,lr(),1-lr());let o=e.shape,s=$(rc(n,o[o.length-1]),o);return bc(s,e,t)})}function i9(r,e){if(!b.arraysEqual(r.shape,e.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return B(()=>{let t=$r(e),n=Ut(Ee(e));return K(nt(t,R(e,r)),iu(je(n)))})}function fm(r,e){return B(()=>{let t;return t=vr(e,lr(),1-lr()),t=Ir(at(t,nt(1,t))),Ne(i9(r,t),-1)})}function a9(r,e){return B(()=>{let t=vr(r,lr(),1),n=vr(e,lr(),1);return mt(R(r,Ir(at(t,n))),-1)})}function l9(r,e){return B(()=>{let t=Ir(K(lr(),e));return Ne(nt(e,R(r,t)),-1)})}function Zg(r,e){return B(()=>{let t=$f(r,-1),n=$f(e,-1),o=R(t,n);return Ut(mt(o,-1))})}var Ff={meanSquaredError:yc,meanAbsoluteError:Of,meanAbsolutePercentageError:Pf,meanSquaredLogarithmicError:e9,squaredHinge:r9,hinge:n9,categoricalHinge:o9,logcosh:s9,categoricalCrossentropy:bc,sparseCategoricalCrossentropy:mm,binaryCrossentropy:fm,kullbackLeiblerDivergence:a9,poisson:l9,cosineProximity:Zg};function Jg(r){if(typeof r=="string"){if(r in Ff)return Ff[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(e)}else return r}function tx(r,e){return B(()=>{let t=R(.5,yr(e)),n=tn(ze(e,t),r.dtype);return Ne(Qr(r,n),-1)})}function ex(r,e){return B(()=>tn(Qr(qi(r,-1),qi(e,-1)),"float32"))}function u9(r,e){return B(()=>Q(mt(Wr(Qr(r,1),Qr(e,1))),"float32"))}function c9(r,e){return B(()=>Q(mt(Wr(Qr(r,0),Qr(e,1))),"float32"))}function y2(r,e){return B(()=>{let t=u9(r,e),n=c9(r,e),o=K(t,n);return Q(Se(ze(o,0),at(t,o),0),"float32")})}function lS(r,e){return fm(r,e)}function uS(r,e){return r.rank===e.rank&&(r=Fr(r,[r.rank-1])),e=qi(e,-1),e.dtype!==r.dtype&&(e=Q(e,r.dtype)),Q(Qr(r,e),"float32")}var p9=yc,m9=yc,f9=Of,d9=Of,h9=Pf,g9=Pf,rx=bc,x9=Zg,cS=mm,Qg={binaryAccuracy:tx,categoricalAccuracy:ex,precision:y2,categoricalCrossentropy:rx,sparseCategoricalCrossentropy:cS,mse:p9,MSE:m9,mae:f9,MAE:d9,mape:h9,MAPE:g9,cosine:x9};function b2(r){if(typeof r=="string"&&r in Qg)return Qg[r];if(typeof r!="string"&&r!=null)return r;throw new L(`Unknown metric ${r}`)}function Mf(r){if(lo(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(Ff))if(Ff[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Qg))if(Qg[t]===r){e=t;break}return e!==void 0?e:r.name}}function v2(r){let e={Adagrad:()=>mc.adagrad(.01),Adadelta:()=>mc.adadelta(1,.95,lr()),Adam:()=>mc.adam(.001,.9,.999,lr()),Adamax:()=>mc.adamax(.002,.9,.999,lr(),0),RMSProp:()=>mc.rmsprop(.001,.9,0,lr()),SGD:()=>mc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new L(`Unknown Optimizer ${r}`)}function mS(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!pS(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function pS(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!pS(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!pS(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function C2(r,e,t,n=console.log){let o=w9(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!o){s.push("Receives inputs"),i=[];for(let c in r.nodesByDepth)i.push(...r.nodesByDepth[c])}n("_".repeat(e)),nx(s,t,n),n("=".repeat(e));let a=r.layers;for(let c=0;c<a.length;++c)o?v9(a[c],t,n):C9(a[c],t,i,n),n((c===a.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let u=b9(r),l=cm(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(e))}function b9(r){let e;return r.collectedTrainableWeights!=null?e=cm(r.collectedTrainableWeights):e=cm(r.trainableWeights),e}function w9(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function nx(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function v9(r,e,t){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,o,n,r.countParams().toString()];nx(a,e,t)}function C9(r,e,t,n){let o,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let i=[];for(let p of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,d=p.nodeIndices[m],h=p.tensorIndices[m];i.push(`${f}[${d}][${h}]`)}let a=r.name,u=r.getClassName(),l=i.length===0?"":i[0],c=[`${a} (${u})`,s,o,r.countParams().toString(),l];nx(c,e,n);for(let p=1;p<i.length;++p)nx(["","","","",i[p]],e,n)}function I2(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function Lf(r,e){if(r===null)return null;if(typeof r=="string")return ll(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];I2(e,o,s)?t.push(s):t.push(Lf(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=ll(n);t[s]=Lf(o,s)}}return t}}function ox(r,e){if(r==null)return null;if(typeof r=="string")return ko(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];I2(e,o,s)?t.push(s):t.push(ox(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=ko(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=ox(o,n)}return t}}var dm="4.22.0";var I9=r=>{let e=Object.keys(r);if(e.length===0)return!1;let t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))},sx=class r extends Et{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=yu(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],To(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);To(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let w=y.sourceLayer,v=y.nodeIndex,N=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(N)}for(let y of this.inputs){let w=y.sourceLayer,v=y.nodeIndex,N=y.tensorIndex;lo(v===0,"input layer has >1 nodes"),lo(N===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(N)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let w=this.inputLayers[y];if(!(w instanceof hc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},o={},s={},i={},a=[],u=(y,w,v,N,_,A)=>{(N==null||_==null||A==null)&&(N=y.sourceLayer,_=y.nodeIndex,A=y.tensorIndex);let D=N.inboundNodes[_];if(v.indexOf(D)!==-1)throw new cn(`The tensor ${y.name} at layer "${N.name}" is part of a cycle.`);if(w.indexOf(D)!==-1)return;this.containerNodes.add(r.nodeKey(N,_)),N.id in i||(i[N.id]=Object.keys(i).length),v.indexOf(D)===-1&&v.push(D);let F=D.inboundLayers.length;for(let O=0;O<F;O++){let V=D.inputTensors[O],G=D.inboundLayers[O],W=D.nodeIndices[O],H=D.tensorIndices[O];u(V,w,v,G,W,H)}for(w.push(D);v.indexOf(D)>=0;)v.splice(v.indexOf(D),1);a.push(D)},l=[],c=[];for(let y of this.outputs)u(y,l,c);let p=a.slice().reverse();for(let y of p){n[y.id]=y,y.id in t||(t[y.id]=0);let w=t[y.id],v=o[y.outboundLayer.id]==null?0:o[y.outboundLayer.id];w=Math.max(w,v),o[y.outboundLayer.id]=w,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=w;for(let N=0;N<y.inboundLayers.length;N++){let _=y.inboundLayers[N],A=y.nodeIndices[N],D=_.inboundNodes[A],F=t[D.id]==null?0:t[D.id];t[D.id]=Math.max(w+1,F),n[D.id]=D}}let m={};for(let y in t){let w=t[y];w in m||(m[w]=[]),m[w].push(n[y])}let f={};for(let y in o){let w=o[y];w in f||(f[w]=[]),f[w].push(s[y])}let d=Object.keys(f).map(y=>parseInt(y,10)).sort(_f);this.layers=[];for(let y of d){let w=f[y];w.sort((v,N)=>{let _=i[v.id],A=i[N.id];return _<A?-1:_>A?1:0});for(let v of w)v instanceof r&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=f,d=Object.keys(m).map(y=>parseInt(y,10)).sort(_f);let h=this.inputs.slice(),g=[];for(let y of d)for(let w of m[y]){let v=w.outboundLayer;if(v!=null){for(let N of w.inputTensors)if(h.indexOf(N)===-1)throw new cn(`Graph disconnected: cannot obtain value for tensor ${N} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(let N of w.outputTensors)h.push(N);g.push(v.name)}}this.nodesByDepth=m;let x=this.layers.map(y=>y.name);for(let y of x){let w=x.filter(v=>v===y).length;if(w!==1)throw new cn(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0,s=I9(e);s&&this.parseWeights(e);for(let a of this.layers)for(let[u,l]of a.weights.entries()){let c=s?`${l.name.split("/").slice(0,-1).join("/")+"/"}${u}`:l.originalName;if(n[c]!=null)throw new L(`Duplicate weight name: ${c}`);n[c]=l,o++}let i=[];for(let a in e){let u=a;if(n[a]==null){let l=a.split("/");u=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[u]!=null)i.push([n[u],e[a]]);else if(t)throw new L(`Provided weight data has no target variable: ${a}`);delete n[u]}if(t){let a=[];for(let u in n)a.push(u);if(a.length>0)throw new L(`${a.length} of ${o} weights are not set: ${a}`)}pm(i)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),o=["vars","layer_checkpoint_dependencies"],s=n.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!o.includes(i)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${dm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=ox(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return B(()=>{e=le(e);let n=new na;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return gc(this.outputs,n,t)})}computeMask(e,t){return B(()=>{e=le(e);let n;return t==null?n=No(null,e.length):n=le(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=um(e);if(t.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<t.length;a++){let u=this.inputLayers[a],l=t[a],c=u.name+"_0_0";n[c]=l}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(_f);if(o.length>1)for(let a of o){let u=this.nodesByDepth[a];for(let l of u){let c=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],x=l.nodeIndices[h],y=l.tensorIndices[h],w=`${g.name}_${x}_${y}`,v=n[w];p.push(v)}let m=c.computeOutputShape(Sr(p)),f=um(m),d=c.inboundNodes.indexOf(l);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],p=`${u.name}_${l}_${c}`;i.push(p)}for(let a=0;a<i.length;a++){let u=i[a];lo(u in n),s.push(n[u])}return Sr(s)}runInternalGraph(e,t){t==null&&(t=No(null,e.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],c=e[u],p=t[u];n[l.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(_f);for(let u of o){let l=this.nodesByDepth[u];for(let c of l){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,x,y,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[v,N]=d[0];h.mask==null&&(h.mask=N),y=le(p.call(v,h)),w=le(p.computeMask(v,N)),g=[v],x=[N]}else g=d.map(v=>v[0]),x=d.map(v=>v[1]),h.mask==null&&(h.mask=x),y=le(p.call(g,h)),w=le(p.computeMask(g,x));if(p.activityRegularizer)throw new _t("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<f.length;++v){let N=f[v],_=y[v],A=w[v];n[N.id]=[_,A]}}}}let s=[],i=[],a=[];for(let u of this.outputs){lo(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,c]=n[u.id];a.push(l.shape),s.push(l),i.push(c)}return[s,i,a]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof r?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=r.nodeKey(o,s);this.containerNodes.has(i)&&(t[i]=n,n+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new L("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(let n of this.layers)if(n.name===e)return n;throw new L(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new L(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return B(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=r.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),u=i.getConfig(),l=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=r.nodeKey(i,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],y=m.nodeIndices[g],w=m.tensorIndices[g],v=r.nodeKey(x,y),N=t[v];N==null&&(N=0),h.push([x.name,N,w,d])}l.push(h)}}}let c={};c.name=i.name,c.className=a,c.config=u,c.inboundNodes=l,n.push(c)}e.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],l=r.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let p=this.inputLayersTensorIndices[i];o.push([a.name,c,p])}e.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=r.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function u(g,x){let y=[],w;for(let v of x){let N=v[0],_=v[1],A=v[2];if(w=v[3]==null?{}:v[3],!(N in s)){a(g,x);return}let D=s[N];if(D.inboundNodes.length<=_){a(g,x);return}let F=D.inboundNodes[_];y.push(F.outputTensors[A])}y.length>0&&g.apply(Sr(y),w)}function l(g){let x=g.name,y=Vn(g,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(o),s[x]=y,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${v}`);a(y,v)})}let c=t.name,p=t.layers;for(let g of p)l(g);for(;!DA(i);)for(let g of p){let x=s[g.name];if(x.name in i){let y=i[x.name];delete i[x.name];for(let w of y)u(x,w)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let x=g[0],y=g[1],w=g[2];lo(x in s);let N=s[x].inboundNodes[y].outputTensors;m.push(N[w])}let h=t.outputLayers;for(let g of h){let x=g[0],y=g[1],w=g[2];lo(x in s);let N=s[x].inboundNodes[y].outputTensors;f.push(N[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){B(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function S9(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function ix(r,e){return S9(r,e,"classWeight")}async function ax(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=B(()=>{if(r.shape.length===1)return an(r);if(r.shape.length===2){if(r.shape[1]>1)return qi(r,1);if(r.shape[1]===1)return $(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());$t(o);let i=[];return s.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Te(i,"float32")}else return null}function S2(r,e){return R(r,e)}var N9=32;function T2(r,e){let t,n,o=e;t=o.xs,n=o.ys,b.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=N2("input",r.inputNames,t),i=N2("output",r.outputNames,n),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)b.assert(s[u].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let u=0;u<i.length;u++)b.assert(i[u].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function N2(r,e,t){if(t instanceof zt)return[t];if(Array.isArray(t))return b.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new L(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function k9(r){if(r.length===3)throw new _t("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function _2(r,e,t){let n=t.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),b.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),b.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,i;if(o)if(k2(t.validationData))b.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=k9(t.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let c=Xg(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Yg(c,p,t.epochs,null,null,T9(e,t),null,o,l);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let x=0,y=0;for(n||(h=await e.iterator());!n||x<t.batchesPerEpoch;){let w=await h.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:v,ys:N}=T2(r,w.value),_={};_.batch=y,_.size=v[0].shape[0],await m.onBatchBegin(y,_);let A=[];if(t.classWeight!=null){let O=ix(t.classWeight,r.outputNames);for(let V=0;V<O.length;++V)A.push(await ax(N[V],null,O[V]))}let D=v.concat(N).concat(A),F=a(D);$t(D);for(let O=0;O<u.length;++O){let V=u[O],G=F[O];_[V]=G,Re(G)}await m.onBatchEnd(y,_),Hg(_),y++,x++}if(n?x>=t.batchesPerEpoch:w.done){if(o){let v;k2(t.validationData)?v=le(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=le(r.evaluate(s,i,{batchSize:t.validationBatchSize==null?N9:t.validationBatchSize,verbose:0}));for(let N=0;N<r.metricsNames.length;++N)g[`val_${r.metricsNames[N]}`]=v[N]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function T9(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function k2(r){return typeof r.iterator=="function"}function _9(r){return typeof r.next=="function"}async function E2(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new _t("Verbose mode is not implemented yet.");b.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let i=_9(e)?e:await e.iterator(),a=0,u=0;for(;!n||u<t.batches;){let l=await i.next();if(s=B(()=>{if(l.value){let{xs:c,ys:p}=T2(r,l.value),m=c.concat(p),f=B(()=>o(m));if($t(m),u===0)for(let h=0;h<f.length;++h)s.push(pt(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],x=s[h];s[h]=B(()=>K(s[h],R(d,g))),u>0&&$t(x)}$t(f),a+=d,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let c=s[l];s[l]=at(s[l],a),$t(c)}return Sr(s)}function lx(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function hm(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>ul(n,e,t-e)):ul(r,e,t-e)}function ux(r,e){return B(()=>r==null?null:Array.isArray(r)?r.map(t=>ux(t,e)):zg(r,e.dtype==="int32"?e:Q(e,"int32")))}function cx(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}function fS(r){let e=[];r instanceof zt&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(cl(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Ao(r,e){if(r==null)return;let t=[];if(e instanceof zt)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof zt)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function E9(r){return r instanceof zt}function dS(r){return Array.isArray(r)}function A2(r){return!E9(r)&&!dS(r)}function D2(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let i=!1;if(dS(r)&&r.length>0)i=!0;else if(A2(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new L(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(i=>null);let s;if(A2(r)){r=r,s=[];for(let i of e){if(r[i]==null)throw new L(`No data provided for "${i}". Need data for each key in: ${e}`);s.push(r[i])}}else if(dS(r)){if(r=r,r.length!==e.length)throw new L(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new L(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=fS(s),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new L(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],c=t[i][u];if(c!=null&&c>=0&&l!==c)throw new L(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function A9(r,e,t){let n=To(r.map(s=>s.shape[0]));n.sort();let o=To(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function D9(r,e,t){let n=[yc,fm,bc];for(let o=0;o<r.length;++o){let s=r[o],i=e[o],a=t[o];if(i!=null){if(i===bc&&s.shape[s.shape.length-1]===1)throw new L(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),l=a.slice(1);for(let c=0;c<u.length;++c){let p=u[c],m=l[c];if(m!=null&&p!==m)throw new L(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function R2(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new L(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new L(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;let a=s[i];if(a.shape.length!==t[i].length)throw new L(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<t[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],c=t[i][u];if(c!=null&&c!==l)throw new L(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function R9(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var $9="layers-model",fl=(()=>{class r extends sx{constructor(t){super(t),this.isTraining=!1}summary(t,n,o=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");C2(this,t,n,o)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=v2(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof qr))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new L(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),n.push(Jg(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);n=t.loss.map(u=>Jg(u))}else{let a=Jg(t.loss);this.outputs.forEach(u=>{n.push(a)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let u=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(u),this.feedLossFns.push(this.lossFunctions[a])}let o=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ui("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let u=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([u,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=R9(t.metrics,this.outputNames),i=(a,u,l)=>{this.outputNames.length>1&&(u=this.outputNames[a]+"_"+u),this.metricsNames.push(u),this.metricsTensors.push([l,a])};ui("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let u=s[a];(c=>{let p="",m,f,d;for(let h of c){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let x=this.internalOutputShapes[a];x[x.length-1]===1||this.lossFunctions[a]===fm?["accuracy","acc"].indexOf(h)!==-1?f=tx:["crossentropy","ce"].indexOf(h)!==-1&&(f=lS):this.lossFunctions[a]===mm?["accuracy","acc"].indexOf(h)!==-1?f=uS:["crossentropy","ce"].indexOf(h)!==-1&&(f=cS):["accuracy","acc"].indexOf(h)!==-1?f=ex:["crossentropy","ce"].indexOf(h)!==-1&&(f=rx);let y;["accuracy","acc"].indexOf(h)!==-1?y="acc":["crossentropy","ce"].indexOf(h)!==-1&&(y="ce"),d=f,m=p+y}else d=b2(h),m=p+Mf(h);let g;ui(m,()=>{g=d}),i(a,m,g)}})(u)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,n,o={}){let s=o.batchSize==null?32:o.batchSize;lx(s);let a=this.standardizeUserDataXY(t,n,!0,s);try{let u=a[0].concat(a[1]);this.makeTestFunction();let l=this.testFunction,c=this.testLoop(l,u,s,o.verbose,o.steps);return Sr(c)}finally{Ao(a[0],t),Ao(a[1],n)}}async evaluateDataset(t,n){return this.makeTestFunction(),E2(this,t,n)}checkNumSamples(t,n,o,s="steps"){let i;if(o!=null){if(i=null,n!=null)throw new L(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new L(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return i}execute(t,n){if(Array.isArray(n)&&n.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],i=this.retrieveSymbolicTensors(s),a=new na;if(t instanceof zt&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new L(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],t[l])}else for(let l of this.inputs){let c=t[l.name];if(c==null)throw new L(`No value is provided for the model's input ${l.name}`);a.add(l,c)}let u=gc(i,a);return o?u:u[0]}retrieveSymbolicTensors(t){let n=No(null,t.length),o=t.length;for(let s of this.layers){let i=Array.isArray(s.output)?s.output:[s.output],a=i.map(u=>u.name);for(let u=0;u<t.length;++u){let l=a.indexOf(t[u]);if(l!==-1&&(n[u]=i[l],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((i,a)=>{i==null&&s.push(t[a])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(t,n=32,o=!1){return B(()=>{let s=this.checkNumSamples(t);if(o)throw new _t("Verbose predictLoop() is not implemented yet.");let i=cx(s,n),a=this.outputs.map(u=>[]);for(let u=0;u<i.length;++u)B(()=>{let c=i[u][0],p=i[u][1],m=hm(t,c,p),f=[];if(Array.isArray(m))for(let h=0;h<m.length;++h)f.push({key:this.inputs[h],value:m[h]});else f.push({key:this.inputs[0],value:m});let d=new na(f);return gc(this.outputs,d)}).forEach((c,p)=>a[p].push(c));return Sr(a.map(u=>re(u,0)))})}predict(t,n={}){let o=fS(t);R2(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return lx(s),this.predictLoop(o,s)}finally{Ao(o,t)}}predictOnBatch(t){R2(t,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,n)}standardizeUserDataXY(t,n,o=!0,s){if(this.optimizer_==null)throw new cn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let i=[];for(let a=0;a<this.feedOutputShapes.length;++a){let u=this.feedOutputShapes[a];this.feedLossFns[a]===mm?i.push(u.slice(0,u.length-1).concat([1])):i.push(u)}if(t=D2(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=D2(n,this.feedOutputNames,i,!1,"target"),A9(t,n,null),D9(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&t[0].shape[0]%s!==0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,n,o,s,i=!0,a){let[u,l]=this.standardizeUserDataXY(t,n,i,a);if(o!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){let p=ix(s,this.outputNames);c=[];for(let m=0;m<p.length;++m)c.push(await ax(l[m],null,p[m]))}return[u,l,c]}testLoop(t,n,o,s=0,i){return B(()=>{let a=this.checkNumSamples(n,o,i,"steps"),u=[];if(s>0)throw new _t("Verbose mode is not implemented yet.");if(i!=null)throw new _t("steps mode in testLoop() is not implemented yet");{let l=cx(a,o),c=Te(mn(0,a));for(let p=0;p<l.length;++p){let m=l[p][0],f=l[p][1],d=ul(c,m,f-m),h=ux(n,d),g=t(h);if(p===0)for(let x=0;x<g.length;++x)u.push(pt(0));for(let x=0;x<g.length;++x){let y=g[x];u[x]=K(u[x],R(f-m,y))}}for(let p=0;p<u.length;++p)u[p]=at(u[p],a)}return u})}getDedupedMetricsNames(){let t=this.metricsNames,n=[];for(let o=0;o<t.length;++o){let s=t[o],i=s;if(qI(t,s)>1){let a=qI(t.slice(0,o),s);i+=`_${a}`}n.push(i)}return n}makeTrainFunction(){return t=>{let n=[],o=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],u=()=>{let m=[];for(let g=0;g<this.inputs.length;++g)m.push({key:this.inputs[g],value:o[g]});let f=new na(m),d=gc(this.outputs,f,{training:!0}),h;for(let g=0;g<this.lossFunctions.length;++g){let x=this.lossFunctions[g],y=x(s[g],d[g]);i[g]!=null&&(y=S2(y,i[g]));let w=Ne(y);n.push(w),g===0?h=y:h=K(h,y)}for(let g=0;g<this.metricsTensors.length;++g){let x;if(this.outputs.length>1&&g<this.outputs.length)x=n[g];else{let y=this.metricsTensors[g][0],w=this.metricsTensors[g][1];x=Ne(y(s[w],d[w]))}Re(x),a.push(x)}return h=Ne(h),this.calculateLosses().forEach(g=>{h=K(h,g)}),h},l=this.collectedTrainableWeights.map(m=>m.read());return[this.optimizer_.minimize(u,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=t=>B(()=>{let n=[],o,s=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:s[c]});let u=new na(a),l=gc(this.outputs,u);for(let c=0;c<this.lossFunctions.length;++c){let p=this.lossFunctions[c],m=Ne(p(i[c],l[c]));c===0?o=m:o=K(o,m),n.push(o)}for(let c=0;c<this.metricsTensors.length;++c){let p=this.metricsTensors[c][0],m=this.metricsTensors[c][1],f=Ne(p(i[m],l[m]));n.push(f)}return n})}async fit(t,n,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,i,a,u,l,c,p,m,f;try{let d=o.batchSize==null?32:o.batchSize;lx(d);let g=await this.standardizeUserData(t,n,o.sampleWeight,o.classWeight,!1,d);s=g[0],i=g[1],f=g[2];let x=!1,y;if(o.validationData!=null&&o.validationData.length>0){if(x=!0,o.validationData.length===2)l=o.validationData[0],c=o.validationData[1];else throw o.validationData.length===3?new _t("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let V=await this.standardizeUserData(l,c,null,null,!0,d);p=V[0],m=V[1],y=p.concat(m)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){x=!0;let O=Math.floor(s[0].shape[0]*(1-o.validationSplit)),V=s[0].shape[0];p=hm(s,O,V),a=s,s=hm(s,0,O),m=hm(i,O,V),u=i,i=hm(i,0,O),y=p.concat(m)}else o.validationSteps!=null&&(x=!0);let w=s.concat(i).concat(f);this.checkTrainableWeightsConsistency();let v=this.makeTrainFunction(),N=this.getDedupedMetricsNames(),_,A;x?(this.makeTestFunction(),_=this.testFunction,A=N.slice().concat(N.map(O=>"val_"+O))):(_=null,y=[],A=N.slice());let D=Xg(o.callbacks,o.yieldEvery);return await this.fitLoop(v,w,N,d,o.epochs,o.verbose,D,_,y,o.shuffle,A,o.initialEpoch,null,null)}finally{this.isTraining=!1,Ao(s,t),Ao(i,n),Ao(a,t),Ao(u,n),Ao(p,l),Ao(m,c),f!=null&&$t(f)}}async fitLoop(t,n,o,s,i,a,u,l,c,p,m,f,d,h){s==null&&(s=32),i==null&&(i=1),p==null&&(p=!0),f==null&&(f=0);let g=!1;if(l!=null&&c!=null&&(g=!0),h!=null&&(g=!0,d==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let x=this.checkNumSamples(n,s,d,"steps_per_epoch"),y;x!=null&&(y=mn(0,x)),a==null&&(a=1);let{callbackList:w,history:v}=Yg(u,a,i,f,x,d,s,g,m);w.setModel(this),this.history=v,await w.onTrainBegin(),this.stopTraining_=!1;for(let N=f;N<i;++N){await w.onEpochBegin(N);let _={};if(d!=null)throw new _t("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new _t("batch shuffling is not implemneted yet");p&&b.shuffle(y);let A=Te(y),D=cx(x,s);for(let F=0;F<D.length;++F){let O={};if(await w.onBatchBegin(F,O),B(()=>{let V=D[F][0],G=D[F][1],W=ul(A,V,G-V);O.batch=F,O.size=G-V;let H=ux(n,W),q=t(H);for(let j=0;j<o.length;++j){let X=o[j],Z=q[j];O[X]=Z,Re(Z)}if(F===D.length-1&&g){let j=this.testLoop(l,c,s);for(let X=0;X<o.length;++X){let Z=o[X],tt=j[X];Re(tt),_["val_"+Z]=tt}}}),await w.onBatchEnd(F,O),Hg(O),this.stopTraining_)break}A.dispose()}if(await w.onEpochEnd(N,_),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,n){return _2(this,t,n)}async trainOnBatch(t,n){let o=await this.standardizeUserData(t,n),s=o[0],i=o[1],u=this.makeTrainFunction()(s.concat(i)),l=[];for(let c of u){let p=await c.data();l.push(p[0])}return $t(u),Ao(o[0],t),Ao(o[1],n),Sr(l)}getNamedWeights(t){let n=[],o=t!=null&&t.trainableOnly,s=o?this.trainableWeights:this.weights,i=this.getWeights(o);for(let a=0;a<s.length;++a)o&&!s[a].trainable||n.push({name:s[a].originalName,tensor:i[a]});return n}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=ff().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=n-ff().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=ko(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(n=>ko(n))}else{let n=Object.keys(this.loss);t={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")t[s]=ko(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ko(Mf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>ko(Mf(t)));{let t={};for(let n in this.metrics)t[n]=ko(Mf(this.metrics[n]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=Lf(t.optimizer_config),o=Vn(n),s;if(typeof t.loss=="string")s=ll(t.loss);else if(Array.isArray(t.loss))s=t.loss.map(a=>ll(a));else if(t.loss!=null){s={};for(let a in t.loss)s[a]=ll(t.loss[a])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(a=>ll(a));else if(t.metrics!=null){i={};for(let a in t.metrics)i[a]=ll(t.metrics[a])}this.compile({loss:s,metrics:i,optimizer:o})}async save(t,n){if(typeof t=="string"){let c=ai.getSaveHandlers(t);if(c.length===0)throw new L(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new L(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await ai.encodeWeights(this.getNamedWeights(n)),u={modelTopology:this.toJSON(null,!1),format:$9,generatedBy:`TensorFlow.js tfjs-layers v${dm}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){u.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:p,specs:m}=await ai.encodeWeights(await this.optimizer.getWeights(),c);o.specs.push(...m),o.data=ai.concatenateArrayBuffers([o.data,p])}return this.userDefinedMetadata!=null&&(mS(this.userDefinedMetadata,this.name,!0),u.userDefinedMetadata=this.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,t.save(u)}setUserDefinedMetadata(t){mS(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}return r.className="Model",r})();J.registerClass(fl);var F9=(()=>{class r extends fl{}return r.className="Functional",r})();J.registerClass(F9);var hS=(()=>{class r extends fl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:yu("sequential_"),t.layers!=null)for(let n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new L(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n=t instanceof r||t instanceof fl,o;if(n){if(o=t,o.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=sS({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(t.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=oS(this.outputs[0])}this.inboundNodes=[],new pl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:No(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=t.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Bt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,o=console.log){this.built||this.build(),super.summary(t,n,o)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,o={}){if(!this.built)throw new cn("The model needs to be compiled before being used.");return this.model.evaluate(t,n,o)}async evaluateDataset(t,n){if(!this.built)throw new cn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,o={}){if(!this.built)throw new cn("The model needs to be compiled before being used.");return this.model.fit(t,n,o)}async fitDataset(t,n){if(!this.built)throw new cn("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,o={},s=!1){let i,a={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");i=n}else b.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,a=n;let u=new t(a);if(!(u instanceof r))throw new _t(`Sequential.fromConfig called on non-Sequential input: ${u}`);for(let l of i){let p=Vn(l,void 0,s);s&&p.setFastWeightInitDuringBuild(!0),u.add(p)}return u}set stopTraining(t){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),t.push(o)}return{name:this.name,layers:t}}}return r.className="Sequential",r})();J.registerClass(hS);var Or=class extends J.Serializable{getConfig(){return{}}},P9=(()=>{class r extends Or{apply(t,n=1){return qA(t,n)}}return r.className="elu",r})();J.registerClass(P9);var M9=(()=>{class r extends Or{apply(t){return Vp(t)}}return r.className="selu",r})();J.registerClass(M9);var L9=(()=>{class r extends Or{apply(t){return $r(t)}}return r.className="relu",r})();J.registerClass(L9);var z9=(()=>{class r extends Or{apply(t){return B(()=>io(6,$r(t)))}}return r.className="relu6",r})();J.registerClass(z9);var B9=(()=>{class r extends Or{apply(t){return t}}return r.className="linear",r})();J.registerClass(B9);var V9=(()=>{class r extends Or{apply(t){return Dr(t)}}return r.className="sigmoid",r})();J.registerClass(V9);var G9=(()=>{class r extends Or{apply(t){return jA(t)}}return r.className="hardSigmoid",r})();J.registerClass(G9);var W9=(()=>{class r extends Or{apply(t){return si(t)}}return r.className="softplus",r})();J.registerClass(W9);var U9=(()=>{class r extends Or{apply(t){return KA(t)}}return r.className="softsign",r})();J.registerClass(U9);var H9=(()=>{class r extends Or{apply(t){return oi(t)}}return r.className="tanh",r})();J.registerClass(H9);var xS=(()=>{class r extends Or{apply(t,n=-1){return mu(t,n)}}return r.className="softmax",r})();J.registerClass(xS);var q9=(()=>{class r extends Or{apply(t,n=-1){return Pp(t,n)}}return r.className="logSoftmax",r})();J.registerClass(q9);var K9=(()=>{class r extends Or{apply(t){return B(()=>B(()=>{let n=Math.sqrt(2),o=R(.5,K(1,Op(at(t,n))));return R(t,o)}))}}return r.className="gelu",r})();J.registerClass(K9);var j9=(()=>{class r extends Or{apply(t){return B(()=>R(.5,R(t,K(1,oi(R(ge(at(2,Math.PI)),K(t,R(.044715,Gr(t,3)))))))))}}return r.className="gelu_new",r})();J.registerClass(j9);var X9=(()=>{class r extends Or{apply(t){return B(()=>R(t,oi(si(t))))}}return r.className="mish",r})();J.registerClass(X9);var Y9=(()=>{class r extends Or{apply(t,n=1){return B(()=>R(Dr(R(t,n)),t))}}return r.className="swish",r})();J.registerClass(Y9);function pi(r){return r.getClassName()}function gS(r,e={}){return ea(r,J.SerializationMap.getMap().classNameMap,e,"activation")}function mi(r){if(r==null){let e={};return e.className="linear",e.config={},gS(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},gS(e)}else return r instanceof Or?r:gS(r)}function Z9(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var px=class extends J.Serializable{},O2=(()=>{class r extends px{constructor(t){super(),Z9(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return B(()=>{let n=ke([1]);return this.hasL1&&(n=K(n,mt(R(this.l1,Ee(t))))),this.hasL2&&(n=K(n,mt(R(this.l2,dc(t))))),$(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,n){return new t({l1:n.l1,l2:n.l2})}}return r.className="L1L2",r})();J.registerClass(O2);var $2={l1l2:"L1L2"};function me(r){return sm(r)}function F2(r,e={}){return ea(r,J.SerializationMap.getMap().classNameMap,e,"regularizer")}function Ce(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in $2?$2[r]:r,config:{}};return F2(t)}else return r instanceof px?r:F2(r)}var P2=(()=>{class r extends Et{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=Nt(t);let o=$r(t);return this.maxValue!=null&&(o=vr(o,0,this.maxValue)),o}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}}return r.className="ReLU",r})();J.registerClass(P2);var M2=(()=>{class r extends Et{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let o=Nt(t);return su(o,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}return r.className="LeakyReLU",r})();J.registerClass(M2);var L2=(()=>{class r extends Et{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=xe(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ce(t.alphaRegularizer),this.alphaConstraint=We(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Bt(t);let n=t.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<t.length;++s)o[s]=t[s];this.inputSpec=[new ve({ndim:t.length,axes:o})],this.built=!0}call(t,n){return t=Nt(t),pu(t,this.alpha.read())}getConfig(){let t={alphaInitializer:_e(this.alphaInitializer),alphaRegularizer:me(this.alphaRegularizer),alphaConstraint:Ge(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}}return r.className="PReLU",r})();J.registerClass(L2);var z2=(()=>{class r extends Et{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new _t(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){let o=Nt(t);return Zi(o)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}return r.className="ELU",r})();J.registerClass(z2);var B2=(()=>{class r extends Et{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){let o=Nt(t);return R(o,Q(ze(o,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}}return r.className="ThresholdedReLU",r})();J.registerClass(B2);var V2=(()=>{class r extends Et{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new xS().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){return B(()=>{let o=Nt(t),s=n.mask;if(s!=null){let i=R(nt(or(o.shape),Q(s,o.dtype)),pt(-1e9));o=K(o,i)}return this.axis instanceof Array?this.axis.length>1?je(nt(o,au(o,this.axis,!0))):this.softmax(o,this.axis[0]):this.softmax(o,this.axis)})}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Softmax",r})();J.registerClass(V2);function vu(r,e,t){if(typeof r=="number")return No(r,e);if(r.length!==e)throw new L(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!GA(o))throw new L(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Sn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),i;return t==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function fi(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+ci([t-e,0]);else if(n==="same")r=r*e;else throw new L(`Unsupport padding mode: ${n}.`);return r}function Bf(r,e){return B(()=>(Fe(e),e==="channelsFirst"?Wt(r,[0,2,3,1]):r))}function yS(r,e){return B(()=>(Fe(e),e==="channelsFirst"?Wt(r,[0,2,3,4,1]):r))}function Q9(r,e,t,n=1,o="valid",s,i=1){return B(()=>{if(s==null&&(s=fn()),Fe(s),r.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=Wt(r,[0,2,1])),o==="causal")throw new _t("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Ap(r,e,n,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=dn(a,t)),a})}function G2(r,e,t,n=[1,1],o="valid",s,i,a=null){return B(()=>{if(s==null&&(s=fn()),Fe(s),r.rank!==3&&r.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Bf(r,s);if(o==="causal")throw new _t("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=gu.conv2d({x:u,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),s==="channelsFirst"&&(u=Wt(u,[0,3,1,2])),u})}function tY(r,e,t,n=[1,1,1],o="valid",s,i){return B(()=>{if(s==null&&(s=fn()),Fe(s),r.rank!==4&&r.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=yS(r,s);if(o==="causal")throw new _t("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Dh(a,e,n,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=dn(a,t)),s==="channelsFirst"&&(a=Wt(a,[0,4,1,2,3])),a})}var zf=class r extends Et{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",r.verifyArgs(t),this.rank=e,tr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new _t(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=vu(t.kernelSize,e,"kernelSize"),this.strides=vu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,pn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Fe(this.dataFormat),this.activation=mi(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=We(t.biasConstraint),this.biasRegularizer=Ce(t.biasRegularizer),this.activityRegularizer=Ce(t.activityRegularizer),this.dilationRate=vu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(lo("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Dg(e.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:pi(this.activation),useBias:this.useBias,biasInitializer:_e(this.biasInitializer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),biasConstraint:Ge(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},gm=class r extends zf{constructor(e,t){super(e,t),this.kernel=null,r.verifyArgs(t),this.filters=t.filters,tr(this.filters,"filters"),this.kernelInitializer=xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=We(t.kernelConstraint),this.kernelRegularizer=Ce(t.kernelRegularizer)}build(e){e=Bt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return B(()=>{e=Nt(e);let n,o=this.bias==null?null:this.bias.read(),s=Rg(this.activation.getClassName());if(s!=null&&this.rank===2)n=G2(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=Q9(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=G2(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=tY(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new _t("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Bt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let i=Sn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:_e(this.kernelInitializer),kernelRegularizer:me(this.kernelRegularizer),kernelConstraint:Ge(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},bS=(()=>{class r extends gm{constructor(t){super(2,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dg(t.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv2D",r})();J.registerClass(bS);var wS=(()=>{class r extends gm{constructor(t){super(3,t),r.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv3D",r})();J.registerClass(wS);var W2=(()=>{class r extends bS{constructor(t){if(super(t),this.inputSpec=[new ve({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Bt(t),t.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=t[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ve({ndim:4,axes:{[n]:o}})],this.built=!0}call(t,n){return B(()=>{let o=Nt(t);if(o.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,i=s[0],a,u;this.dataFormat==="channelsFirst"?(a=2,u=3):(a=1,u=2);let l=s[a],c=s[u],p=this.kernelSize[0],m=this.kernelSize[1],f=this.strides[0],d=this.strides[1],h=fi(l,f,p,this.padding),g=fi(c,d,m,this.padding),x=[i,h,g,this.filters];this.dataFormat!=="channelsLast"&&(o=Wt(o,[0,2,3,1]));let y=Rp(o,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Wt(y,[0,3,1,2])),this.bias!=null&&(y=dn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=Bt(t);let n=t.slice(),o,s,i;this.dataFormat==="channelsFirst"?(o=1,s=2,i=3):(o=3,s=1,i=2);let a=this.kernelSize[0],u=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return n[o]=this.filters,n[s]=fi(n[s],l,a,this.padding),n[i]=fi(n[i],c,u,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}return r.className="Conv2DTranspose",r})();J.registerClass(W2);var U2=(()=>{class r extends wS{constructor(t){if(super(t),this.inputSpec=[new ve({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Bt(t),t.length!==5)throw new L("Input should have rank 5; Received input shape: "+JSON.stringify(t));let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=t[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ve({ndim:5,axes:{[n]:o}})],this.built=!0}call(t,n){return B(()=>{let o=Nt(t);if(o.shape.length!==5)throw new L(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,i=s[0],a,u,l;this.dataFormat==="channelsFirst"?(l=2,a=3,u=4):(l=1,a=2,u=3);let c=s[l],p=s[a],m=s[u],f=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],g=this.strides[0],x=this.strides[1],y=this.strides[2],w=fi(c,g,f,this.padding),v=fi(p,x,d,this.padding),N=fi(m,y,h,this.padding),_=[i,w,v,N,this.filters];this.dataFormat!=="channelsLast"&&(o=Wt(o,[0,2,3,4,1]));let A=$h(o,this.kernel.read(),_,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(A=Wt(A,[0,4,1,2,3])),this.bias!==null&&(A=dn(A,this.bias.read(),this.dataFormat)),this.activation!==null&&(A=this.activation.apply(A)),A})}computeOutputShape(t){t=Bt(t);let n=t.slice(),o,s,i,a;this.dataFormat==="channelsFirst"?(o=1,s=2,i=3,a=4):(o=4,s=1,i=2,a=3);let u=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],p=this.strides[0],m=this.strides[1],f=this.strides[2];return n[o]=this.filters,n[s]=fi(n[s],p,u,this.padding),n[i]=fi(n[i],m,l,this.padding),n[a]=fi(n[a],f,c,this.padding),n}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}return r.className="Conv3DTranspose",r})();J.registerClass(U2);var eY=(()=>{class r extends gm{constructor(t,n){if(super(t,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=xe(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ce(n.depthwiseRegularizer),this.depthwiseConstraint=We(n.depthwiseConstraint),this.pointwiseInitializer=xe(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ce(n.pointwiseRegularizer),this.pointwiseConstraint=We(n.pointwiseConstraint)}build(t){if(t=Bt(t),t.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);let o=t[n],s=this.kernelSize.concat([o,this.depthMultiplier]),i=[];for(let u=0;u<this.rank;++u)i.push(1);i.push(o*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ve({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(t,n){return B(()=>{t=Nt(t);let o;if(this.rank===1)throw new _t("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Wt(t,[0,2,3,1])),o=Gp(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=dn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=Wt(o,[0,3,1,2])),o})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=_e(this.depthwiseInitializer),t.pointwiseInitializer=_e(this.pointwiseInitializer),t.depthwiseRegularizer=me(this.depthwiseRegularizer),t.pointwiseRegularizer=me(this.pointwiseRegularizer),t.depthwiseConstraint=Ge(this.depthwiseConstraint),t.pointwiseConstraint=Ge(this.pointwiseConstraint),t}}return r.className="SeparableConv",r})();var H2=(()=>{class r extends eY{constructor(t){super(2,t)}}return r.className="SeparableConv2D",r})();J.registerClass(H2);var q2=(()=>{class r extends gm{constructor(t){super(1,t),r.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dg(t.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}return r.className="Conv1D",r})();J.registerClass(q2);var K2=(()=>{class r extends Et{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return B(()=>{if(t=Nt(t),this.dataFormat==="channelsLast"){let o=Af(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Af(o,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=Af(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Af(o,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Cropping2D",r})();J.registerClass(K2);var j2=(()=>{class r extends Et{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Fe(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,BA(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let n=t[2]==null?null:this.size[0]*t[2],o=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,o]}else{let n=t[1]==null?null:this.size[0]*t[1],o=t[2]==null?null:this.size[1]*t[2];return[t[0],n,o,t[3]]}}call(t,n){return B(()=>{let o=Nt(t),s=o.shape;if(this.dataFormat==="channelsFirst"){o=Wt(o,[0,2,3,1]);let i=this.size[0]*s[2],a=this.size[1]*s[3],u=this.interpolation==="nearest"?Hr.resizeNearestNeighbor(o,[i,a]):Hr.resizeBilinear(o,[i,a]);return Wt(u,[0,3,1,2])}else{let i=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Hr.resizeNearestNeighbor(o,[i,a]):Hr.resizeBilinear(o,[i,a])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}}return r.className="UpSampling2D",r})();J.registerClass(j2);function rY(r,e,t=[1,1],n="valid",o,s){return B(()=>{o==null&&(o=fn()),Fe(o);let i=Bf(r,o);if(r.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Yi(i,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=Wt(i,[0,3,1,2])),i})}var X2=(()=>{class r extends zf{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=xe(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=We(t.depthwiseConstraint),this.depthwiseRegularizer=Ce(t.depthwiseRegularizer)}build(t){if(t=Bt(t),t.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);let o=t[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return B(()=>{t=Nt(t);let o=rY(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=dn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(t){t=Bt(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],s=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=Sn(n,this.kernelSize[0],this.padding,this.strides[0]),a=Sn(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],s,i,a]:[t[0],i,a,s]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=_e(this.depthwiseInitializer),t.depthwiseRegularizer=me(this.depthwiseRegularizer),t.depthwiseConstraint=Ge(this.depthwiseRegularizer),t}}return r.className="DepthwiseConv2D",r})();J.registerClass(X2);function vS(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function CS(r,e,t,n=!1,o,s,i=!1,a=!1){return B(()=>{let u=e.shape.length;if(u<3)throw new L(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(mn(2,u));if(e=Wt(e,l),s!=null)throw new _t("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=Q(Q(o,"bool"),"float32"),o.rank===u-1&&(o=Le(o,-1)),o=Wt(o,l)),n&&(e=fr(e,0),o!=null&&(o=fr(o,0)));let c=[],p,m=t,f=e.shape[0],d=hr(e),h;o!=null&&(h=hr(o));for(let x=0;x<f;++x){let y=d[x],w=B(()=>r(y,m));if(o==null)p=w[0],m=w[1];else{let v=B(()=>{let N=h[x],_=nt(yr(N),N),A=K(R(w[0],N),R(m[0],_)),D=m.map((F,O)=>K(R(w[1][O],N),R(F,_)));return{output:A,newStates:D}});p=v.output,m=v.newStates}a&&c.push(p)}let g;return a&&(g=Be(c,1)),[p,g,m]})}var Iu=(()=>{class r extends Et{constructor(t){super(t);let n;if(t.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new NS({cells:t.cell}):n=t.cell,n.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new ve({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return mn(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Gg(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[t[0],t[1],o]:s=[t[0],o],this.returnState){let i=[];for(let a of n)i.push([t[0],a]);return[s].concat(i)}else return s}computeMask(t,n){return B(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(i=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<t;++o)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new _t("Constants support is not implemented in RNN yet.");Gg(t)&&(t=t[0]),t=t;let o=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new ve({shape:[o,null,...s]});let i=[t[0]].concat(t.slice(2));this.cell.build(i);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(u=>u.shape[u.shape.length-1]),a))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(u=>new ve({shape:[null,u]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){B(()=>{if(!this.stateful)throw new ao("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>ke([o,s])):this.states_=[ke([o,this.cell.stateSize])];else if(t==null)$t(this.states_),this.keptStates!=null&&($t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>ke([o,s])):this.states_[0]=ke([o,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):$t(this.states_);for(let s=0;s<this.states_.length;++s){let i=t[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,u=[o,a];if(!b.arraysEqual(i.shape,u))throw new L(`State ${s} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Re(s.clone()))})}apply(t,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let i=vS(t,o,s,this.numConstants);t=i.inputs,o=i.initialState,s=i.constants;let a=[],u=[];if(o!=null){n.initialState=o,a=a.concat(o),this.stateSpec=[];for(let c of o)this.stateSpec.push(new ve({shape:c.shape}));u=u.concat(this.stateSpec)}if(s!=null&&(n.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof en){let c=[t].concat(a),p=this.inputSpec.concat(u),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,n);return this.inputSpec=m,f}else return super.apply(t,n)}call(t,n){return B(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;t=Nt(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new L(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let u={training:s},c=CS((h,g)=>{let x=this.cell.call([h].concat(g),u);return[x[0],x.slice(1)]},t,i,this.goBackwards,o,null,this.unroll,this.returnSequences),p=c[0],m=c[1],f=c[2];this.stateful&&this.resetStates(f,s);let d=this.returnSequences?m:p;return this.returnState?[d].concat(f):d})}getInitialState(t){return B(()=>{let n=ke(t.shape);return n=mt(n,[1,2]),n=cl(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?Lg(n,[1,o]):n):this.cell.stateSize>1?[Lg(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===r.className&&(n.cell={className:this.cell.getClassName(),config:o}),Object.assign(Object.assign(Object.assign({},o),t),n)}static fromConfig(t,n,o={}){let s=n.cell,i=Vn(s,o);return new t(Object.assign(n,{cell:i}))}}return r.className="RNN",r})();J.registerClass(Iu);var Cu=class extends Et{},IS=(()=>{class r extends Cu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,tr(this.units,"units"),this.activation=mi(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ce(t.kernelRegularizer),this.recurrentRegularizer=Ce(t.recurrentRegularizer),this.biasRegularizer=Ce(t.biasRegularizer),this.kernelConstraint=We(t.kernelConstraint),this.recurrentConstraint=We(t.recurrentConstraint),this.biasConstraint=We(t.biasConstraint),this.dropout=fc([1,ci([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,ci([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Bt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return B(()=>{if(t=t,t.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let o=t[1];t=t[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=dl({ones:()=>yr(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=dl({ones:()=>yr(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i,a=this.dropoutMask,u=this.recurrentDropoutMask;a!=null?i=Eo(R(t,a),this.kernel.read()):i=Eo(t,this.kernel.read()),this.bias!=null&&(i=dn(i,this.bias.read())),u!=null&&(o=R(o,u));let l=K(i,Eo(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:pi(this.activation),useBias:this.useBias,kernelInitializer:_e(this.kernelInitializer),recurrentInitializer:_e(this.recurrentInitializer),biasInitializer:_e(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Ge(this.kernelConstraint),recurrentConstraint:Ge(this.recurrentConstraint),biasConstraint:Ge(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),n)}}return r.className="SimpleRNNCell",r})();J.registerClass(IS);var Y2=(()=>{class r extends Iu{constructor(t){t.cell=new IS(t),super(t)}call(t,n){return B(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:o,training:s,initialState:i})})}static fromConfig(t,n){return new t(n)}}return r.className="SimpleRNN",r})();J.registerClass(Y2);var SS=(()=>{class r extends Cu{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=t.units,tr(this.units,"units"),this.activation=mi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=mi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ce(t.kernelRegularizer),this.recurrentRegularizer=Ce(t.recurrentRegularizer),this.biasRegularizer=Ce(t.biasRegularizer),this.kernelConstraint=We(t.kernelConstraint),this.recurrentConstraint=We(t.recurrentConstraint),this.biasConstraint=We(t.biasConstraint),this.dropout=fc([1,ci([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,ci([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Bt(t);let n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return B(()=>{if(t=t,t.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let o=n.training==null?!1:n.training,s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=dl({ones:()=>yr(t),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=dl({ones:()=>yr(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,u,l,c;0<this.dropout&&this.dropout<1&&(t=R(t,i[0]));let p=Eo(t,this.kernel.read());this.useBias&&(p=dn(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=R(s,a[0]));let m=this.recurrentKernel.read(),[f,d]=dr(m,[2*this.units,this.units],m.rank-1),h=Eo(s,f),[g,x,y]=dr(p,3,p.rank-1),[w,v]=dr(h,2,h.rank-1);u=this.recurrentActivation.apply(K(g,w)),l=this.recurrentActivation.apply(K(x,v));let N=Eo(R(l,s),d);c=this.activation.apply(K(y,N));let _=K(R(u,s),R(K(1,Ut(u)),c));return[_,_]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:pi(this.activation),recurrentActivation:pi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_e(this.kernelInitializer),recurrentInitializer:_e(this.recurrentInitializer),biasInitializer:_e(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Ge(this.kernelConstraint),recurrentConstraint:Ge(this.recurrentConstraint),biasConstraint:Ge(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),n)}}return r.className="GRUCell",r})();J.registerClass(SS);var Z2=(()=>{class r extends Iu{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new SS(t),super(t)}call(t,n){return B(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:o,training:s,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}return r.className="GRU",r})();J.registerClass(Z2);var Vf=(()=>{class r extends Cu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,tr(this.units,"units"),this.activation=mi(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=mi(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ce(t.kernelRegularizer),this.recurrentRegularizer=Ce(t.recurrentRegularizer),this.biasRegularizer=Ce(t.biasRegularizer),this.kernelConstraint=We(t.kernelConstraint),this.recurrentConstraint=We(t.recurrentConstraint),this.biasConstraint=We(t.biasConstraint),this.dropout=fc([1,ci([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=fc([1,ci([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Bt(t);let o=t[t.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let i=this.biasInitializer,a=this.units;s=new(n=class extends hn{apply(l,c){let p=i.apply([a]),m=new Vg().apply([a]),f=i.apply([a*2]);return ZI(ZI(p,m),f)}},n.className="CustomInit",n)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return B(()=>{let o=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1],i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=dl({ones:()=>yr(t),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=dl({ones:()=>yr(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,u=this.recurrentDropoutMask,l,c,p,m;0<this.dropout&&this.dropout<1&&(t=R(t,a[0]));let f=Eo(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=R(s,u[0])),f=K(f,Eo(s,this.recurrentKernel.read())),this.useBias&&(f=dn(f,this.bias.read()));let[d,h,g,x]=dr(f,4,f.rank-1);l=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(h),p=K(R(c,i),R(l,this.activation.apply(g))),m=this.recurrentActivation.apply(x);let y=R(m,this.activation.apply(p));return[y,y,p]})}getConfig(){let t=super.getConfig(),n={units:this.units,activation:pi(this.activation),recurrentActivation:pi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:_e(this.kernelInitializer),recurrentInitializer:_e(this.recurrentInitializer),biasInitializer:_e(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Ge(this.kernelConstraint),recurrentConstraint:Ge(this.recurrentConstraint),biasConstraint:Ge(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),n)}}return r.className="LSTMCell",r})();J.registerClass(Vf);var J2=(()=>{class r extends Iu{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Vf(t),super(t)}call(t,n){return B(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:o,training:s,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}return r.className="LSTM",r})();J.registerClass(J2);var NS=(()=>{class r extends Cu{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return B(()=>{t=t;let o=t.slice(1),s=[];for(let u of this.cells.slice().reverse())Array.isArray(u.stateSize)?s.push(o.splice(0,u.stateSize.length)):s.push(o.splice(0,1));s.reverse();let i=[],a;for(let u=0;u<this.cells.length;++u){let l=this.cells[u];o=s[u],u===0?a=[t[0]].concat(o):a=[a[0]].concat(o),a=l.call(a,n),i.push(a.slice(1))}o=[];for(let u of i.slice().reverse())o.push(...u);return[a[0]].concat(o)})}build(t){Gg(t)&&(t=t[0]),t=t;let n;this.cells.forEach((o,s)=>{ui(`RNNCell_${s}`,()=>{o.build(t),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){let t=super.getConfig(),n=i=>({className:i.getClassName(),config:i.getConfig()}),s={cells:this.cells.map(n)};return Object.assign(Object.assign({},t),s)}static fromConfig(t,n,o={}){let s=[];for(let i of n.cells)s.push(Vn(i,o));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(t)}return t}getWeights(){let t=[];for(let n of this.cells)t.push(...n.weights);return Rf(t)}setWeights(t){let n=[];for(let o of this.cells){let s=o.weights.length,i=t.splice(s);for(let a=0;a<o.weights.length;++a)n.push([o.weights[a],i[a]])}pm(n)}}return r.className="StackedRNNCells",r})();J.registerClass(NS);function dl(r){let{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(e(),t):Bg(e(),t),a=()=>bu(i,e,n);return!o||o<=1?Re(a().clone()):Array(o).fill(void 0).map(a).map(l=>Re(l.clone()))}var nY=function(r,e){var t={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&e.indexOf(n)<0&&(t[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(t[n[o]]=r[n[o]]);return t};var oY=(()=>{class r extends Iu{constructor(t){if(t.unroll)throw new _t("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new _t("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ve({ndim:5})]}call(t,n){return B(()=>{if(this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new L("ConvRNN2D cell does not support constants");let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:o,training:s,initialState:i})})}computeOutputShape(t){let n=this.computeSingleOutputShape(t);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([t[0],...n.slice(-3)])]),n}getInitialState(t){return B(()=>{let{stateSize:n}=this.cell,o=t.shape,s=this.computeSingleOutputShape(o),i=[s[0],...s.slice(2)],a=ke(i);return Array.isArray(n)?Array(n.length).fill(a):[a]})}resetStates(t,n=!1){B(()=>{if(!this.stateful)throw new ao("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,s=this.computeSingleOutputShape(o),i=[s[0],...s.slice(2)];if(o[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ke(i)):this.states_=[ke(i)];else if(t==null)$t(this.states_),this.keptStates!=null&&($t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ke(i)):this.states_[0]=ke(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n?this.keptStates.push(this.states_.slice()):$t(this.states_);for(let u=0;u<this.states_.length;++u){let l=t[u],c=i;if(!b.arraysEqual(l.shape,c))throw new L(`State ${u} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[u]=l}}this.states_=this.states_.map(u=>Re(u.clone()))})}computeSingleOutputShape(t){let{dataFormat:n,filters:o,kernelSize:s,padding:i,strides:a,dilationRate:u}=this.cell,l=n==="channelsFirst",c=t[l?3:2],p=t[l?4:3],m=Sn(c,s[0],i,a[0],u[0]),f=Sn(p,s[1],i,a[1],u[1]);return[...t.slice(0,2),...l?[o,m,f]:[m,f,o]]}}return r.className="ConvRNN2D",r})(),kS=(()=>{class r extends Vf{constructor(t){let{filters:n,kernelSize:o,strides:s,padding:i,dataFormat:a,dilationRate:u}=t;super(Object.assign(Object.assign({},t),{units:n})),this.filters=n,tr(this.filters,"filters"),this.kernelSize=vu(o,2,"kernelSize"),this.kernelSize.forEach(l=>tr(l,"kernelSize")),this.strides=vu(s||1,2,"strides"),this.strides.forEach(l=>tr(l,"strides")),this.padding=i||"valid",pn(this.padding),this.dataFormat=a||"channelsLast",Fe(this.dataFormat),this.dilationRate=vu(u||1,2,"dilationRate"),this.dilationRate.forEach(l=>tr(l,"dilationRate"))}build(t){var n;t=Bt(t);let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new L(`The channel dimension of the input should be defined. Found ${t[o]}`);let s=t[o],i=4,a=this.kernelSize.concat([s,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let u=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",u,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let c=this.biasInitializer,p=this.filters;l=new(n=class extends hn{apply(f,d){let h=c.apply([p]),g=or([p]),x=c.apply([p*2]);return am([h,g,x])}},n.className="CustomInit",n)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return B(()=>{if(t.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=n.training||!1,s=t[0],i=t[1],a=t[2],u=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=dl({ones:()=>yr(s),rate:this.dropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,c=(it,ut,rt)=>!ut||!ut[rt]?it:R(ut[rt],it),p=c(s,l,0),m=c(s,l,1),f=c(s,l,2),d=c(s,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=dl({ones:()=>yr(i),rate:this.recurrentDropout,training:o,count:u,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,g=c(i,h,0),x=c(i,h,1),y=c(i,h,2),w=c(i,h,3),v=3,[N,_,A,D]=dr(this.kernel.read(),u,v),[F,O,V,G]=this.useBias?dr(this.bias.read(),u):[null,null,null,null];p=this.inputConv(p,N,F,this.padding),m=this.inputConv(m,_,O,this.padding),f=this.inputConv(f,A,V,this.padding),d=this.inputConv(d,D,G,this.padding);let[W,H,q,j]=dr(this.recurrentKernel.read(),u,v);g=this.recurrentConv(g,W),x=this.recurrentConv(x,H),y=this.recurrentConv(y,q),w=this.recurrentConv(w,j);let X=this.recurrentActivation.apply(K(p,g)),Z=this.recurrentActivation.apply(K(m,x)),tt=K(R(Z,a),R(X,this.activation.apply(K(f,y)))),st=R(this.recurrentActivation.apply(K(d,w)),this.activation.apply(tt));return[st,st,tt]})}getConfig(){let t=super.getConfig(),{units:n}=t,o=nY(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),s)}inputConv(t,n,o,s){let i=vn(t,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?dn(i,o,this.dataFormat):i}recurrentConv(t,n){return vn(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}return r.className="ConvLSTM2DCell",r})();J.registerClass(kS);var Q2=(()=>{class r extends oY{constructor(t){let n=new kS(t);super(Object.assign(Object.assign({},t),{cell:n}))}static fromConfig(t,n){return new t(n)}}return r.className="ConvLSTM2D",r})();J.registerClass(Q2);var TS=(()=>{class r extends Et{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let n=t.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,i=this.getNoiseShape(o);return bu(()=>Bg(o,this.rate,i,this.seed),()=>o,s)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}}return r.className="Dropout",r})();J.registerClass(TS);var tD=(()=>{class r extends TS{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let n=t.shape;return[n[0],1,n[2]]}}return r.className="SpatialDropout1D",r})();J.registerClass(tD);var eD=(()=>{class r extends Et{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,tr(this.units,"units"),this.activation=mi(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=We(t.kernelConstraint),this.biasConstraint=We(t.biasConstraint),this.kernelRegularizer=Ce(t.kernelRegularizer),this.biasRegularizer=Ce(t.biasRegularizer),this.activityRegularizer=Ce(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Bt(t);let n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Bt(t);let n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t),s=Rg(this.activation.getClassName()),i;return s!=null?i=Eo(o,this.kernel.read(),s,this.bias?this.bias.read():null):(i=Eo(o,this.kernel.read()),this.bias!=null&&(i=dn(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){let t={units:this.units,activation:pi(this.activation),useBias:this.useBias,kernelInitializer:_e(this.kernelInitializer),biasInitializer:_e(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Ge(this.kernelConstraint),biasConstraint:Ge(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Dense",r})();J.registerClass(eD);var rD=(()=>{class r extends Et{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Bt(t);for(let n of t.slice(1))if(n==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],_o(t,1)]}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let i=2;i<o.rank;++i)s.push(i);s.push(1),o=Wt(o,s)}return HA(o)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(t,n),t}}return r.className="Flatten",r})();J.registerClass(rD);var nD=(()=>{class r extends Et{constructor(t){super(t),this.supportsMasking=!0,this.activation=mi(t.activation)}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);return this.activation.apply(o)})}getConfig(){let t={activation:pi(this.activation)},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Activation",r})();J.registerClass(nD);var oD=(()=>{class r extends Et{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return B(()=>(t=Nt(t),WA(t,this.n)))}getConfig(){let t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}}return r.className="RepeatVector",r})();J.registerClass(oD);var sD=(()=>{class r extends Et{constructor(t){super(t),this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){let o="Total size of new array must be unchanged.",s=n.slice(),i=1,a=null;for(let l=0;l<s.length;++l){let c=s[l];if(this.isUnknown(c))if(a===null)a=l;else throw new L("Can only specifiy one unknown dimension.");else i*=c}let u=_o(t);if(a!==null){if(i===0||u%i!==0)throw new L(o);s[a]=u/i}else if(u!==i)throw new L(o);return s}computeOutputShape(t){let n=!1;for(let o=0;o<t.length;++o)if(this.isUnknown(t[o])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t),s=o.shape,i=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return $(o,i)})}getConfig(){let t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Reshape",r})();J.registerClass(sD);var iD=(()=>{class r extends Et{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let n=mn(1,t.dims.length+1);if(!b.arraysEqual(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ve({ndim:this.dims.length+1})]}computeOutputShape(t){t=Bt(t);let n=t.slice();return this.dims.forEach((o,s)=>{n[s+1]=t[o]}),n}call(t,n){return Wt(Nt(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Permute",r})();J.registerClass(iD);var aD=(()=>{class r extends Et{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){let o=Nt(t);return Yu(ii(o,this.maskValue),-1)}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t),a=Yu(ii(o,this.maskValue),-1,!0);return R(o,Q(a,o.dtype))})}}return r.className="Masking",r})();J.registerClass(aD);var lD=(()=>{class r extends Et{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(le(t.inputLength))}this.inputDim=t.inputDim,tr(this.inputDim,"inputDim"),this.outputDim=t.outputDim,tr(this.outputDim,"outputDim"),this.embeddingsInitializer=xe(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ce(t.embeddingsRegularizer),this.activityRegularizer=Ce(t.activityRegularizer),this.embeddingsConstraint=We(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return B(()=>this.maskZero?(t=Nt(t),ii(t,St(t))):null)}computeOutputShape(t){if(t=Bt(t),this.inputLength==null)return[...t,this.outputDim];let n=le(this.inputLength);if(n.length!==t.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let o=0;for(let s=0;s<n.length;++s){let i=n[s],a=t[s+1];if(i!=null&&a!=null&&i!==a)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(n[o]=a),o++}}return[t[0],...n,this.outputDim]}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);o.dtype!=="int32"&&(o=tn(o,"int32"));let s=zg(this.embeddings.read(),$(o,[o.size]));return $(s,Bt(this.computeOutputShape(o.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:_e(this.embeddingsInitializer),embeddingsRegularizer:me(this.embeddingsRegularizer),activityRegularizer:me(this.activityRegularizer),embeddingsConstraint:Ge(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Embedding",r})();J.registerClass(lD);var hl=class extends Et{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _t}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],i=t[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Bt(e)]),e=e,e.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=To(t),t.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let i=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&To(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return B(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=ci(o);for(let i of e){let a=i.rank;for(let u=0;u<s-a;++u)i=cl(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let u of e){let l=u.rank;if(l==null){let c=u.shape,p=c[0],m=c.slice(1).concat([p]),f=$(u,[p].concat(_o(c.slice(1))));f=Wt(f,[1,0]),f=$(f,m),n.push(f),s=!0}else if(l>1){let c=mn(1,l).concat([0]);n.push(Wt(u,c)),s=!0}else n.push(u)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let u=i.shape,l=u.length,c=u[l-1],p=[c].concat(u.slice(0,u.length-1));i=$(Wt($(i,[-1,c]),[1,0]),p)}else if(a>1){let u=[a-1].concat(mn(0,a-1));i=Wt(i,u)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=To(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return B(()=>{if(t==null)return null;if(!Array.isArray(t))throw new L("`mask` should be an Array");if(!Array.isArray(e))throw new L("`inputs` should be an Array");if(t.length!==e.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Le(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=Wr(n,t[o]);return n})}},uD=(()=>{class r extends hl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let n=t[0].clone();for(let o=1;o<t.length;++o)n=K(n,t[o]);return n})}}return r.className="Add",r})();J.registerClass(uD);var cD=(()=>{class r extends hl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let n=t[0].clone();for(let o=1;o<t.length;++o)n=R(n,t[o]);return n})}}return r.className="Multiply",r})();J.registerClass(cD);var pD=(()=>{class r extends hl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let n=t[0].clone();for(let o=1;o<t.length;++o)n=K(n,t[o]);return R(1/t.length,n)})}}return r.className="Average",r})();J.registerClass(pD);var mD=(()=>{class r extends hl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let n=t[0];for(let o=1;o<t.length;++o)n=In(n,t[o]);return n})}}return r.className="Maximum",r})();J.registerClass(mD);var fD=(()=>{class r extends hl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let n=t[0];for(let o=1;o<t.length;++o)n=io(n,t[o]);return n})}}return r.className="Minimum",r})();J.registerClass(fD);var dD=(()=>{class r extends hl{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(let s of t)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<t.length;++s){let i=t[s].slice();i.splice(this.axis,1);let a=!1;for(let u of o)if(b.arraysEqual(u,i)){a=!0;break}a||o.push(i)}if(o.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return B(()=>am(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");let n=t,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let i of n.slice(1)){if(o[s]==null||i[s]==null){o[s]=null;break}o[s]+=i[s]}return o}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new L("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new L(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return B(()=>{let o=!0;if(n.forEach(a=>{if(a!=null){o=!1;return}}),o)return null;let s=[];for(let a=0;a<t.length;++a)n[a]==null?s.push(Q(yr(t[a]),"bool")):n[a].rank<t[a].rank?s.push(Le(n[a],-1)):s.push(n[a]);let i=re(s,this.axis);return _p(i,-1,!1)})}getConfig(){let t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Concatenate",r})();J.registerClass(dD);function Gf(r,e){for(;r<0;)r+=e;return r}function sY(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new _t("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new _t("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return B(()=>{let i;if(n>o){i=n-o;let u=[];for(let l=0;l<i;++l)u.push(1);e=$(e,e.shape.concat(u))}else if(o>n){i=o-n;let u=[];for(let l=0;l<i;++l)u.push(1);r=$(r,r.shape.concat(u))}else i=0;let a;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?a=mt(R(r,e),s[0]):a=mt(R(Wt(r,[1,0]),e),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===e.shape.length-1;a=Gt(r,e,u,l)}if(i>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let c=u;c<u+i;++c)l.push(c);a=Fr(a,l)}return a.shape.length===1&&(a=Le(a,1)),a})}var hD=(()=>{class r extends hl{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){b.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0],o=t[1];if(n.length>3||o.length>3)throw new _t("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new L(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(t){if(t.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],o=t[1],s;return Array.isArray(this.axes)?s=this.axes.map((i,a)=>Gf(i,t[a].shape.length)):s=[Gf(this.axes,n.shape.length),Gf(this.axes,o.shape.length)],this.normalize&&(n=$f(n,s[0]),o=$f(o,s[1])),sY(n,o,s)}interpretAxes(t,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[Gf(this.axes,t.length),Gf(this.axes,n.length)],o}computeOutputShape(t){b.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=t[0].slice(),o=t[1].slice();if(n.length>3||o.length>3)throw new _t("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let i=n.concat(o);return i.length===1&&i.push(1),i}computeMask(t,n){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}}return r.className="Dot",r})();J.registerClass(hD);var gD=(()=>{class r extends Et{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);return bu(()=>K(lm(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}}return r.className="GaussianNoise",r})();J.registerClass(gD);var xD=(()=>{class r extends Et{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return B(()=>{this.invokeCallHook(t,n);let o=Nt(t);return this.rate>0&&this.rate<1?bu(()=>{let i=Math.sqrt(this.rate/(1-this.rate));return R(o,lm(o.shape,1,i))},()=>o,n.training||!1):o})}}return r.className="GaussianDropout",r})();J.registerClass(xD);var yD=(()=>{class r extends Et{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Nt(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return B(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(t);return bu(()=>{let i=Nt(t),l=-1.6732632423543772*1.0507009873554805,c=ln(zn(o),this.rate);c=tn(c,"float32");let p=((1-this.rate)*(1+this.rate*l**2))**-.5,m=-p*l*this.rate,f=K(R(i,c),R(K(c,-1),l));return K(R(f,p),m)},()=>Nt(t),n.training||!1)}return t})}}return r.className="AlphaDropout",r})();J.registerClass(yD);function Wf(r,e,t,n,o,s=.001){let i;if(r.rank===2)i=Ih(r,e,t,n,o,s);else if(r.rank===3)i=Sh(r,e,t,n,o,s);else if(r.rank===4)i=Nh(r,e,t,n,o,s);else throw new _t(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function iY(r,e,t,n,o=.001){return B(()=>{let s=ec(r,n),i=s.mean,a=s.variance;return[Wf(r,i,a,t,e,o),i,a]})}function aY(r,e,t,n,o=.001){return B(()=>{let s=ec(r,n),i=s.mean,a=s.variance,u=[];for(let d of mn(0,r.rank))n.indexOf(d)!==-1?u.push(1):u.push(r.shape[d]);let l=$(i,u),c=$(a,u),p=e==null?null:$(e,u),m=t==null?null:$(t,u);return[Wf(r,l,c,m,p,o),i,a]})}function lY(r,e,t,n,o=.001){return b.arraysEqual(n.slice().sort(),mn(0,r.rank-1))?iY(r,e,t,n,o):aY(r,e,t,n,o)}var bD=(()=>{class r extends Et{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=xe(t.betaInitializer||"zeros"),this.gammaInitializer=xe(t.gammaInitializer||"ones"),this.movingMeanInitializer=xe(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xe(t.movingVarianceInitializer||"ones"),this.betaConstraint=We(t.betaConstraint),this.gammaConstraint=We(t.gammaConstraint),this.betaRegularizer=Ce(t.betaRegularizer),this.gammaRegularizer=Ce(t.gammaRegularizer)}build(t){t=Bt(t);let n=this.axis>=0?this.axis:this.axis+t.length,o=t[n];if(o==null)throw new L(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ve({ndim:t.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return B(()=>{let o=n.training==null?!1:n.training,s=Nt(t),i=s.shape,a=i.length,u=mn(0,a),l=this.axis>=0?this.axis:this.axis+a;u.splice(l,1);let c=No(1,a);c[l]=i[l];let p=u.slice();p.sort();let m=!b.arraysEqual(p,mn(0,a).slice(0,a-1)),f=()=>{if(m){let w=$(this.movingMean.read(),c),v=$(this.movingVariance.read(),c),N=this.center?$(this.beta.read(),c):null,_=this.scale?$(this.gamma.read(),c):null;return Wf(s,w,v,N,_,this.epsilon)}else return Wf(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return f();let[d,h,g]=lY(s,this.gamma.read(),this.beta.read(),u,this.epsilon),x=(w,v,N)=>{B(()=>{let _=1-N,A=w.read(),D=R(nt(A,v),_);w.write(nt(A,D))})};return(()=>{x(this.movingMean,h,this.momentum),x(this.movingVariance,g,this.momentum)})(),d})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_e(this.betaInitializer),gammaInitializer:_e(this.gammaInitializer),movingMeanInitializer:_e(this.movingMeanInitializer),movingVarianceInitializer:_e(this.movingVarianceInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer),betaConstraint:Ge(this.betaConstraint),gammaConstraint:Ge(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}}return r.className="BatchNormalization",r})();J.registerClass(bD);var wD=(()=>{class r extends Et{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=xe(t.betaInitializer||"zeros"),this.gammaInitializer=xe(t.gammaInitializer||"ones"),this.betaRegularizer=Ce(t.betaRegularizer),this.gammaRegularizer=Ce(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Bt(t);let n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=n);for(let i of this.axis)if(i<0||i>=n)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==To(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(i=>t[i]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(t,n){let o=Nt(t),s=o.shape,i=s.length;return B(()=>{let{mean:u,variance:l}=ec(o,this.axis,!0),c=No(1,i);for(let g of this.axis)c[g]=s[g];let p=g=>g!=null&&g.shape.length!==i?$(g,c):g,m=this.scale?p(this.gamma.read()):null,f=this.center?p(this.beta.read()):null,d=[],h=[];for(let g=0;g<i;++g)this.axis.indexOf(g)!==-1?(d.push(s[g]),h.push(1)):(d.push(1),h.push(s[g]));return u=Rr(u,d),l=Rr(l,d),m!=null&&(m=Rr(m,h)),f!=null&&(f=Rr(f,h)),Wf(o,u,l,f,m,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:_e(this.betaInitializer),gammaInitializer:_e(this.gammaInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}}return r.className="LayerNormalization",r})();J.registerClass(wD);function uY(r,e,t){return B(()=>{if(r.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=fn()),t!=="channelsLast"&&t!=="channelsFirst")throw new L(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],un(r,n)})}var vD=(()=>{class r extends Et{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?fn():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,o;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],o=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);o=t.padding[1]}this.padding=[n,o]}this.inputSpec=[new ve({ndim:4})]}computeOutputShape(t){t=Bt(t);let n,o;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?o=t[3]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],t[1],n,o]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?o=t[2]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],n,o,t[3]])}call(t,n){return B(()=>uY(Nt(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}return r.className="ZeroPadding2D",r})();J.registerClass(vD);function xx(r,e,t,n,o,s){return B(()=>{Fe(o),KI(s),pn(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=fn()),s==null&&(s="max"),r=Bf(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=uu(r,e,t,a):i=tu(r,e,t,a),o==="channelsFirst"&&(i=Wt(i,[0,3,1,2])),i})}function CD(r,e,t,n,o,s){return B(()=>{Fe(o),KI(s),pn(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=fn()),s==null&&(s="max"),r=yS(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Kh(r,e,t,a):i=Ch(r,e,t,a),o==="channelsFirst"&&(i=Wt(i,[0,4,1,2,3])),i})}var mx=class extends Et{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(tr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);tr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,pn(this.padding),this.inputSpec=[new ve({ndim:3})]}computeOutputShape(e){e=Bt(e);let t=Sn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return B(()=>{this.invokeCallHook(e,t),e=cl(Nt(e),2);let n=this.poolingFunction(Nt(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Fr(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ID=(()=>{class r extends mx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),xx(t,n,o,s,i,"max")}}return r.className="MaxPooling1D",r})();J.registerClass(ID);var SD=(()=>{class r extends mx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),xx(t,n,o,s,i,"avg")}}return r.className="AveragePooling1D",r})();J.registerClass(SD);var fx=class extends Et{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];tr(this.poolSize,"poolSize"),tr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Fe(this.dataFormat),pn(this.padding),this.inputSpec=[new ve({ndim:4})]}computeOutputShape(e){e=Bt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Sn(t,this.poolSize[0],this.padding,this.strides[0]),n=Sn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return B(()=>(this.invokeCallHook(e,t),this.poolingFunction(Nt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ND=(()=>{class r extends fx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),xx(t,n,o,s,i,"max")}}return r.className="MaxPooling2D",r})();J.registerClass(ND);var kD=(()=>{class r extends fx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),xx(t,n,o,s,i,"avg")}}return r.className="AveragePooling2D",r})();J.registerClass(kD);var dx=class extends Et{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];tr(this.poolSize,"poolSize"),tr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Fe(this.dataFormat),pn(this.padding),this.inputSpec=[new ve({ndim:5})]}computeOutputShape(e){e=Bt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Sn(t,this.poolSize[0],this.padding,this.strides[0]),n=Sn(n,this.poolSize[1],this.padding,this.strides[1]),o=Sn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return B(()=>(this.invokeCallHook(e,t),this.poolingFunction(Nt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},TD=(()=>{class r extends dx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),CD(t,n,o,s,i,"max")}}return r.className="MaxPooling3D",r})();J.registerClass(TD);var _D=(()=>{class r extends dx{constructor(t){super(t)}poolingFunction(t,n,o,s,i){return Fe(i),pn(s),CD(t,n,o,s,i,"avg")}}return r.className="AveragePooling3D",r})();J.registerClass(_D);var hx=class extends Et{constructor(e){super(e),this.inputSpec=[new ve({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _t}},ED=(()=>{class r extends hx{constructor(t){super(t||{})}call(t,n){return B(()=>{let o=Nt(t);return Ne(o,1)})}}return r.className="GlobalAveragePooling1D",r})();J.registerClass(ED);var AD=(()=>{class r extends hx{constructor(t){super(t||{})}call(t,n){return B(()=>{let o=Nt(t);return Cr(o,1)})}}return r.className="GlobalMaxPooling1D",r})();J.registerClass(AD);var gx=class extends Et{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Fe(this.dataFormat),this.inputSpec=[new ve({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _t}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},DD=(()=>{class r extends gx{call(t,n){return B(()=>{let o=Nt(t);return this.dataFormat==="channelsLast"?Ne(o,[1,2]):Ne(o,[2,3])})}}return r.className="GlobalAveragePooling2D",r})();J.registerClass(DD);var RD=(()=>{class r extends gx{call(t,n){return B(()=>{let o=Nt(t);return this.dataFormat==="channelsLast"?Cr(o,[1,2]):Cr(o,[2,3])})}}return r.className="GlobalMaxPooling2D",r})();J.registerClass(RD);var yx=class extends Et{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=Vn(o,n);delete t.layer;let i={layer:s};return Object.assign(i,t),new e(i)}},$D=(()=>{class r extends yx{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Bt(t),t.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let n=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Bt(t);let n=[t[0]].concat(t.slice(2)),o=this.layer.computeOutputShape(n),s=t[1];return[o[0],s].concat(o.slice(1))}call(t,n){return B(()=>(t=Nt(t),CS((a,u)=>[Nt(this.layer.call(a,n)),[]],t,[],!1,null,null,!1,!0)[1]))}}return r.className="TimeDistributed",r})();J.registerClass($D);function cY(r){ra(LA,"BidirectionalMergeMode",r)}var pY="concat",FD=(()=>{class r extends yx{constructor(t){super(t);let n=t.layer.getConfig(),o={};o.className=t.layer.getClassName(),o.config=n,this.forwardLayer=Vn(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=t.layer.getClassName(),s.config=n,this.backwardLayer=Vn(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?pY:t.mergeMode,cY(this.mergeMode),t.weights)throw new _t("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let n=t.length,o=Math.floor(n/2);this.forwardLayer.setWeights(t.slice(0,o)),this.backwardLayer.setWeights(t.slice(o))}computeOutputShape(t){let n=this.forwardLayer.computeOutputShape(t);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,i;return this.returnState&&(i=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(i).concat(i.slice()):[o].concat(i).concat(i.slice()):Sr(s)}apply(t,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let i=vS(t,o,s,this.numConstants);if(t=i.inputs,o=i.initialState,s=i.constants,Array.isArray(t)&&(o=t.slice(1),t=t[0]),(o==null||o.length===0)&&s==null)return super.apply(t,n);let a=[],u=[];if(o!=null){let c=o.length;if(c%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,a.push(...o);let p=o.map(m=>new ve({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,c/2),this.backwardLayer.stateSpec=p.slice(c/2),u.push(...p)}if(s!=null)throw new _t("Support for constants in Bidirectional layers is not implemented yet.");let l=a[0]instanceof en;for(let c of a)if(c instanceof en!==l)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let c=[t].concat(a),p=this.inputSpec.concat(u),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,n);return this.inputSpec=m,f}else return super.apply(t,n)}call(t,n){return B(()=>{let o=n.initialState,s,i;if(o==null)s=this.forwardLayer.call(t,n),i=this.backwardLayer.call(t,n);else{let l=o.slice(0,o.length/2),c=o.slice(o.length/2);s=this.forwardLayer.call(t,Object.assign(n,{initialState:l})),i=this.backwardLayer.call(t,Object.assign(n,{initialState:c}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=fr(i,1));let u;return this.mergeMode==="concat"?u=am([s,i]):this.mergeMode==="sum"?u=K(s,i):this.mergeMode==="ave"?u=R(.5,K(s,i)):this.mergeMode==="mul"?u=R(s,i):this.mergeMode==null&&(u=[s,i]),this.returnState?this.mergeMode==null?u.concat(a):[u].concat(a):u})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ui(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ui(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let i=this.forwardLayer.states.map(a=>null);return Array.isArray(o)?o.concat(i).concat(i):[o].concat(i).concat(i)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,n){let o=Vn(n.layer);if(delete n.layer,n.numConstants!=null)throw new _t("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new t(s)}}return r.className="Bidirectional",r})();J.registerClass(FD);var OD=(()=>{class r extends Et{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return B(()=>(t=Nt(t),t.dtype!=="float32"&&(t=tn(t,"float32")),K(R(t,this.scale),this.offset)))}}return r.className="Rescaling",r})();J.registerClass(OD);var{resizeBilinear:mY,cropAndResize:fY}=Hr,PD=(()=>{class r extends Et{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,n,o,s,i,a,u,l){return B(()=>{let c,p=!1,m=n/a,f=o/u,d=(s+n)/a,h=(i+o)/u,g=[m,f,d,h],x=[];t.rank===3?(p=!0,c=Be([t])):c=t;for(let _=0;_<c.shape[0];_++)x.push(g);let y=mr(x,[x.length,4]),w=ta(0,x.length,1,"int32"),N=fY(c,y,w,[s,i],"nearest");return p?tn(Nt(hr(N)),l):tn(N,l)})}upsize(t,n,o,s){return B(()=>{let i=mY(t,[n,o]);return tn(i,s)})}call(t,n){return B(()=>{let o=Nt(t),s=o.dtype,i=o.shape,a=i[i.length-3],u=i[i.length-2],l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let c=0;return u!==this.width&&(c=Math.floor((u-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(o,l,c,this.height,this.width,a,u,s):this.upsize(t,this.height,this.width,s)})}getConfig(){let t={height:this.height,width:this.width},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){t=Bt(t);let n=t.length-3,o=t.length-2;return t[n]=this.height,t[o]=this.width,t}}return r.className="CenterCrop",r})();J.registerClass(PD);function MD(r,e,t,n){let o=Nt(r);if(o.dtype!=="int32"&&(o=tn(o,"int32")),e==="int")return o;let s=o.shape;if(o.rank===0&&(o=Le(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Le(o,-1)),o.rank>2)throw new L(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${s} which would result in output rank ${o.rank}.`);let i=["multiHot","oneHot"].includes(e),a=o,u;if(typeof n<"u"&&e==="count"?u=xf(a,n,t,i):u=xf(a,[],t,i),e!=="tfIdf")return u;if(n)return R(u,n);throw new L("When outputMode is 'tfIdf', weights must be provided.")}var LD=(()=>{class r extends Et{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){return t=Bt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,n){return B(()=>{t=Nt(t),t.dtype!=="int32"&&(t=tn(t,"int32"));let o;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new L(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);o=Nt(n.countWeights)}let s=Cr(t),i=rl(t),a=ze(this.numTokens,s).bufferSync().get(0),u=ln(i,0).bufferSync().get(0);if(!(a&&u))throw new L(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return MD(t,this.outputMode,this.numTokens,o)})}}return r.className="CategoryEncoding",r})();J.registerClass(LD);var hY=["bilinear","nearest"],zD=new Set(hY),BD=(()=>{class r extends Et{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(zD.has(t.interpolation))this.interpolation=t.interpolation;else throw new L(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Bt(t);let n=t[2];return[this.height,this.width,n]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return B(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return Hr.resizeBilinear(t,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Hr.resizeNearestNeighbor(t,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...zD]} are supported`)})}}return r.className="Resizing",r})();J.registerClass(BD);var VD=(()=>{class r{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}return r.className="RandomSeed",r})();var GD=(()=>{class r extends Et{constructor(t){super(t),this.randomGenerator=new VD(t.seed)}getConfig(){let t={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(t,n),t}}return r.className="BaseRandomLayer",r})();var gY=["bilinear","nearest"],WD=new Set(gY),UD=(()=>{class r extends GD{constructor(t){super(t);let{factor:n,interpolation:o="bilinear"}=t;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new L(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new L(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new L(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(o)if(WD.has(o))this.interpolation=o;else throw new L(`Invalid interpolation parameter: ${o} is not implemented`)}getConfig(){let t={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){t=Bt(t);let n=t[2];return[this.imgHeight,-1,n]}call(t,n){return B(()=>{let o=Nt(t);this.imgHeight=o.shape[o.shape.length-3];let s=o.shape[o.shape.length-2];this.widthFactor=zn([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*s;i=Math.round(i);let a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Hr.resizeBilinear(t,a);case"nearest":return Hr.resizeNearestNeighbor(t,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...WD]} are supported`)}})}}return r.className="RandomWidth",r})();J.registerClass(UD);var CY=z();CY.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Gn=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(Gn||{}),HD;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(HD||(HD={}));var SY={};function bx(r){return SY[r]}function C(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd,l=a<0?e.inputNames.length+a:a;if(s.type==="tensor")return ur(e.inputNames[l],t,n,o);if(s.type==="tensors"){let m=e.inputs.slice(a,u);return e.inputNames.slice(a,u).filter((d,h)=>{var g;return((g=m[h])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(d=>ur(d,t,n,o))}let c=ur(e.inputNames[l],t,n,o),p=c.dataSync();return s.type==="number"?p[0]:b.toNestedArray(c.shape,p)}let i=e.attrParams[r];return i&&i.value}function ur(r,e,t,n){let[o,s]=gn(r,t);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=t.currentContextIds.find(a=>!!e[wx(o,a)]);return i!==void 0?e[wx(o,i)][s]:void 0}function _S(r,e,t){return e[wx(r,t.currentContextId)]}function di(r,e){let[t,n,o]=gn(r,e);return[wx(t,e&&e.currentContextId),n,o]}function wx(r,e){return e?`${r}-${e}`:r}function gn(r,e){if(r==="")return["",0,void 0];let t=e!=null&&e.parseNodeNameCache!=null;if(t){let s=e.parseNodeNameCache.get(r);if(s!=null)return s}let n=r.split(":"),o;if(n.length===1)o=[r,0,void 0];else{let s=n[0],i=n.length===3?n[1]:void 0,a=Number(n[n.length-1]);o=[s,a,i]}return t&&e.parseNodeNameCache.set(r,o),o}function Uf(r,e,t){let n=C("pad",r,e,t);if(n==="explicit"){n=C("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function hi(r){return r.kept?r:an(r)}var ES={};de(ES,{json:()=>NY});var NY=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var AS={};de(AS,{json:()=>kY});var kY=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var DS={};de(DS,{json:()=>TY});var TY=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var RS={};de(RS,{json:()=>_Y});var _Y=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var $S={};de($S,{json:()=>EY});var EY=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var FS={};de(FS,{json:()=>AY});var AY=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var OS={};de(OS,{json:()=>DY});var DY=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var PS={};de(PS,{json:()=>RY});var RY=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var MS={};de(MS,{json:()=>$Y});var $Y=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var LS={};de(LS,{json:()=>FY});var FY=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var zS={};de(zS,{json:()=>OY});var OY=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var BS={};de(BS,{json:()=>PY});var PY=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var VS={};de(VS,{json:()=>MY});var MY=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var GS={};de(GS,{json:()=>LY});var LY=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var WS={};de(WS,{json:()=>zY});var zY=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var US={};de(US,{json:()=>BY});var BY=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var HS={};de(HS,{json:()=>VY});var VY=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var qS={};de(qS,{json:()=>GY});var GY=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var KS={};de(KS,{json:()=>WY});var WY=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Hf=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[ES,AS,DS,RS,$S,FS,OS,PS,MS,LS,zS,BS,VS,GS,WS,US,HS,qS,KS],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],i=[],a=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&i.push(h[g.name]),h),{}),u=[],l=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(a);m.forEach(h=>{let g=a[h];g.inputNames.forEach((x,y)=>{let[w,,v]=di(x),N=a[w];if(N.outputs!=null){let _=N.outputs.indexOf(v);if(_!==-1){let A=`${w}:${_}`;g.inputNames[y]=A}}g.inputs.push(N),N.children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=a[h];g.children.length===0&&l.push(g)}):Object.keys(p).forEach(h=>{let[g]=di(h),x=a[g];x!=null&&(x.signatureKey=p[h],l.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=di(h),x=a[g];x&&(x.signatureKey=c[h],u.push(x))}):u=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:a,inputs:u,outputs:l,weights:s,placeholders:o,signature:t,functions:f};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=bx(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=vx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=vx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=_x(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=_x(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=Ix(e.attr,s.tfName,s.defaultValue||0),a===void 0&&s.tfDeprecatedName&&(a=Ix(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=Tx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Tx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=Cx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Cx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Ax(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ax(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=kx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=kx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Ex(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ex(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Sx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Sx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Nx(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Nx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=qD(e.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=qD(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let i=[],a=[];e.signature.inputArg.forEach(p=>{let[m]=di(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:jS(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,i.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach((f,d)=>{let[h,,g]=di(f),x=s[h];if(x.outputs!=null){let y=x.outputs.indexOf(g);if(y!==-1){let w=`${h}:${y}`;m.inputNames[d]=w}}m.inputs.push(x),x.children.push(m)})});let l=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=di(l[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,a.push(d))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function UY(r){let e=z().global;if(typeof e.atob<"u")return e.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function KD(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):UY(r);return e?t:t.toLowerCase()}function vx(r,e,t,n=!1){let o=r[e];return o!=null?KD(o.s,n):t}function Cx(r,e,t){let n=r[e];return n?n.b:t}function Ix(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function jS(r){switch(typeof r=="string"&&(r=Gn[r]),r){case Gn.DT_FLOAT:case Gn.DT_HALF:return"float32";case Gn.DT_INT32:case Gn.DT_INT64:case Gn.DT_INT8:case Gn.DT_UINT8:return"int32";case Gn.DT_BOOL:return"bool";case Gn.DT_DOUBLE:return"float32";case Gn.DT_STRING:return"string";case Gn.DT_COMPLEX64:case Gn.DT_COMPLEX128:return"complex64";default:return null}}function qD(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Sx(r,e,t){let n=r[e];return n&&n.type?jS(n.type):t}function Nx(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>jS(o)):t}function jD(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function kx(r,e,t){let n=r[e];return n&&n.shape?jD(n.shape):t}function Tx(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function _x(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>KD(s,n)):t}function Ex(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>jD(o)):t}function Ax(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var Dx=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return ur(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return ur(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Ix(this.node.rawAttrs,e,t);if(n.s!=null)return vx(this.node.rawAttrs,e,t);if(n.b!=null)return Cx(this.node.rawAttrs,e,t);if(n.shape!=null)return kx(this.node.rawAttrs,e,t);if(n.type!=null)return Sx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Tx(this.node.rawAttrs,e,t);if(n.list.s!=null)return _x(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Ex(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ax(this.node.rawAttrs,e,t);if(n.list.type!=null)return Nx(this.node.rawAttrs,e,t)}return t}};var ie={};de(ie,{OP_SCOPE_SUFFIX:()=>YC,abs:()=>Ee,acos:()=>dh,acosh:()=>hh,add:()=>K,addN:()=>bT,all:()=>_p,any:()=>Yu,argMax:()=>qi,argMin:()=>gh,asin:()=>xh,asinh:()=>yh,atan:()=>bh,atan2:()=>wh,atanh:()=>vh,avgPool:()=>tu,avgPool3d:()=>Ch,basicLSTMCell:()=>CT,batchNorm:()=>ji,batchNorm2d:()=>Ih,batchNorm3d:()=>Sh,batchNorm4d:()=>Nh,batchToSpaceND:()=>eu,bincount:()=>kh,bitwiseAnd:()=>ST,booleanMaskAsync:()=>A6,broadcastArgs:()=>NT,broadcastTo:()=>Xi,buffer:()=>wt,cast:()=>Q,ceil:()=>Th,clipByValue:()=>vr,clone:()=>an,complex:()=>wn,concat:()=>re,concat1d:()=>_h,concat2d:()=>Ju,concat3d:()=>Eh,concat4d:()=>Ah,conv1d:()=>Ap,conv2d:()=>vn,conv2dTranspose:()=>Rp,conv3d:()=>Dh,conv3dTranspose:()=>$h,cos:()=>ru,cosh:()=>$p,cosineWindow:()=>Cf,cumprod:()=>Qu,cumsum:()=>Fp,denseBincount:()=>xf,depthToSpace:()=>Fh,depthwiseConv2d:()=>Yi,diag:()=>kT,dilation2d:()=>Oh,div:()=>at,divNoNan:()=>Ph,dot:()=>Mh,dropout:()=>CI,einsum:()=>nu,elu:()=>Zi,enclosingPowerOfTwo:()=>II,ensureShape:()=>_T,equal:()=>Qr,erf:()=>Op,euclideanNorm:()=>Lh,exp:()=>je,expandDims:()=>Le,expm1:()=>zh,eye:()=>tc,fft:()=>fu,fill:()=>bo,floor:()=>Ji,floorDiv:()=>Tp,fused:()=>gu,gather:()=>Qi,gatherND:()=>B6,greater:()=>ze,greaterEqual:()=>ln,ifft:()=>il,imag:()=>ou,image:()=>Hr,inTopKAsync:()=>W6,irfft:()=>Kp,isFinite:()=>Bh,isInf:()=>Vh,isNaN:()=>Gh,leakyRelu:()=>su,less:()=>ol,lessEqual:()=>Ln,linalg:()=>NI,linspace:()=>DT,localResponseNormalization:()=>Wh,log:()=>Ir,log1p:()=>iu,logSigmoid:()=>Uh,logSoftmax:()=>Pp,logSumExp:()=>au,logicalAnd:()=>Wr,logicalNot:()=>lu,logicalOr:()=>Mp,logicalXor:()=>Hh,losses:()=>H5,lowerBound:()=>RT,matMul:()=>Gt,max:()=>Cr,maxPool:()=>uu,maxPool3d:()=>Kh,maxPoolWithArgmax:()=>$T,maximum:()=>In,mean:()=>Ne,meshgrid:()=>FT,min:()=>rl,minimum:()=>io,mirrorPad:()=>jh,mod:()=>Xh,moments:()=>ec,movingAverage:()=>$6,mul:()=>R,multiRNNCell:()=>OT,multinomial:()=>PT,neg:()=>Ut,norm:()=>nl,notEqual:()=>ii,oneHot:()=>rc,ones:()=>or,onesLike:()=>yr,op:()=>k,outerProduct:()=>MT,pad:()=>un,pad1d:()=>LT,pad2d:()=>zT,pad3d:()=>BT,pad4d:()=>VT,pool:()=>Yh,pow:()=>Gr,prelu:()=>pu,print:()=>fh,prod:()=>Zh,raggedGather:()=>GT,raggedRange:()=>WT,raggedTensorToTensor:()=>UT,rand:()=>HT,randomGamma:()=>a1,randomNormal:()=>sc,randomStandardNormal:()=>l1,randomUniform:()=>zn,randomUniformInt:()=>u1,range:()=>ta,real:()=>sl,reciprocal:()=>rg,relu:()=>$r,relu6:()=>Lp,reshape:()=>$,reverse:()=>fr,reverse1d:()=>c1,reverse2d:()=>p1,reverse3d:()=>m1,reverse4d:()=>f1,rfft:()=>du,round:()=>zp,rsqrt:()=>Bp,scalar:()=>pt,scatterND:()=>O6,searchSorted:()=>bf,selu:()=>Vp,separableConv2d:()=>Gp,setdiff1dAsync:()=>d1,sigmoid:()=>Dr,sign:()=>ng,signal:()=>U5,sin:()=>Wp,sinh:()=>Up,slice:()=>vt,slice1d:()=>Hp,slice2d:()=>vf,slice3d:()=>qp,slice4d:()=>ic,softmax:()=>mu,softplus:()=>si,spaceToBatchND:()=>cu,sparse:()=>q5,sparseToDense:()=>L6,spectral:()=>W5,split:()=>dr,sqrt:()=>ge,square:()=>Vt,squaredDifference:()=>jp,squeeze:()=>Fr,stack:()=>Be,step:()=>vo,stridedSlice:()=>og,string:()=>K5,sub:()=>nt,sum:()=>mt,tan:()=>sg,tanh:()=>oi,tensor:()=>mr,tensor1d:()=>Te,tensor2d:()=>Co,tensor3d:()=>ig,tensor4d:()=>h1,tensor5d:()=>g1,tensor6d:()=>x1,tensorScatterUpdate:()=>b1,tile:()=>Rr,topk:()=>ag,transpose:()=>Wt,truncatedNormal:()=>Yp,unique:()=>lg,unsortedSegmentSum:()=>Zp,unstack:()=>hr,upperBound:()=>w1,variable:()=>ug,where:()=>Se,whereAsync:()=>pg,zeros:()=>ke,zerosLike:()=>St});var XD=(r,e,t,n=ie)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(C("a",r,e,t),C("b",r,e,t))];case"AddN":return[n.addN(C("tensors",r,e,t))];case"FloorMod":case"Mod":return[n.mod(C("a",r,e,t),C("b",r,e,t))];case"Mul":return[n.mul(C("a",r,e,t),C("b",r,e,t))];case"RealDiv":case"Div":return[n.div(C("a",r,e,t),C("b",r,e,t))];case"DivNoNan":return[n.divNoNan(C("a",r,e,t),C("b",r,e,t))];case"FloorDiv":return[n.floorDiv(C("a",r,e,t),C("b",r,e,t))];case"Sub":return[n.sub(C("a",r,e,t),C("b",r,e,t))];case"Minimum":return[n.minimum(C("a",r,e,t),C("b",r,e,t))];case"Maximum":return[n.maximum(C("a",r,e,t),C("b",r,e,t))];case"Pow":return[n.pow(C("a",r,e,t),C("b",r,e,t))];case"SquaredDifference":return[n.squaredDifference(C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var YD=(r,e,t,n=ie)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(C("x",r,e,t))];case"Acos":return[n.acos(C("x",r,e,t))];case"Acosh":return[n.acosh(C("x",r,e,t))];case"Asin":return[n.asin(C("x",r,e,t))];case"Asinh":return[n.asinh(C("x",r,e,t))];case"Atan":return[n.atan(C("x",r,e,t))];case"Atan2":return[n.atan2(C("x",r,e,t),C("y",r,e,t))];case"Atanh":return[n.atanh(C("x",r,e,t))];case"Ceil":return[n.ceil(C("x",r,e,t))];case"Complex":return[n.complex(C("real",r,e,t),C("imag",r,e,t))];case"Cos":return[n.cos(C("x",r,e,t))];case"Cosh":return[n.cosh(C("x",r,e,t))];case"Elu":return[n.elu(C("x",r,e,t))];case"Erf":return[n.erf(C("x",r,e,t))];case"Exp":return[n.exp(C("x",r,e,t))];case"Expm1":return[n.expm1(C("x",r,e,t))];case"Floor":return[n.floor(C("x",r,e,t))];case"Log":return[n.log(C("x",r,e,t))];case"Log1p":return[n.log1p(C("x",r,e,t))];case"Imag":return[n.imag(C("x",r,e,t))];case"Neg":return[n.neg(C("x",r,e,t))];case"Reciprocal":return[n.reciprocal(C("x",r,e,t))];case"Real":return[n.real(C("x",r,e,t))];case"Relu":return[n.relu(C("x",r,e,t))];case"Round":return[n.round(C("x",r,e,t))];case"Selu":return[n.selu(C("x",r,e,t))];case"Sigmoid":return[n.sigmoid(C("x",r,e,t))];case"Sin":return[n.sin(C("x",r,e,t))];case"Sign":return[n.sign(C("x",r,e,t))];case"Sinh":return[n.sinh(C("x",r,e,t))];case"Softplus":return[n.softplus(C("x",r,e,t))];case"Sqrt":return[n.sqrt(C("x",r,e,t))];case"Square":return[n.square(C("x",r,e,t))];case"Tanh":return[n.tanh(C("x",r,e,t))];case"Tan":return[n.tan(C("x",r,e,t))];case"ClipByValue":return[n.clipByValue(C("x",r,e,t),C("clipValueMin",r,e,t),C("clipValueMax",r,e,t))];case"Relu6":return[n.relu6(C("x",r,e,t))];case"Rsqrt":return[n.rsqrt(ur(r.inputNames[0],e,t))];case"LeakyRelu":return[n.leakyRelu(C("x",r,e,t),C("alpha",r,e,t))];case"Prelu":return[n.prelu(C("x",r,e,t),C("alpha",r,e,t))];case"IsNan":return[n.isNaN(ur(r.inputNames[0],e,t))];case"IsInf":return[n.isInf(ur(r.inputNames[0],e,t))];case"IsFinite":return[n.isFinite(ur(r.inputNames[0],e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Wn(r,e,t=""){if(!(typeof r=="number"||typeof e=="number")){b.assert(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=e[n];b.assert(o<0||s<0||o===s,()=>t+` Shapes ${r} and ${e} must match`)}}}function ZD(r){return!(typeof r=="number"||r.some(e=>e<0))}function xm(r,e,t){let n=Rx(r,t),o=!ZD(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(s=>{n=Rx(s.shape,n)}),!ZD(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Rx(r,e){if(typeof r=="number")return e;if(typeof e=="number")return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);let t=[];for(let n=0;n<r.length;++n){let o=r[n],s=e[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[n]=o>=0?o:s}return t}var $x=class{constructor(e,t,n,o,s,i,a){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=pt(0),Re(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Wn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Re(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return mr([],[0].concat(this.elementShape));let n=this.readMany(e);return Wn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Be(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return mr([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return Wn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),re(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,hr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(u=>(n+=u,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,i=[];B(()=>{t=$(t,[1,n,s]);for(let u=0;u<e.length;++u){let c=[0,u===0?0:o[u-1],0],p=[1,e[u],s];i[u]=$(vt(t,c,p),this.elementShape)}return i});let a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}};var ym=class r{get id(){return this.idTensor.id}constructor(e,t,n,o=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Wn(t,s.shape,"TensorList shape mismatch: "),Re(s)}),this.idTensor=pt(0),this.maxNumElements=o,Re(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Wn(e,this.elementShape,"TensorList shape mismatch: ");let o=xm(this.elementShape,this.tensors,e);return B(()=>{let s=this.tensors.map(i=>$(i,o));return Be(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=xm(this.elementShape,this.tensors,e),o=this.tensors.pop();return o.kept=!1,Wn(o.shape,e,"TensorList shape mismatch: "),$(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Wn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Re(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new r([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Wn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let o=xm(this.elementShape,this.tensors,t);return $(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Wn(this.elementShape,t.shape,"TensorList shape mismatch: "),Re(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Wn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let o=xm(this.elementShape,this.tensors,n);return e.length===0?mr([],[0].concat(o)):B(()=>{let s=e.map(i=>$(this.tensors[i],o));return Be(s,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Wn(this.elementShape,t,"TensorList shape mismatch: ");let n=xm(this.elementShape,this.tensors,t);return this.size()===0?mr([],[0].concat(n)):B(()=>{let o=this.tensors.map(s=>$(s,n));return re(o,0)})}};function JD(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);Wn(o,e,"TensorList shape mismatch: ");let s=hr(r);return new ym(s,e,n)}function QD(r,e,t,n){return new ym([],r,e,n)}function tR(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new ym([],t,r.dtype,n),i=hr(r,0);return e.forEach((a,u)=>{s.setItem(a,i[u])}),s}function eR(r,e,t){let n=0,o=e.map(c=>(n+=c,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Rx(s,t),a=n===0?0:r.size/n,u=B(()=>{let c=[];r=$(r,[1,n,a]);for(let p=0;p<e.length;++p){let f=[0,p===0?0:o[p-1],0],d=[1,e[p],a];c[p]=$(vt(r,f,d),i)}return r.dispose(),c}),l=new ym([],t,r.dtype,e.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}var rR=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=C("thenBranch",r,e,t),o=C("elseBranch",r,e,t),s=C("cond",r,e,t),i=C("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=C("body",r,e,t),o=C("cond",r,e,t),s=C("args",r,e,t),i=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),a=s.map(c=>c.id),u=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let l=s;for(;u[0];){let c=l;l=await t.functionMap[n].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);let p=l.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{let n=C("pred",r,e,t);return[hi(n)]}case"Switch":{let n=C("pred",r,e,t),o=C("data",r,e,t);return o.kept||(o=hi(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>ur(o,e,t)!==void 0);if(n){let o=ur(n,e,t);return[hi(o)]}return}case"Enter":{let n=C("frameName",r,e,t),o=C("tensor",r,e,t);return t.enterFrame(n),[hi(o)]}case"Exit":{let n=C("tensor",r,e,t);return t.exitFrame(),[hi(n)]}case"NextIteration":{let n=C("tensor",r,e,t);return t.nextIteration(),[hi(n)]}case"TensorArrayV3":{let n=C("size",r,e,t),o=C("dtype",r,e,t),s=C("elementShape",r,e,t),i=C("dynamicSize",r,e,t),a=C("clearAfterRead",r,e,t),u=C("identicalElementShapes",r,e,t),l=C("name",r,e,t),c=new $x(l,o,n,s,u,i,a);return t.addTensorArray(c),[c.idTensor,pt(1)]}case"TensorArrayWriteV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),i=t.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("tensor",r,e,t),i=t.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=C("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=C("tensorArrayId",r,e,t),o=C("tensor",r,e,t),s=C("lengths",r,e,t),i=t.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[pt(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),i=t.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("elementShape",r,e,t),i=C("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=C("indices",r,e,t),o=C("tensor",r,e,t),s=C("elementShape",r,e,t),i=C("numElements",r,e,t),a=tR(o,n,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=C("elementShape",r,e,t),o=C("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=C(s,r,e,t),a=r.op==="TensorListReserve"?-1:i,u=QD(n,o,i,a);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=C("tensorListId",r,e,t),o=C("indices",r,e,t),s=C("elementShape",r,e,t),i=C("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),i=C("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),i=JD(n,o,s);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=C("tensorListId",r,e,t),o=t.getTensorList(n.id),s=C("dtype",r,e,t),i=C("elementShape",r,e,t);return[o.concat(s,i)]}case"TensorListPushBack":{let n=C("tensorListId",r,e,t),o=C("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("lengths",r,e,t),i=eR(n,s,o);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=C("tensorListId",r,e,t),o=t.getTensorList(n.id);return[pt(o.size(),"int32")]}case"TensorListResize":{let n=C("tensorListId",r,e,t),o=C("size",r,e,t),i=t.getTensorList(n.id).resize(o);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function nR(r,e,t){let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",i=!s,a=o==="prelu",u=n==="fusedbatchnorm",l=C("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=C("strides",r,e,t),p=Uf(r,e,t),m=C("dataFormat",r,e,t).toUpperCase(),f=C("dilations",r,e,t),[d,h]=C("args",r,e,t);i&&(h=d,d=void 0);let g=C("leakyreluAlpha",r,e,t);return{stride:c,pad:p,dataFormat:m,dilations:f,biasArg:d,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var oR=(r,e,t,n=ie)=>{switch(r.op){case"Conv1D":{let o=C("stride",r,e,t),s=C("pad",r,e,t),i=C("dataFormat",r,e,t).toUpperCase(),a=C("dilation",r,e,t);return[n.conv1d(C("x",r,e,t),C("filter",r,e,t),o,s,i,a)]}case"Conv2D":{let o=C("strides",r,e,t),s=Uf(r,e,t),i=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[n.conv2d(C("x",r,e,t),C("filter",r,e,t),[o[1],o[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=nR(r,e,t);return[n.fused.conv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=nR(r,e,t);return[n.fused.depthwiseConv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=C("outputShape",r,e,t),s=C("strides",r,e,t),i=Uf(r,e,t);return[n.conv2dTranspose(C("x",r,e,t),C("filter",r,e,t),o,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=C("strides",r,e,t),s=Uf(r,e,t),i=C("dilations",r,e,t),a=C("dataFormat",r,e,t).toUpperCase();return[n.depthwiseConv2d(C("input",r,e,t),C("filter",r,e,t),[o[1],o[2]],s,a,[i[1],i[2]])]}case"Conv3D":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[n.conv3d(C("x",r,e,t),C("filter",r,e,t),[o[1],o[2],o[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("kernelSize",r,e,t);return[n.avgPool(C("x",r,e,t),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("kernelSize",r,e,t);return[n.maxPool(C("x",r,e,t),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("kernelSize",r,e,t),a=C("includeBatchInIndex",r,e,t),{result:u,indexes:l}=n.maxPoolWithArgmax(C("x",r,e,t),[i[1],i[2]],[o[1],o[2]],s,a);return[u,l]}case"AvgPool3D":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("kernelSize",r,e,t);return[n.avgPool3d(C("x",r,e,t),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("kernelSize",r,e,t);return[n.maxPool3d(C("x",r,e,t),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=C("strides",r,e,t),s=C("pad",r,e,t),i=C("dilations",r,e,t),a=o[1],u=o[2],l=i[1],c=i[2];return[n.dilation2d(C("x",r,e,t),C("filter",r,e,t),[a,u],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sR=(r,e,t,n=ie)=>{switch(r.op){case"Fill":{let o=C("shape",r,e,t),s=C("dtype",r,e,t),i=C("value",r,e,t);return[n.fill(o,i,s)]}case"LinSpace":{let o=C("start",r,e,t),s=C("stop",r,e,t),i=C("num",r,e,t);return[n.linspace(o,s,i)]}case"Multinomial":{let o=C("logits",r,e,t),s=C("numSamples",r,e,t),i=C("seed",r,e,t);return[n.multinomial(o,s,i)]}case"OneHot":{let o=C("indices",r,e,t),s=C("depth",r,e,t),i=C("onValue",r,e,t),a=C("offValue",r,e,t),u=C("dtype",r,e,t);return[n.oneHot(o,s,i,a,u)]}case"Ones":return[n.ones(C("shape",r,e,t),C("dtype",r,e,t))];case"OnesLike":return[n.onesLike(C("x",r,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(C("shape",r,e,t),C("dtype",r,e,t),C("seed",r,e,t))];case"RandomUniform":return[n.randomUniform(C("shape",r,e,t),C("minval",r,e,t),C("maxval",r,e,t),C("dtype",r,e,t))];case"RandomUniformInt":return[n.randomUniformInt(C("shape",r,e,t),C("minval",r,e,t),C("maxval",r,e,t),C("seed",r,e,t))];case"Range":{let o=C("start",r,e,t),s=C("stop",r,e,t),i=C("step",r,e,t);return[n.range(o,s,i,C("dtype",r,e,t))]}case"TruncatedNormal":{let o=C("shape",r,e,t),s=C("mean",r,e,t),i=C("stdDev",r,e,t),a=C("seed",r,e,t);return[n.truncatedNormal(o,s,i,C("dtype",r,e,t),a)]}case"Zeros":return[n.zeros(C("shape",r,e,t),C("dtype",r,e,t))];case"ZerosLike":return[n.zerosLike(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function XS(r,e,t){let n=C("boxes",r,e,t),o=C("scores",r,e,t),s=C("maxOutputSize",r,e,t),i=C("iouThreshold",r,e,t),a=C("scoreThreshold",r,e,t),u=C("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}var iR=async(r,e,t,n,o=ie)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=XS(r,e,t),p=await o.image.nonMaxSuppressionWithScoreAsync(s,i,a,u,l,c);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=XS(r,e,t),c=C("padToMaxOutputSize",r,e,t),p=await o.image.nonMaxSuppressionPaddedAsync(s,i,a,u,l,c);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=XS(r,e,t);return[await o.image.nonMaxSuppressionAsync(s,i,a,u,l)]}case"Where":{let s=o.cast(C("condition",r,e,t),"bool"),i=[await o.whereAsync(s)];return s.dispose(),i}case"ListDiff":return o.setdiff1dAsync(C("x",r,e,t),C("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aR=(r,e,t,n=ie)=>{switch(r.op){case"LowerBound":{let o=C("sortedSequence",r,e,t),s=C("values",r,e,t);return[n.lowerBound(o,s)]}case"TopKV2":{let o=C("x",r,e,t),s=C("k",r,e,t),i=C("sorted",r,e,t),a=n.topk(o,s,i);return[a.values,a.indices]}case"UpperBound":{let o=C("sortedSequence",r,e,t),s=C("values",r,e,t);return[n.upperBound(o,s)]}case"Unique":{let o=C("x",r,e,t),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=C("x",r,e,t),s=C("axis",r,e,t),i=n.unique(o,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lR=(r,e,t,n=ie)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let o=C("default",r,e,t);return[ur(r.name,e,t)||o];case"Placeholder":return[ur(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=C("x",r,e,t);return[hi(c)]}case"IdentityN":return C("x",r,e,t).map(c=>hi(c));case"Snapshot":let s=C("x",r,e,t);return[hi(s)];case"Shape":return[n.tensor1d(C("x",r,e,t).shape,"int32")];case"ShapeN":return C("x",r,e,t).map(c=>n.tensor1d(c.shape));case"Size":return[n.scalar(C("x",r,e,t).size,"int32")];case"Rank":return[n.scalar(C("x",r,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=C("x",r,e,t),a=C("data",r,e,t),u=C("message",r,e,t),l=C("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Fx=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=pt(0),this.tensorMap=new Map,Re(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return pt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),B(()=>{let o=hr(t),s=n.length,i=o.length;b.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let u=n[a],l=o[a];Re(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return B(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,t);o.push(a)}return Be(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var uR=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=n.getHashTableHandleByName(r.name);if(o!=null)return[o];{let s=C("keyDType",r,e,t),i=C("valueDType",r,e,t),a=new Fx(s,i);return n.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),i=C("values",r,e,t);return[await n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),i=C("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=C("tableHandle",r,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cR=(r,e,t,n=ie)=>{switch(r.op){case"ResizeBilinear":{let o=C("images",r,e,t),s=C("size",r,e,t),i=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[n.image.resizeBilinear(o,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{let o=C("images",r,e,t),s=C("size",r,e,t),i=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],i,a)]}case"CropAndResize":{let o=C("image",r,e,t),s=C("boxes",r,e,t),i=C("boxInd",r,e,t),a=C("cropSize",r,e,t),u=C("method",r,e,t),l=C("extrapolationValue",r,e,t);return[n.image.cropAndResize(o,s,i,a,u,l)]}case"ImageProjectiveTransformV3":{let o=C("images",r,e,t),s=C("transforms",r,e,t),i=C("outputShape",r,e,t),a=C("fillValue",r,e,t),u=C("interpolation",r,e,t),l=C("fillMode",r,e,t);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pR=(r,e,t,n=ie)=>{switch(r.op){case"Equal":return[n.equal(C("a",r,e,t),C("b",r,e,t))];case"NotEqual":return[n.notEqual(C("a",r,e,t),C("b",r,e,t))];case"Greater":return[n.greater(C("a",r,e,t),C("b",r,e,t))];case"GreaterEqual":return[n.greaterEqual(C("a",r,e,t),C("b",r,e,t))];case"Less":return[n.less(C("a",r,e,t),C("b",r,e,t))];case"LessEqual":return[n.lessEqual(C("a",r,e,t),C("b",r,e,t))];case"LogicalAnd":return[n.logicalAnd(C("a",r,e,t),C("b",r,e,t))];case"LogicalNot":return[n.logicalNot(C("a",r,e,t))];case"LogicalOr":return[n.logicalOr(C("a",r,e,t),C("b",r,e,t))];case"Select":case"SelectV2":return[n.where(C("condition",r,e,t),C("a",r,e,t),C("b",r,e,t))];case"BitwiseAnd":return[n.bitwiseAnd(C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mR=(r,e,t,n=ie)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(C("a",r,e,t),C("b",r,e,t),C("transposeA",r,e,t),C("transposeB",r,e,t))];case"Einsum":return[n.einsum(C("equation",r,e,t),...C("tensors",r,e,t))];case"Transpose":return[n.transpose(C("x",r,e,t),C("perm",r,e,t))];case"_FusedMatMul":let[o,s]=C("fusedOps",r,e,t),i=o==="biasadd",a=s==="prelu",u=C("numArgs",r,e,t),l=C("leakyreluAlpha",r,e,t);if(i){if(a&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=C("args",r,e,t);return[n.fused.matMul({a:C("a",r,e,t),b:C("b",r,e,t),transposeA:C("transposeA",r,e,t),transposeB:C("transposeB",r,e,t),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:l})];case"MatrixBandPart":return[n.linalg.bandPart(C("a",r,e,t),C("numLower",r,e,t),C("numUpper",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fR=(r,e,t,n=ie)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(C("x",r,e,t),C("axis",r,e,t),C("keepDims",r,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"FusedBatchNormV3":return[n.batchNorm(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"LRN":return[n.localResponseNormalization(C("x",r,e,t),C("radius",r,e,t),C("bias",r,e,t),C("alpha",r,e,t),C("beta",r,e,t))];case"Softmax":return[n.softmax(C("x",r,e,t))];case"LogSoftmax":return[n.logSoftmax(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dR=(r,e,t,n=ie)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:o,outputDenseValues:s}=n.raggedGather(C("paramsNestedSplits",r,e,t),C("paramsDenseValues",r,e,t),C("indices",r,e,t),C("outputRaggedRank",r,e,t));return o.concat(s)}case"RaggedRange":{let{rtNestedSplits:o,rtDenseValues:s}=n.raggedRange(C("starts",r,e,t),C("limits",r,e,t),C("splits",r,e,t));return[o,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(C("shape",r,e,t),C("values",r,e,t),C("defaultValue",r,e,t),C("rowPartitionTensors",r,e,t),C("rowPartitionTypes",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hR=(r,e,t,n=ie)=>{switch(r.op){case"Max":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.max(C("x",r,e,t),a,u)]}case"Mean":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.mean(C("x",r,e,t),a,u)]}case"Min":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.min(C("x",r,e,t),a,u)]}case"Sum":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.sum(C("x",r,e,t),a,u)]}case"All":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.all(C("x",r,e,t),a,u)]}case"Any":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.any(C("x",r,e,t),a,u)]}case"ArgMax":{let a=C("axis",r,e,t);return[n.argMax(C("x",r,e,t),a)]}case"ArgMin":{let a=C("axis",r,e,t);return[n.argMin(C("x",r,e,t),a)]}case"Prod":{let a=C("axis",r,e,t),u=C("keepDims",r,e,t);return[n.prod(C("x",r,e,t),a,u)]}case"Cumprod":{let a=C("axis",r,e,t),u=C("exclusive",r,e,t),l=C("reverse",r,e,t);return[n.cumprod(C("x",r,e,t),a,u,l)]}case"Cumsum":{let a=C("axis",r,e,t),u=C("exclusive",r,e,t),l=C("reverse",r,e,t);return[n.cumsum(C("x",r,e,t),a,u,l)]}case"Bincount":let o=C("x",r,e,t),s=C("weights",r,e,t),i=C("size",r,e,t);return[n.bincount(o,s,i)];case"DenseBincount":{let a=C("x",r,e,t),u=C("weights",r,e,t),l=C("size",r,e,t),c=C("binaryOutput",r,e,t);return[n.denseBincount(a,u,l,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gR=(r,e,t,n=ie)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=C("n",r,e,t),s=C("axis",r,e,t),i=C("tensors",r,e,t);return i=i.slice(0,o),[n.concat(i,s)]}case"Gather":{let o=C("x",r,e,t),s=C("indices",r,e,t);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=C("axis",r,e,t),s=C("batchDims",r,e,t),i=C("x",r,e,t),a=C("indices",r,e,t);return[n.gather(i,n.cast(a,"int32"),o,s)]}case"Reverse":{let o=C("dims",r,e,t),s=[];for(let a=0;a<o.length;a++)o[a]&&s.push(a);let i=C("x",r,e,t);return[n.reverse(i,s)]}case"ReverseV2":{let o=C("axis",r,e,t),s=C("x",r,e,t);return[n.reverse(s,o)]}case"Slice":{let o=C("begin",r,e,t),s=C("size",r,e,t);return[n.slice(C("x",r,e,t),o,s)]}case"StridedSlice":{let o=C("begin",r,e,t),s=C("end",r,e,t),i=C("strides",r,e,t),a=C("beginMask",r,e,t),u=C("endMask",r,e,t),l=C("ellipsisMask",r,e,t),c=C("newAxisMask",r,e,t),p=C("shrinkAxisMask",r,e,t),m=C("x",r,e,t);return[n.stridedSlice(m,o,s,i,a,u,l,c,p)]}case"Pack":return B(()=>{let o=C("axis",r,e,t),s=C("tensors",r,e,t),i=s[0].shape,a=n.squeeze(s[0]).shape,u=s.map(l=>{let c=b.arraysEqual(l.shape,i);if(!c&&!b.arraysEqual(n.squeeze(l).shape,a))throw new Error("the input tensors shape does not match");return c?l:n.reshape(l,i)});return[n.stack(u,o)]});case"Unpack":{let o=C("axis",r,e,t),s=C("tensor",r,e,t);return n.unstack(s,o)}case"Tile":{let o=C("reps",r,e,t);return[n.tile(C("x",r,e,t),o)]}case"Split":case"SplitV":{let o=C("axis",r,e,t),s=C("numOrSizeSplits",r,e,t),i=C("x",r,e,t);return n.split(i,s,o)}case"ScatterNd":{let o=C("indices",r,e,t),s=C("values",r,e,t),i=C("shape",r,e,t);return[n.scatterND(o,s,i)]}case"GatherNd":{let o=C("x",r,e,t),s=C("indices",r,e,t);return[n.gatherND(o,s)]}case"SparseToDense":{let o=C("sparseIndices",r,e,t),s=C("outputShape",r,e,t),i=C("sparseValues",r,e,t),a=C("defaultValue",r,e,t);return[n.sparseToDense(o,i,s,i.dtype===a.dtype?a:n.cast(a,i.dtype))]}case"TensorScatterUpdate":{let o=C("indices",r,e,t),s=C("values",r,e,t),i=C("tensor",r,e,t);return[n.tensorScatterUpdate(i,o,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xR=(r,e,t,n=ie)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:i,reverseIndexMap:a}=n.sparse.sparseFillEmptyRows(C("indices",r,e,t),C("values",r,e,t),C("denseShape",r,e,t),C("defaultValue",r,e,t));return[o,s,i,a]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(C("inputIndices",r,e,t),C("inputShape",r,e,t),C("newShape",r,e,t));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(C("data",r,e,t),C("indices",r,e,t),C("segmentIds",r,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(C("data",r,e,t),C("indices",r,e,t),C("segmentIds",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yR=(r,e,t,n=ie)=>{switch(r.op){case"FFT":return[n.fft(C("x",r,e,t))];case"IFFT":return[n.ifft(C("x",r,e,t))];case"RFFT":return[n.rfft(C("x",r,e,t))];case"IRFFT":return[n.irfft(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bR=(r,e,t,n=ie)=>{switch(r.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(C("input",r,e,t),C("pattern",r,e,t),C("rewrite",r,e,t),C("replaceGlobal",r,e,t))];case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(C("data",r,e,t),C("dataSplits",r,e,t),C("separator",r,e,t),C("nGramWidths",r,e,t),C("leftPad",r,e,t),C("rightPad",r,e,t),C("padWidth",r,e,t),C("preserveShortSequences",r,e,t));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:i}=n.string.stringSplit(C("input",r,e,t),C("delimiter",r,e,t),C("skipEmpty",r,e,t));return[o,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(C("input",r,e,t),C("numBuckets",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wR=(r,e,t,n=ie)=>{switch(r.op){case"Cast":return[n.cast(C("x",r,e,t),C("dtype",r,e,t))];case"ExpandDims":{let o=C("axis",r,e,t);return[n.expandDims(C("x",r,e,t),o)]}case"Squeeze":{let o=C("axis",r,e,t);return[n.squeeze(C("x",r,e,t),o)]}case"Reshape":return[n.reshape(C("x",r,e,t),C("shape",r,e,t))];case"EnsureShape":return[n.ensureShape(C("x",r,e,t),C("shape",r,e,t))];case"MirrorPad":return[n.mirrorPad(C("x",r,e,t),C("padding",r,e,t),C("mode",r,e,t))];case"PadV2":case"Pad":return[n.pad(C("x",r,e,t),C("padding",r,e,t),C("constantValue",r,e,t))];case"SpaceToBatchND":{let o=C("blockShape",r,e,t),s=C("paddings",r,e,t);return[n.spaceToBatchND(C("x",r,e,t),o,s)]}case"BatchToSpaceND":{let o=C("blockShape",r,e,t),s=C("crops",r,e,t);return[n.batchToSpaceND(C("x",r,e,t),o,s)]}case"DepthToSpace":{let o=C("blockSize",r,e,t),s=C("dataFormat",r,e,t).toUpperCase();return[n.depthToSpace(C("x",r,e,t),o,s)]}case"BroadcastTo":return[n.broadcastTo(C("x",r,e,t),C("shape",r,e,t))];case"BroadcastArgs":return[n.broadcastArgs(C("s0",r,e,t),C("s1",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function YS(r,e,t,n,o=B){let s=((i,a,u)=>{switch(i.category){case"arithmetic":return o(()=>XD(i,a,u));case"basic_math":return o(()=>YD(i,a,u));case"control":return rR(i,a,u);case"convolution":return o(()=>oR(i,a,u));case"creation":return o(()=>sR(i,a,u));case"dynamic":return iR(i,a,u);case"evaluation":return o(()=>aR(i,a,u));case"image":return o(()=>cR(i,a,u));case"graph":return o(()=>lR(i,a,u));case"logical":return o(()=>pR(i,a,u));case"matrices":return o(()=>mR(i,a,u));case"normalization":return o(()=>fR(i,a,u));case"ragged":return o(()=>dR(i,a,u));case"reduction":return o(()=>hR(i,a,u));case"slice_join":return o(()=>gR(i,a,u));case"sparse":return o(()=>xR(i,a,u));case"spectral":return o(()=>yR(i,a,u));case"string":return o(()=>bR(i,a,u));case"transformation":return o(()=>wR(i,a,u));case"hash_table":return uR(i,a,u,n);case"custom":let l=bx(i.op);if(l&&l.customExecutor)return l.customExecutor(new Dx(i,a,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return b.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var qf=class{constructor(e={},t={},n={},o={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=o,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function ZS(r,e,t,n){let o=new Set,s=[],i=null,a=null,u=new Set,l=new Set(Object.keys(r).map(m=>gn(m)[0]));n=n||[];let c=new Set(n.map(m=>gn(m.name)[0])),p=[...e];for(;p.length>0;){let m=p.pop();if((Su(m)||g7(m)||x7(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&!l.has(m.name)&&!c.has(m.name)){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function vR(r,e){let{usedNodes:t,inputs:n}=e,o=Object.keys(n).map(g=>gn(g)[0]).map(g=>r.nodes[g]),s=r.initNodes||[],i=g=>t.has(typeof g=="string"?g:g.name);function a(g){return[...new Map(g.map(x=>[x.name,x])).values()]}let u=a([...o,...r.weights,...s]).filter(i),l=a([...u,...Object.values(r.nodes)]).filter(i),c=new Map(l.map(g=>[g.name,g])),p={};for(let g of l){p[g.name]=p[g.name]||0;for(let x of g.children)i(x)||(p[x.name]=Number.POSITIVE_INFINITY),p[x.name]=(p[x.name]||0)+1}let m=Object.entries(p).filter(([,g])=>g===0).map(([g])=>g),f=[...m];for(;m.length>0;){let g=m.pop(),x=c.get(g);for(let y of x.children.filter(i))--p[y.name]===0&&(f.push(y.name),m.push(y.name))}let d=f.map(g=>c.get(g)),h=p7(d,u);return m7(h,u),h}function p7(r,e){let t=new Map(r.map(i=>[i.name,i])),n=e.map(i=>i.name),o=new Set(n);for(;n.length>0;){let i=n.pop(),a=t.get(i);for(let u of a.children)!t.has(u.name)||o.has(u.name)||(o.add(u.name),n.push(u.name))}return r.filter(i=>o.has(i.name))}var bm=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function m7(r,e){let t=new Map(r.map((a,u)=>[a.name,u])),n=new Set(e.map(a=>a.name)),o=a=>n.has(typeof a=="string"?a:a.name),s=new Set(r.map(a=>a.name)),i=a=>s.has(typeof a=="string"?a:a.name);for(let a of r){for(let u of a.children.filter(i)){if(!t.has(u.name))throw new bm(`Child ${u.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(u.name))throw new bm(`Node ${a.name} is scheduled to run after its child ${u.name}.`)}if(!o(a))for(let u of a.inputs){if(!t.has(u.name))throw new bm(`Input ${u.name} of node ${a.name} is unreachable.`);if(t.get(u.name)>t.get(a.name))throw new bm(`Node ${a.name} is scheduled to run before its input ${u.name}.`)}}}function CR(r){let e=new Map(r.map((a,u)=>[a.name,u])),t=Number.MAX_SAFE_INTEGER,n=r.map((a,u)=>Su(a)?t:u),o=a=>{let u=n[e.get(a.name)];return u??-1},s=r.map((a,u)=>a.children.map(o).reduce((l,c)=>Math.max(l,c),n[u])),i=new Map;for(let a=0;a<r.length;++a){let u=s[a];if(u===t)continue;let l=r[a],c=r[u];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(l)}return i}var f7=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),d7=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),h7=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Su(r){return f7.has(r.op)}function g7(r){return d7.has(r.op)}function x7(r){return h7.has(r.op)}var Kf=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new r(e.functions[n],this)})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPARATOR)+"--"+o.join(this.SEPARATOR)}compile(e,t){let n=ZS(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let l=t.map(p=>p.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${c}]. Missing the following inputs: [${o}]`)}let a=vR(this.graph,n),u=CR(a);return{orderedNodes:a,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;let t=e.clone();return Re(t),t}cloneTensorList(e){return e?e.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(m=>this.graph.nodes[gn(m)[0]]),s=t.map(m=>gn(m)[0]),i=new Set(s),a=s.map(m=>this.graph.nodes[m]);a.length===0&&(a=this._outputs);let u=this.getCompilationKey(o,a),l=this.compiledMap.get(u);l==null&&(l=this.compile(e,a),this.compiledMap.set(u,l));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let c={},p={};return B(()=>{let m=new qf(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(x=>{let[y,w]=gn(x,m),v=[];v[w]=e[x],f[y]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(v))});let d=this.getFrozenTensorIds(f),{orderedNodes:h,nodeLiveUntilMap:g}=l;for(let x of h){if(f[x.name])continue;let y=YS(x,f,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${x.op}' returned a promise. Please use model.executeAsync() instead.`);f[x.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[x.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(x,f,m,d,i,g.get(x.name))}return this.parent==null&&m.dispose(d),t.map(x=>ur(x,f,m))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,i,a){if(!(Su(t)||i.has(e))){for(let u of n[e])u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length);for(let u of t.inputs){if(Su(u))continue;let l=_S(u.name,n,o);if(l!=null)for(let c of l){if(!c||c.kept||s.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,o,s,i){function a(u){return Su(u)||s.has(u.name)}if(!(Su(e)||i==null))for(let u of i){if(a(u))continue;let l=_S(u.name,t,n);for(let c of l)!c||c.kept||o.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,o={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let i=new qf(this.weightMap,o,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let a=await this.executeWithControlFlow(e,i,t,n),u=t.map(m=>ur(m,a,i)),l=u.map(m=>m.id),c=Object.keys(e).map(m=>e[m].id),p=new Set([...l,...c,...this.weightIds]);return Object.values(a).forEach(m=>{m.forEach(f=>{f&&!f.isDisposed&&!p.has(f.id)&&f.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(e,t,n){let o=e.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),i=s.map(v=>this.graph.nodes[gn(v)[0]]),a=n.map(v=>gn(v)[0]),u=new Set(a),l=a.map(v=>this.graph.nodes[v]);l.length===0&&(l=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:m,syncInputs:f}=ZS(e,l,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{let[N,_]=gn(v),A=[];A[_]=e[v],h[N]=A});let g={},x=this.getFrozenTensorIds(h),y={};for(;d.length>0;){let v=this.processStack(i,d,t,h,y,x,u,g,c);await Promise.all(v)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let w=l.filter(v=>!Su(v)&&!ur(v.name,h,t)).map(v=>v.name);if(w.length>0){let v="";throw m!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${v}`)}return h}processStack(e,t,n,o,s,i,a,u,l){let c=[];for(;t.length>0;){let p=t.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&C("isConstant",p.node,o,n)&&([m]=di(p.node.name,n)),o[p.node.name]==null){let f=YS(p.node,o,n,this._resourceManager);m||([m]=di(p.node.name,n));let d=n.currentContext;b.isPromise(f)?c.push(f.then(h=>(o[m]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(h)),n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,i,a,u),this.processChildNodes(p.node,t,n,o,s,l),h))):(o[m]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(f)),this.checkTensorForDisposal(m,p.node,o,n,i,a,u),this.processChildNodes(p.node,t,n,o,s,l))}else this.processChildNodes(p.node,t,n,o,s,l)}return c}processChildNodes(e,t,n,o,s,i){e.children.forEach(a=>{let[u]=di(a.name,n);s[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!ur(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})):a.inputNames.every(l=>!!ur(l,o,n))&&(s[u]=!0,t.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=gn(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((u,l)=>i[l]===-1||i[l]===u);b.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let o={};for(let s in e){let i=(n=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||n===void 0?void 0:n[s];i!=null?o[i.name]=e[s]:o[s]=e[s]}return o}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=gn(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var n,o;let s=(o=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||o===void 0?void 0:o[t];return s!=null?s.name:t},{})}checkOutputs(e){e.forEach(t=>{let[n]=gn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var Ox=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var y7="?tfjs-format=file",b7="model.json",Px=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=ai){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new Ox}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return b.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=await lh(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,o=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(o=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}if(this.signature=o,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Kf(Hf.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Hf.Instance.transformGraph(e.modelInitializer);this.initializer=new Kf(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof zt?[e]:e,n={};return t.forEach((o,s)=>n[this.structuredOutputKeys[s]]=o),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof zt)&&!Array.isArray(e)){let s=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(s!=null)for(let i in s){let a=s[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let o=0;return this.inputNodes.reduce((s,i)=>{var a,u,l;let c=(l=(u=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||u===void 0?void 0:u[i])===null||l===void 0?void 0:l.resourceId;return c!=null?s[i]=this.resourceIdToCapturedInput[c]:s[i]=e[o++],s},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let o=0;o<n.length;o++){let s=n[o],i=t[s];this.resourceIdToCapturedInput[i.resourceId]=e[o]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&$t(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function Mx(r,e={},t=ai){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof r=="string"&&(r=w7(r));let n=new Px(r,e,t);return await n.load(),n}function w7(r){return r.endsWith("/")||(r=r+"/"),`${r}${b7}${y7}`}var _7=Sl(wf());var k7=Sl(wf());var hpe=Symbol("out"),gpe=Symbol("field"),xpe=Symbol("quote"),ype=Symbol("quoteafterquote"),bpe=Symbol("quoteinquote");function et(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var z7=Kr.whereImpl,SR=(()=>{class r extends Lo{nextDataId(){return r.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new da(this,Mn())}write(t,n,o){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:o,refCount:1}),s}makeTensorInfo(t,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&b.isString(o[0])){let i=o.map(a=>b.encodeString(a));s=this.write(i,t,n)}else s=this.write(o,t,n);return{dataId:s,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){let n=this.data.get(t);n.refCount--}}move(t,n,o,s,i){this.data.set(t,{values:n,dtype:s,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:n,complexTensorInfos:o}=this.data.get(t);if(n==="complex64"){let s=this.readSync(o.real.dataId),i=this.readSync(o.imag.dataId);return I.mergeRealAndImagArrays(s,i)}return b.convertBackendValuesAndArrayBuffer(this.data.get(t).values,n)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let o=n.map(s=>b.decodeString(s));return wt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(t.shape,t.dtype,n)}makeOutput(t,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(t);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let n=b.now();return t(),{kernelMs:b.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){et([t],"where");let n=this.readSync(t.dataId);return z7(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return r.nextDataId=0,r})();var _0={};de(_0,{addImpl:()=>e0,bincountImpl:()=>Cm,bincountReduceImpl:()=>Lx,bitwiseAndImpl:()=>r0,castImpl:()=>t0,ceilImpl:()=>n0,concatImpl:()=>wc,equalImpl:()=>o0,expImpl:()=>i0,expm1Impl:()=>l0,floorDivImpl:()=>c0,floorImpl:()=>u0,gatherNdImpl:()=>zx,gatherV2Impl:()=>Bx,greaterEqualImpl:()=>m0,greaterImpl:()=>p0,lessEqualImpl:()=>d0,lessImpl:()=>f0,linSpaceImpl:()=>Vx,logImpl:()=>h0,maxImpl:()=>Gx,maximumImpl:()=>g0,minimumImpl:()=>x0,multiplyImpl:()=>jf,negImpl:()=>y0,notEqualImpl:()=>b0,prodImpl:()=>w0,raggedGatherImpl:()=>Wx,raggedRangeImpl:()=>Ux,raggedTensorToTensorImpl:()=>Hx,rangeImpl:()=>Cc,rsqrtImpl:()=>C0,scatterImpl:()=>gi,sigmoidImpl:()=>e$,simpleAbsImpl:()=>QS,sliceImpl:()=>Ic,sparseFillEmptyRowsImpl:()=>qx,sparseReshapeImpl:()=>Kx,sparseSegmentReductionImpl:()=>Sm,sqrtImpl:()=>o$,squaredDifferenceImpl:()=>S0,staticRegexReplaceImpl:()=>N0,stridedSliceImpl:()=>jx,stringNGramsImpl:()=>Sc,stringSplitImpl:()=>Nc,stringToHashBucketFastImpl:()=>kc,subImpl:()=>T0,tileImpl:()=>Xx,topKImpl:()=>Yx,transposeImpl:()=>Im,uniqueImpl:()=>Tc});function QS(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var B7=r=>{let{x:e}=r.inputs,t=r.backend;et(e,"abs");let n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=QS(o),t.makeOutput(n,e.shape,e.dtype)},NR={kernelName:Ci,backendName:"cpu",kernelFunc:B7};function Jt(r){return(e,t,n,o,s)=>{let i=I.assertAndGetBroadcastShape(e,t),a=i.length,u=b.computeStrides(i),l=b.sizeFromShape(i),c=b.getTypedArrayFromDType(s,l),p=e.length,m=t.length,f=b.computeStrides(e),d=b.computeStrides(t),h=I.getBroadcastDims(e,i),g=I.getBroadcastDims(t,i);if(h.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<c.length;++x){let y=b.indexToLoc(x,a,u),w=y.slice(-p);h.forEach(A=>w[A]=0);let v=b.locToIndex(w,p,f),N=y.slice(-m);g.forEach(A=>N[A]=0);let _=b.locToIndex(N,m,d);c[x]=r(n[v],o[_])}return[c,i]}}function br(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(n.shape,"complex64"),u=t.data.get(a.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",i)},a}var kR={kernelName:rp,backendName:"cpu",kernelFunc:br};function wm(r,e,t="float32"){if(t==="complex64"){let o=wm(r,e,"float32"),s=wm(r,e,"float32");return br({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function jr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var TR={kernelName:fo,backendName:"cpu",kernelFunc:jr};function Do(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var _R={kernelName:fp,backendName:"cpu",kernelFunc:Do};function t0(r,e,t,n){if(n==="int32"){let o=Int32Array.from(r);return[e,"int32",o]}if(n==="bool"){let o=b.toTypedArray([0],t),[s,i]=Jt((a,u)=>a!==u?1:0)(e,[],r,o,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${t} to ${n}`)}function Ro(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return jr({inputs:{x:o},backend:t});let c=wm(t,o.shape,o.dtype),p=Ro({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),m=br({inputs:{real:p,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(o.dtype==="complex64"){let c=Do({inputs:{input:o},backend:t}),p=Ro({inputs:{x:c},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(c),p}if(!b.hasEncodingLoss(o.dtype,s)){let c=jr({inputs:{x:o},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:s}}let i=t.data.get(o.dataId).values,[a,u,l]=t0(i,o.shape,o.dtype,s);return t.makeTensorInfo(a,u,l)}var ER={kernelName:po,backendName:"cpu",kernelFunc:Ro};function oe(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;et([i,a],r);let l=u.data.get(i.dataId).values,c=u.data.get(a.dataId).values,p=i.dtype==="string"?I.fromUint8ToStringArray(l):l,m=i.dtype==="string"?I.fromUint8ToStringArray(c):c,f=n||i.dtype,[d,h]=e(i.shape,a.shape,p,m,f);return u.makeTensorInfo(h,f,d)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let l=Ro({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=u.data.get(p.dataId).values,d=u.data.get(m.dataId).values,h=Ro({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,w=u.data.get(x.dataId).values,v=u.data.get(y.dataId).values,[N,_,A]=t(i.shape,a.shape,f,d,w,v),D=u.makeTensorInfo(A,"float32",N),F=u.makeTensorInfo(A,"float32",_),O=br({inputs:{real:D,imag:F},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(D),u.disposeIntermediateTensorInfo(F),O}else{let l=u.data.get(i.dataId).values,c=u.data.get(a.dataId).values,p=n||i.dtype,[m,f]=e(i.shape,a.shape,l,c,p);return u.makeTensorInfo(f,p,m)}}}function vm(r){return(e,t,n,o,s,i)=>{let a=I.assertAndGetBroadcastShape(e,t),u=b.sizeFromShape(a),l=a.length,c=b.computeStrides(a),p=b.getTypedArrayFromDType("float32",u),m=b.getTypedArrayFromDType("float32",u),f=I.getBroadcastDims(e,a),d=I.getBroadcastDims(t,a),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,i),x=e.length,y=b.computeStrides(e),w=t.length,v=b.computeStrides(t);if(f.length+d.length===0)for(let N=0;N<p.length;N++){let _=N%h.length,A=N%g.length,D=r(h[_*2],h[_*2+1],g[A*2],g[A*2+1]);p[N]=D.real,m[N]=D.imag}else for(let N=0;N<p.length;N++){let _=b.indexToLoc(N,l,c),A=_.slice(-x);f.forEach(G=>A[G]=0);let D=b.locToIndex(A,x,y),F=_.slice(-w);d.forEach(G=>F[G]=0);let O=b.locToIndex(F,w,v),V=r(h[D*2],h[D*2+1],g[O*2],g[O*2+1]);p[N]=V.real,m[N]=V.imag}return[p,m,a]}}var e0=Jt((r,e)=>r+e),V7=vm((r,e,t,n)=>({real:r+t,imag:e+n})),oa=oe(eo,e0,V7),AR={kernelName:eo,backendName:"cpu",kernelFunc:oa};function Cm(r,e,t,n,o){let s=b.sizeFromShape(n),i=b.makeZerosTypedArray(o,t);for(let a=0;a<r.length;a++){let u=r[a];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?i[u]+=e[a]:i[u]+=1)}return i}function Lx(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],i=wt([o,t],e.dtype);for(let a=0;a<o;a++)for(let u=0;u<s;u++){let l=r.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(n?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,u),a,l):i.set(i.get(a,l)+1,a,l))}return i}var r0=Jt((r,e)=>r&e),G7=oe(ba,r0),DR={kernelName:ba,backendName:"cpu",kernelFunc:G7};function kr(r){return(e,t,n)=>{let o=b.getArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function At(r,e,t){let n=kr(e);return Nn(r,n,t)}function Nn(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;et(i,r);let a=s,u=a.data.get(i.dataId).values,l;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=I.fromUint8ToStringArray(u)}else l=u;let c=t||i.dtype,p=e(l,c,o);return a.makeTensorInfo(i.shape,c,p)}}var n0=kr(r=>Math.ceil(r)),W7=Nn(Xo,n0),RR={kernelName:Xo,backendName:"cpu",kernelFunc:W7};function wc(r,e,t,n){let o=b.getArrayFromDType(t,b.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=t==="string"?I.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let c=l*e[1]+s;for(let p=0;p<i.shape[1];++p)o[c+p]=a[u++]}s+=i.shape[1]})}return o}var o0=Jt((r,e)=>r===e?1:0),s0=oe(ka,o0,null,"bool"),$R={kernelName:ka,backendName:"cpu",kernelFunc:s0};var i0=kr(r=>Math.exp(r)),a0=Nn(as,i0,"float32"),FR={kernelName:as,backendName:"cpu",kernelFunc:a0};var l0=kr(r=>Math.expm1(r)),U7=Nn(ls,l0),OR={kernelName:ls,backendName:"cpu",kernelFunc:U7};var u0=kr(r=>Math.floor(r)),H7=Nn(us,u0),PR={kernelName:us,backendName:"cpu",kernelFunc:H7};var c0=Jt((r,e)=>Math.floor(r/e)),q7=oe(cs,c0,null,"int32"),MR={kernelName:cs,backendName:"cpu",kernelFunc:q7};function zx(r,e,t,n,o,s,i,a,u){let l=wt([n,s],t);for(let c=0;c<n;c++){let p=[],m=0;for(let f=0;f<o;f++){let d=r[c*o+f];m+=d*i[f],p.push(d)}if(m<0||m>=u/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)l.values[c*s+f]=e.get(...e.indexToLoc(m*s+f))}return l}function Bx(r,e,t){let n=wt(t,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],u=i[2],l=e.locToIndex([a,u]);i[2]=e.values[l];let c=r.locToIndex(i);0<=c&&c<r.values.length&&(n.values[o]=r.values[c])}return n}var p0=Jt((r,e)=>r>e?1:0),K7=oe(Ea,p0,null,"bool"),LR={kernelName:Ea,backendName:"cpu",kernelFunc:K7};var m0=Jt((r,e)=>r>=e?1:0),j7=oe(ms,m0,null,"bool"),zR={kernelName:ms,backendName:"cpu",kernelFunc:j7};var f0=Jt((r,e)=>r<e?1:0),X7=oe(Aa,f0,null,"bool"),BR={kernelName:Aa,backendName:"cpu",kernelFunc:X7};var d0=Jt((r,e)=>r<=e?1:0),Y7=oe(Da,d0,null,"bool"),VR={kernelName:Da,backendName:"cpu",kernelFunc:Y7};function Vx(r,e,t){let n=(e-r)/(t-1),o=b.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var h0=kr(r=>Math.log(r)),Z7=Nn(xs,h0),GR={kernelName:xs,backendName:"cpu",kernelFunc:Z7};function Gx(r,e,t,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(t));for(let s=0;s<o.length;++s){let i=s*e,a=r[i];for(let u=0;u<e;++u){let l=r[i+u];(Number.isNaN(l)||l>a)&&(a=l)}o[s]=a}return o}var g0=Jt((r,e)=>Math.max(r,e)),J7=oe(vs,g0),WR={kernelName:vs,backendName:"cpu",kernelFunc:J7};var x0=Jt((r,e)=>Math.min(r,e)),Q7=oe(Ns,x0),UR={kernelName:Ns,backendName:"cpu",kernelFunc:Q7};var jf=Jt((r,e)=>r*e),tZ=vm((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),vc=oe(_s,jf,tZ),HR={kernelName:_s,backendName:"cpu",kernelFunc:vc};function y0(r,e,t){let n=b.createScalarValue(-1,t);return jf([],e,n,r,t)}function eZ(r){let{inputs:e,backend:t}=r,{x:n}=e;et(n,"neg");let o=t.data.get(n.dataId).values,[s,i]=y0(o,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,s)}var qR={kernelName:Di,backendName:"cpu",kernelFunc:eZ};var b0=Jt((r,e)=>r!==e?1:0),rZ=oe(La,b0,null,"bool"),KR={kernelName:La,backendName:"cpu",kernelFunc:rZ};function Im(r,e,t,n,o){let s=e.length,i=b.sizeFromShape(e),a=b.computeStrides(e),u=b.computeStrides(o),l=b.getTypedArrayFromDType(t,b.sizeFromShape(o));for(let c=0;c<i;++c){let p=b.indexToLoc(c,s,a),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=b.locToIndex(m,s,u);l[f]=r[c]}return l}function Ue(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;et(o,"transpose");let i=o.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=o.shape[s[p]];let u=n.data.get(o.dataId).values,l=Im(u,o.shape,o.dtype,s,a);return{dataId:n.write(l,a,o.dtype),shape:a,dtype:o.dtype}}var jR={kernelName:no,backendName:"cpu",kernelFunc:Ue};function w0(r,e,t,n){let[o,s]=I.computeOutAndReduceShapes(r,n),i=ir(e,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(o),i),u=b.sizeFromShape(s);for(let l=0;l<a.length;++l){let c=l*u,p=1;for(let m=0;m<u;++m)p*=t[c+m];a[l]=p}return{outVals:a,outShape:o,outDtype:i}}function nZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;et(o,"prod");let a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=I.getAxesPermutation(u,a),c=u,p=o,m=[];l!=null&&(p=Ue({inputs:{x:o},backend:t,attrs:{perm:l}}),m.push(p),c=I.getInnerMostAxes(c.length,a));let f=t.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=w0(p.shape,p.dtype,f,c),x=h;return i&&(x=I.expandShapeToKeepDim(h,u)),m.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,g,d)}var XR={kernelName:$s,backendName:"cpu",kernelFunc:nZ};function oZ(r,e,t){r.forEach((n,o)=>{if(n<0||n>=t){let s=b.indexToLoc(o,e.length,b.computeStrides(e)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${t})`)}})}function sZ(r,e){for(let t=0;t<r.length;++t){let n=r[t],o=t===r.length-1?e:r[t+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function iZ(r,e,t,n){let o=[],s=0,i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);sZ(t,n);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];let c=e[l+1];for(let p=1;p<u+1;++p)a[l].push(p*c)}for(let l=0;l<r.length;++l){let c=r[l],p=r[l]+1;for(let m=0;m<t.length;++m){let f=t[m],d=m+e.length-1;if(d>=0){let h=a[d],g=h[h.length-1]-f[c];for(let x=c;x<p;++x)a[d].push(f[x+1]+g)}c=f[c],p=f[p]}p!==c&&(o.push([c,p]),s+=p-c)}return{outSplits:a,valueSlices:o,numValues:s}}function aZ(r){let e=[];for(let t=0;t<r.length;++t){let n=r[t].length,o=b.getArrayFromDType("int32",n);e.push(o),r[t].forEach((s,i)=>o[i]=s)}return e}function YR(r,e){let t=r.slice(0,e);for(;t.length<e;)t.push(1);for(let n=e;n<r.length;n++)t[e-1]*=r[n];return t}function lZ(r,e,t,n,o,s){let i=YR(e,2)[1],a=YR(s,2)[1],u=0;for(let l of t)for(let c=l[0];c<l[1];++c){for(let p=0;p<n;++p)o[u*a+p]=r[c*i+p];++u}}function uZ(r,e,t,n,o){let s=e.slice();s[0]=o;let i=b.getArrayFromDType(t,b.sizeFromShape(s)),a=r.length,u=a===0?0:a/e[0];return lZ(r,e,n,u,i,s),[i,s]}function Wx(r,e,t,n,o,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");let u=e[0][0]-1;if(oZ(s,i,u),n.length===0)throw new Error("params.rank must be nonzero");let l=n[0],{outSplits:c,valueSlices:p,numValues:m}=iZ(s,i,r,l),f=aZ(c),d=uZ(t,n,o,p,m);return[f,d[0],d[1]]}var ZR=2147483647;function Ux(r,e,t,n,o,s,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=e.length===0,u=o.length===0,l=i.length===0,c=[];a||c.push(e[0]),u||c.push(o[0]),l||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],m=b.getArrayFromDType("int32",p+1);m[0]=0;for(let g=0;g<p;++g){let x=a?r[0]:r[g],y=u?n[0]:n[g],w=l?s[0]:s[g];if(w===0)throw new Error("Requires delta != 0");let v;if(w>0&&y<x||w<0&&y>x)v=0;else if(v=Math.ceil(Math.abs((y-x)/w)),v>ZR)throw new Error(`Requires ((limit - start) / delta) <= ${ZR}`);m[g+1]=m[g]+v}let f=m[p],d=b.getArrayFromDType(t,f),h=0;for(let g=0;g<p;++g){let x=m[g+1]-m[g],y=a?r[0]:r[g],w=l?s[0]:s[g];for(let v=0;v<x;++v)d[h++]=y,y+=w}return[m,d]}var $o=I.RowPartitionType,v0=class r{constructor(e,t,n,o,s,i,a,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=o,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=I.getRowPartitionTypesHelper(c),this.raggedRank=I.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===$o.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===$o.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case $o.VALUE_ROWIDS:return r.getMaxWidthValueRowID(t);case $o.ROW_SPLITS:return r.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${$o[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let n=0;for(let o=0;o<t-1;++o){let s=e[o+1]-e[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let n=0,o=e[0],s=0;for(let i=1;i<t;++i){let a=e[i];a!==o&&(o=a,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return QR(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;I.validateDefaultValueShape(n,t);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=I.combineRaggedTensorToTensorShapes(this.raggedRank,o,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,n){let o=Math.min(e,n),s=[],i=0;for(let a=0;a<o;++a,i+=t)s.push(i);for(let a=o;a<e;++a)s.push(-1);return b.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,o){let s=e.length,i=[];for(let a=0;a<s-1;++a){let u=e[a+1]-e[a],l=Math.min(o,u),c=t[a];c===-1&&(l=0);for(let p=0;p<l;++p)i.push(c),c+=n;for(let p=0;p<u-l;++p)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,o){let s=e.length,i=[];if(s===0)return[];let a=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let l=t[u];i.push(l);for(let c=1;c<s;++c){let p=e[c];if(p===u)l>=0&&(++a,a<o?l+=n:l=-1);else{if(a=0,u=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);l=t[p]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,o){let s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case $o.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,o);case $o.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,o);default:throw new Error(`Unsupported partition type: ${$o[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case $o.FIRST_DIM_SIZE:return e[0];case $o.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case $o.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${$o[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let u=o.length-2;u>=0;--u)o[u]=o[u+1]*n[u+1];let s=QR(n,!1),i=b.getArrayFromDType(this.valuesDType,b.sizeFromShape(s));if(o[0]*n[0]>0){let u=this.calculateFirstParentOutputIndex(t,o[0],n[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,o[l],n[l]);this.setOutput(this.raggedRank,u,i,s)}return[s,i]}setOutput(e,t,n,o){if(n.length===0)return;let s=this.values,i=n,a=o.slice();a=a.slice(e+1);let u=b.sizeFromShape(a),l=t.length,c=this.defaultValue;if(c.length!==u&&c.length!==1){let d=this.defaultValueShape;B(()=>{let h=$(c,d);c=Xi(h,a).dataSync()})}let p=0,m=0,f=0;for(let d=0;d<=l;++d){let h=d<l?t[d]:-1;if(h===f){++f;continue}if(m<f){let g=s.subarray(p*u),x=i.subarray(m*u),y=(f-m)*u;JR(x,g,y)}if(d>=l){let g=n.length;h=Math.floor(g/u)}if(h>f)if(this.defaultValue.length===1)i.subarray(f*u,h*u).fill(this.defaultValue[0]),f=h;else for(;h>f;){let g=i.slice(f*u);JR(g,c,u),++f}h<0?(p=d+1,m=f):(p=d,m=f,f=m+1)}}};function JR(r,e,t){for(let n=0;n<t;n++)r[n]=e[n]}function QR(r,e){let t=[];for(let n of r){if(n<0){if(!e)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}t.push(n)}return t}function Hx(r,e,t,n,o,s,i,a,u,l){return new v0(r,e,t,n,o,s,i,a,u,l).compute()}function Cc(r,e,t,n){let o=r===e,s=r<e&&t<0,i=e<r&&t>1;if(o||s||i)return b.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((e-r)/t)),u=b.makeZerosTypedArray(a,n);e<r&&t===1&&(t=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}var C0=kr(r=>1/Math.sqrt(r)),cZ=Nn(Vs,C0),t$={kernelName:Vs,backendName:"cpu",kernelFunc:cZ};function gi(r,e,t,n,o,s,i,a,u,l){let c=[n/o,o],p=r.values,m=e.values;if(n===0)return wt(t,e.dtype);let f=u instanceof ae?u:wt(c,e.dtype);typeof u=="string"||typeof u=="number"?f.values.fill(u):typeof u=="boolean"&&f.values.fill(+u);for(let d=0;d<s;d++){let h=[],g=0;for(let x=0;x<i;x++){let y=p[d*i+x];h.push(y),g+=y*a[x]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let x=0;x<o;x++)l?f.values[g*o+x]+=m[d*o+x]:f.values[g*o+x]=e.rank===0?m[0]:m[d*o+x]}return f}var e$=kr(r=>1/(1+Math.exp(-r))),I0=At(qs,r=>1/(1+Math.exp(-r))),r$={kernelName:qs,backendName:"cpu",kernelFunc:I0};function Ic(r,e,t,n,o){let s=Ve.isSliceContinous(n,e,t),i=b.sizeFromShape(t),a=b.computeStrides(n);if(s){let p=Ve.computeFlatOffset(e,a);return o==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let u=o==="string"?I.fromUint8ToStringArray(r):r,l=wt(n,o,u),c=wt(t,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+e[h]);c.set(l.get(...f),...m)}return o==="string"?I.fromStringArrayToUint8(c.values):c.values}function Fo(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n;et(o,"slice");let[a,u]=Ve.parseSliceParams(o,s,i);Ve.assertParamsValid(o,a,u);let l=t.data.get(o.dataId).values,c=Ic(l,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,c)}var n$={kernelName:Pi,backendName:"cpu",kernelFunc:Fo};function qx(r,e,t,n,o,s,i){let a=e[0],u=s[0],l=new Array(u),c=new Array(a),p=e[1];if(u===0){if(a!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=b.getArrayFromDType(t,0),x=b.getArrayFromDType(o,0);return[g,[0,p],x,l,c]}let m=!0,f=0,d=new Array(u).fill(0);for(let g=0;g<a;++g){let x=r[g*p];if(x<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,x));if(x>=u)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,x,u));++d[x],m=m&&x>=f,f=x}let h=!0;for(let g=0;g<u;++g){let x=d[g]===0;l[g]=x,h=h&&!x,d[g]=Math.max(d[g],1),g>0&&(d[g]+=d[g-1])}if(h&&m){let g=r,x=n;for(let y=0;y<a;++y)c[y]=y;return[g,[a,p],x,l,c]}else{let g=d[u-1],x=b.getArrayFromDType(t,g*p),y=b.getArrayFromDType(o,g),w=new Array(u).fill(0);for(let v=0;v<a;++v){let N=r[v*p],_=w[N],A=(N===0?0:d[N-1])+_;w[N]++;for(let D=0;D<p;++D)x[A*p+D]=r[v*p+D];y[A]=n[v],c[v]=A}for(let v=0;v<u;++v)if(w[v]===0){let _=v===0?0:d[v-1];x[_*p+0]=v;for(let A=1;A<p;++A)x[_*p+A]=0;y[_]=i}return[x,[g,p],y,l,c]}}function Kx(r,e,t,n,o){let s=b.sizeFromShape(n),i=e[0],a=o.length,u=[],l=1,c=-1;for(let g=0;g<a;++g){let x=o[g];if(x===-1){if(c!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,u.push(1)}else{if(x<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,x));l*=x,u.push(x)}}if(c!==-1){if(l<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[c]=g}if(b.sizeFromShape(u)!==s)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let m=n.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*n[g+1]}let d=[];if(a>0){d[a-1]=1;for(let g=a-2;g>=0;--g)d[g]=d[g+1]*u[g+1]}let h=b.getArrayFromDType(t,i*a);for(let g=0;g<i;++g){let x=0;for(let y=0;y<m;++y)x+=r[g*m+y]*f[y];for(let y=0;y<a;++y)h[g*a+y]=Math.trunc(x/d[y]),x%=d[y]}return[h,[i,a],u]}function Sm(r,e,t,n,o,s=!1,i=0){let a=n.length,u=[e[0],r.length/e[0]],l=u[1],p=a>0?o[a-1]+1:0;if(p<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=e.slice();m[0]=p;let f=m.reduce((w,v)=>w*v,1),d=b.getArrayFromDType(t,f);if(a===0)return p>0&&d.fill(i),[d,m];if(p<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,x=0,y=o[h];for(;;){let w=0;if(g<a){if(w=o[g],y===w){++g;continue}if(y>=w)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>x&&d.fill(i,x*l,y*l);for(let v=h;v<g;++v){let N=n[v];if(N<0||N>=u[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v,n[v],u[0]));for(let _=0;_<l;_++)d[y*l+_]+=r[N*l+_]}if(s)for(let v=0;v<l;v++)d[y*l+v]/=g-h;if(h=g,++g,x=y+1,y=w,g>a)break}return x<p&&d.fill(i,x*l,p*l),[d,m]}var o$=kr(r=>Math.sqrt(r)),pZ=At(js,r=>Math.sqrt(r)),s$={kernelName:js,backendName:"cpu",kernelFunc:pZ};var S0=Jt((r,e)=>{let t=r-e;return t*t}),mZ=oe(Zs,S0),i$={kernelName:Zs,backendName:"cpu",kernelFunc:mZ};var N0=kr((r,e)=>{let{pattern:t,replaceGlobal:n,rewrite:o}=e;return r.replace(new RegExp(t,n?"g":""),o)}),fZ=Nn(Lu,N0),a$={kernelName:Lu,backendName:"cpu",kernelFunc:fZ};function jx(r,e,t,n){let o=wt(r,e.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*t[u]+n[u];o.set(e.get(...a),...i)}return o}var k0=class{constructor(e,t,n,o,s,i){this.separator=b.encodeString(e),this.nGramWidths=t,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,s,i){for(let a=0;a<s;++a){let u=this.getPadWidth(i),l=Math.max(0,u-a),c=Math.max(0,u-(s-(a+1))),p=i-(l+c),m=t+(l>0?0:a-u),f=0;f+=l*this.leftPad.length;for(let y=0;y<p;++y)f+=e[m+y].length;f+=c*this.rightPad.length;let d=l+c+p-1;f+=d*this.separator.length,n[o+a]=new Uint8Array(f);let h=n[o+a],g=0,x=y=>y.forEach(w=>h[g++]=w);for(let y=0;y<l;++y)x(this.leftPad),x(this.separator);for(let y=0;y<p-1;++y)x(e[m+y]),x(this.separator);if(p>0){x(e[m+p-1]);for(let y=0;y<c;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<c-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){let n=e.length,o=t.length;if(o>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let c=t[l]>=u;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${n}]`);u=t[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,i=b.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)i[l]=0;return[u,i]}i[0]=0;for(let u=1;u<=s;++u){let l=t[u]-t[u-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(l,p)}),this.preserveShort&&l>0&&c===0&&(c=1),i[u]=i[u-1]+c}let a=new Array(i[s]);for(let u=0;u<s;++u){let l=t[u],c=i[u];if(this.nGramWidths.forEach(p=>{let m=t[u+1]-t[u],f=this.getNumNGrams(m,p);this.createNGrams(e,l,a,c,f,p),c+=f}),this.preserveShort&&c===i[u]){let p=t[u+1]-t[u];if(p===0)continue;let m=p+2*this.padWidth;this.createNGrams(e,l,a,c,1,m)}}return[a,i]}};function Sc(r,e,t,n,o,s,i,a){return new k0(t,n,o,s,i,a).compute(r,e)}function dZ(r,e,t,n){if(!r.length)return;if(e.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(e.length===1){let s=e[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!t||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!t||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||e.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!t||i.length!==0)&&n.push(i),o=s+1}}function Nc(r,e,t){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let m=0;m<n;++m){let f=o.length;dZ(r[m],e,t,o);let d=o.length-f;a[m]=d,s+=d,i=Math.max(i,d)}let u=b.getArrayFromDType("int32",s*2),l=new Array(s),c=[n,i],p=0;for(let m=0;m<n;++m)for(let f=0;f<a[m];++f)u[p*2]=m,u[p*2+1]=f,l[p]=o[p],++p;return[u,l,c]}function kc(r,e){let t=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)t[n]=b.fingerPrint64(r[n]).modulo(e).getLowBitsUnsigned();return t}var T0=Jt((r,e)=>r-e),hZ=vm((r,e,t,n)=>({real:r-t,imag:e-n})),Xf=oe(Js,T0,hZ),l$={kernelName:Js,backendName:"cpu",kernelFunc:Xf};function Xx(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=wt(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%r.shape[u];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Yf=(r,e)=>{let t=e.value-r.value;return t===0?r.index-e.index:t};function u$(r,e,t=0,n=r.length-1){for(;n>t;){if(n-t>600){let a=n-t+1,u=e-t+1,l=Math.log(a),c=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),m=Math.max(t,Math.floor(e-u*c/a+p)),f=Math.min(n,Math.floor(e+(a-u)*c/a+p));u$(r,e,m,f)}let o=r[e],s=t,i=n;for(b.swap(r,t,e),Yf(r[n],o)>0&&b.swap(r,t,n);s<i;){for(b.swap(r,s,i),s++,i--;Yf(r[s],o)<0;)s=s+1;for(;Yf(r[i],o)>0;)i=i-1}Yf(r[t],o)===0?b.swap(r,t,i):(i=i+1,b.swap(r,i,n)),i<=e&&(t=i+1),e<=i&&(n=i-1)}}function Yx(r,e,t,n,o){let s=e[e.length-1],[i,a]=[r.length/s,s],u=b.getTypedArrayFromDType(t,i*n),l=b.getTypedArrayFromDType("int32",i*n);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),d=new Array(f.length);f.forEach((y,w)=>d[w]={value:y,index:w}),n<d.length&&(u$(d,n),d=d.slice(0,n)),o&&d.sort(Yf);let h=p*n,g=u.subarray(h,h+n),x=l.subarray(h,h+n);for(let y=0;y<n;y++)g[y]=d[y].value,x[y]=d[y].index}let c=e.slice();return c[c.length-1]=n,[wt(c,t,u),wt(c,"int32",l)]}function Tc(r,e,t,n){let o=b.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let i=new Map,a=new Int32Array(t[o]),u=new ae(s,n,r),l=[],c=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(c)h=r[d].toString();else{let x=[];for(let y=0;y<s[0];y++)for(let w=0;w<s[2];w++)x.push(u.get(y,d,w));h=x.join(",")}let g=i.get(h);if(g!=null)a[d]=g;else{let x=i.size;i.set(h,x),a[d]=x,l.push(d)}}let p=s.slice();p[1]=i.size;let m=new ae(p,n);l.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(u.get(g,d,x),g,h,x)});let f=t.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Cp("cpu",()=>new SR,1);var E0=At(ss,r=>r>=0?r:Math.exp(r)-1),c$={kernelName:ss,backendName:"cpu",kernelFunc:E0};function A0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;et([o],"leakyRelu");let i=b.sizeFromShape(o.shape),a=t.data.get(o.dataId).values,u=b.getTypedArrayFromDType("float32",i);for(let l=0;l<a.length;l++)u[l]=a[l]<0?s*a[l]:a[l];return t.makeTensorInfo(o.shape,"float32",u)}var p$={kernelName:gs,backendName:"cpu",kernelFunc:A0};var gZ=Jt((r,e)=>r<0?e*r:r);function D0(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;et([n,o],"prelu");let s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,[a,u]=gZ(n.shape,o.shape,s,i,"float32");return t.makeTensorInfo(u,"float32",a)}var m$={kernelName:Rs,backendName:"cpu",kernelFunc:D0};var R0=At(Os,r=>Math.max(0,r)),f$={kernelName:Os,backendName:"cpu",kernelFunc:R0};var $0=At(Ls,r=>Math.min(Math.max(0,r),6)),d$={kernelName:Ls,backendName:"cpu",kernelFunc:$0};function _c(r,e,t,n,o){if(t==="linear")return jr({inputs:{x:e},backend:r});if(t==="relu")return R0({inputs:{x:e},backend:r});if(t==="elu")return E0({inputs:{x:e},backend:r});if(t==="relu6")return $0({inputs:{x:e},backend:r});if(t==="prelu")return D0({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return A0({inputs:{x:e},backend:r,attrs:{alpha:o}});if(t==="sigmoid")return I0({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function Qt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=b.sizeFromShape(o.shape),a=b.inferFromImplicitShape(s,i),u=b.sizeFromShape(a);b.assert(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){let c=l.complexTensorInfos.real,p=l.complexTensorInfos.imag;c.shape=a,p.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var h$={kernelName:Fi,backendName:"cpu",kernelFunc:Qt};function F0(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;et([o,s],"matMul");let u=o.shape.length,l=s.shape.length,c=i?o.shape[u-2]:o.shape[u-1],p=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),x=b.sizeFromShape(h),w=Vr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let v=i?[g,c,m]:[g,m,c],N=a?[x,f,p]:[x,p,f],_=Qt({inputs:{x:o},backend:t,attrs:{shape:v}}),A=Qt({inputs:{x:s},backend:t,attrs:{shape:N}}),D=i?_.shape[1]:_.shape[2],F=i?_.shape[2]:_.shape[1],O=a?A.shape[1]:A.shape[2],V=Math.max(g,x),G=t.data.get(_.dataId).values,W=t.data.get(A.dataId).values,H=b.computeStrides(_.shape),q=b.computeStrides(A.shape),[j,X,Z]=i?[H[0],1,H[1]]:[H[0],H[1],1],[tt,st,it]=a?[1,q[1],q[0]]:[q[1],1,q[0]],ut=F*O,rt=wt([V,F,O],_.dtype),lt=rt.values,ft=t.blockSize;for(let ht=0;ht<V;ht++){let It=ht%g,Ft=ht%x;for(let Dt=0;Dt<F;Dt+=ft){let Ht=Math.min(Dt+ft,F);for(let qt=0;qt<O;qt+=ft){let ce=Math.min(qt+ft,O);for(let ye=0;ye<D;ye+=ft){let ee=Math.min(ye+ft,D);for(let be=Dt;be<Ht;be++)for(let fe=qt;fe<ce;fe++){let Ae=0;for(let De=ye;De<ee;De++){let An=G[It*j+be*X+De*Z],sr=W[De*tt+fe*st+Ft*it];Ae+=An*sr}lt[ht*ut+(be*O+fe)]+=Ae}}}}}return t.disposeIntermediateTensorInfo(_),t.disposeIntermediateTensorInfo(A),t.makeTensorInfo(w,rt.dtype,rt.values)}var g$={kernelName:jo,backendName:"cpu",kernelFunc:F0};function xZ(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n,m,f,d,h=[];m=F0({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:t}),i&&(f=oa({inputs:{a:m,b:i},backend:t}),h.push(m),m=f),c&&(d=_c(t,m,c,a,p),h.push(m),m=d);for(let x of h)t.disposeIntermediateTensorInfo(x);return m}var x$={kernelName:Vi,backendName:"cpu",kernelFunc:xZ};var yZ=At(zo,r=>Math.acos(r)),y$={kernelName:zo,backendName:"cpu",kernelFunc:yZ};var bZ=At(Bo,r=>Math.acosh(r)),b$={kernelName:Bo,backendName:"cpu",kernelFunc:bZ};function wZ(r){let{inputs:e,backend:t}=r,n=e;et(e,"addN");let o=n.map(a=>t.data.get(a.dataId).values),s=wt(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let u=o[a];for(let l=0;l<i.length;l++)i[l]+=u[l]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var w$={kernelName:Vo,backendName:"cpu",kernelFunc:wZ};function vZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;et(o,"all");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ue({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",u,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,w=h[y];for(let v=0;v<f;++v){let N=h[y+v];w=w&&N}d[x]=w}l!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(i){let x=I.expandShapeToKeepDim(p,a),y=Qt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var v$={kernelName:ga,backendName:"cpu",kernelFunc:vZ};function CZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;et(o,"any");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ue({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",u,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,w=h[y];for(let v=0;v<f;++v){let N=h[y+v];w=w||N}d[x]=w}l!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(i){let x=I.expandShapeToKeepDim(p,a),y=Qt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var C$={kernelName:xa,backendName:"cpu",kernelFunc:CZ};function IZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;et(o,"argMax");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ue({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[c,p]=I.computeOutAndReduceShapes(u.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(p),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,y=h[x],w=0;for(let v=0;v<d;++v){let N=h[x+v];N>y&&(y=N,w=v)}f[g]=w}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var I$={kernelName:Ii,backendName:"cpu",kernelFunc:IZ};function SZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;et(o,"argMin");let i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ue({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[c,p]=I.computeOutAndReduceShapes(u.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(p),h=t.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,y=h[x],w=0;for(let v=0;v<d;++v){let N=h[x+v];N<y&&(y=N,w=v)}f[g]=w}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var S$={kernelName:Si,backendName:"cpu",kernelFunc:SZ};var NZ=At(Go,r=>Math.asin(r)),N$={kernelName:Go,backendName:"cpu",kernelFunc:NZ};var kZ=At(Wo,r=>Math.asinh(r)),k$={kernelName:Wo,backendName:"cpu",kernelFunc:kZ};var TZ=At(Uo,r=>Math.atan(r)),T$={kernelName:Uo,backendName:"cpu",kernelFunc:TZ};var _Z=Jt((r,e)=>Math.atan2(r,e)),EZ=oe(qo,_Z),_$={kernelName:qo,backendName:"cpu",kernelFunc:EZ};var AZ=At(Ho,r=>Math.atanh(r)),E$={kernelName:Ho,backendName:"cpu",kernelFunc:AZ};function Nm(r,e,t,n,o,s){let i=o.strideHeight,a=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=wt(o.outShape,t),g=h.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let v=0;v<o.batchSize;++v){let N=v*x,_=v*n[0];for(let A=0;A<o.inChannels;++A)for(let D=0;D<o.outHeight;++D){let F=D*i-m,O=Math.max(0,F),V=Math.min(o.inHeight,c+F),G=N+D*y;for(let W=0;W<o.outWidth;++W){let H=W*a-f,q=Math.max(0,H),j=Math.min(o.inWidth,p+H),X=d,Z=0,tt=0;for(let it=O;it<V;it+=u){let ut=_+it*n[1];for(let rt=q;rt<j;rt+=l){let lt=ut+rt*n[2],ft=r[lt+A];s==="max"&&ft>X?X=ft:s==="avg"&&(Z+=ft,tt++)}if(isNaN(X))break}let st=G+W*w+A;g[st]=s==="avg"?Z/tt:X}}}return h}function Zx(r,e,t,n,o=!1,s=!1){let i=wt(n.outShape,"int32"),a=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=wt(e,t,r);for(let g=0;g<n.batchSize;++g)for(let x=0;x<n.inChannels;++x)for(let y=0;y<n.outHeight;++y){let w=y*a-f,v=w;for(;v<0;)v+=l;let N=Math.min(n.inHeight,p+w);for(let _=0;_<n.outWidth;++_){let A=_*u-d,D=A;for(;D<0;)D+=c;let F=Math.min(n.inWidth,m+A),O=Number.NEGATIVE_INFINITY,V=-1;for(let G=v;G<N;G+=l){let W=G-w;for(let H=D;H<F;H+=c){let q=H-A,j=h.get(g,G,H,x);j>O&&(O=j,o?V=s?((g*n.inHeight+G)*n.inWidth+H)*n.inChannels+x:(G*n.inWidth+H)*n.inChannels+x:V=W*m+q)}}i.set(V,g,y,_,x)}}return i}function Jx(r,e,t,n,o,s){let i=o.strideDepth,a=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,y=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=wt(o.outShape,t),v=w.values,N=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],_=o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[3]*o.outShape[4],D=o.outShape[4];for(let F=0;F<o.batchSize;++F){let O=F*N,V=F*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let H=W*i-h,q=H;for(;q<0;)q+=l;let j=Math.min(o.inDepth,m+H),X=O+W*_;for(let Z=0;Z<o.outHeight;++Z){let tt=Z*a-g,st=tt;for(;st<0;)st+=c;let it=Math.min(o.inHeight,f+tt),ut=X+Z*A;for(let rt=0;rt<o.outWidth;++rt){let lt=rt*u-x,ft=lt;for(;ft<0;)ft+=p;let ht=Math.min(o.inWidth,d+lt),It=ut+rt*D,Ft=y,Dt=0,Ht=0;for(let ce=q;ce<j;ce+=l){let ye=V+ce*n[1];for(let ee=st;ee<it;ee+=c){let be=ye+ee*n[2];for(let fe=ft;fe<ht;fe+=p){let Ae=be+fe*n[3],De=r[Ae+G];if(s==="max"&&De>Ft?Ft=De:s==="avg"&&(Dt+=De,Ht++),isNaN(Ft))break}if(isNaN(Ft))break}if(isNaN(Ft))break}let qt=It+G;v[qt]=s==="avg"?Dt/Math.max(Ht,1):Ft}}}}return w}function A$(r,e){let t=wt(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){let y=x*n-m,w=y;for(;w<0;)w+=i;let v=Math.min(e.inDepth,l+y);for(let N=0;N<e.outHeight;++N){let _=N*o-f,A=_;for(;A<0;)A+=a;let D=Math.min(e.inHeight,c+_);for(let F=0;F<e.outWidth;++F){let O=F*s-d,V=O;for(;V<0;)V+=u;let G=Math.min(e.inWidth,p+O),W=Number.NEGATIVE_INFINITY,H=-1;for(let q=w;q<v;q+=i){let j=q-y;for(let X=A;X<D;X+=a){let Z=X-_;for(let tt=V;tt<G;tt+=u){let st=tt-O,it=r.get(h,q,X,tt,g);it>=W&&(W=it,H=j*c*p+Z*c+st)}}}t.set(H,h,x,N,F,g)}}}return t}function DZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;et(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(o.shape,s,i,l,a,u),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=jr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=Nm(m,o.shape,o.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var D$={kernelName:Ko,backendName:"cpu",kernelFunc:DZ};function RZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;et(o,"avgPool3d");let c=I.computePool3DInfo(o.shape,s,i,1,a,u,l),p=t.data.get(o.dataId).values,m=Jx(p,o.shape,o.dtype,b.computeStrides(o.shape),c,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}var R$={kernelName:Ni,backendName:"cpu",kernelFunc:RZ};function $Z(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;et([o,s],"avgPool3DGrad");let c=I.computePool3DInfo(s.shape,i,a,1,u,l),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,d=c.filterDepth,h=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,y=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,N=c.effectiveFilterHeight,_=c.effectiveFilterWidth,A=v-1-c.padInfo.front,D=_-1-c.padInfo.left,F=N-1-c.padInfo.top,O=wt(s.shape,"float32"),V=1/(d*h*g),G=t.bufferSync(o);for(let W=0;W<c.batchSize;++W)for(let H=0;H<c.inChannels;++H)for(let q=0;q<c.inDepth;++q)for(let j=0;j<c.inHeight;++j)for(let X=0;X<c.inWidth;++X){let Z=q-A,tt=j-F,st=X-D,it=0;for(let ut=0;ut<v;ut+=x){let rt=(Z+ut)/p;if(!(rt<0||rt>=c.outDepth||Math.floor(rt)!==rt))for(let lt=0;lt<N;lt+=y){let ft=(tt+lt)/m;if(!(ft<0||ft>=c.outHeight||Math.floor(ft)!==ft))for(let ht=0;ht<_;ht+=w){let It=(st+ht)/f;if(It<0||It>=c.outWidth||Math.floor(It)!==It)continue;let Ft=G.get(W,rt,ft,It,H);it+=Ft}}}O.set(it*V,W,q,j,X,H)}return t.makeTensorInfo(O.shape,O.dtype,O.values)}var $$={kernelName:_l,backendName:"cpu",kernelFunc:$Z};function FZ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;et([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,c=I.computePool2DInfo(i.shape,a,u,1,l),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,y=c.effectiveFilterWidth,w=y-1-c.padInfo.left,v=x-1-c.padInfo.top,N=wt(i.shape,"float32"),_=1/(f*d),A=t.data.get(o.dataId).values,D=wt(o.shape,"float32",A);for(let F=0;F<c.batchSize;++F)for(let O=0;O<c.inChannels;++O)for(let V=0;V<c.inHeight;++V)for(let G=0;G<c.inWidth;++G){let W=V-v,H=G-w,q=0;for(let j=0;j<x;j+=h){let X=(W+j)/p;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let Z=0;Z<y;Z+=g){let tt=(H+Z)/m;if(tt<0||tt>=c.outWidth||Math.floor(tt)!==tt)continue;let st=D.get(F,X,tt,O);q+=st}}N.set(q*_,F,V,G,O)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}var F$={kernelName:Tl,backendName:"cpu",kernelFunc:FZ};function OZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:u}=e;b.assert(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),et([o,a,u,s,i],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=t.data.get(o.dataId).values,p=t.data.get(a.dataId).values,m=t.data.get(u.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=i?t.data.get(i.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,x=f.length,y=m.length,w=p.length,v=0,N=0,_=0,A=0;for(let D=0;D<c.length;++D)h[D]=d[v++]+(c[D]-p[N++])*f[_++]/Math.sqrt(m[A++]+l),v>=g&&(v=0),N>=w&&(N=0),_>=x&&(_=0),A>=y&&(A=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var O$={kernelName:ps,backendName:"cpu",kernelFunc:OZ};function PZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;et([o],"batchToSpaceND");let a=s.reduce((x,y)=>x*y),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),c=I.getReshapedPermuted(o.shape,s,a),p=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(c,i,s.length),f=Qt({inputs:{x:o},backend:t,attrs:{shape:u}}),d=Ue({inputs:{x:f},backend:t,attrs:{perm:l}}),h=Qt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Fo({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var P$={kernelName:ki,backendName:"cpu",kernelFunc:PZ};function MZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=Cm(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var M$={kernelName:ya,backendName:"cpu",kernelFunc:MZ};function LZ(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var L$={kernelName:El,backendName:"cpu",kernelFunc:LZ};var zZ=At(mo,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),z$={kernelName:mo,backendName:"cpu",kernelFunc:zZ};var BZ=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(b.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values;for(let l=0;l<a.length;l++){let c=a[l],p=u[l];n[l]=Math.hypot(c,p)}return t.makeOutput(n,e.shape,"float32")},B$={kernelName:Al,backendName:"cpu",kernelFunc:BZ};function sa(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var V$={kernelName:up,backendName:"cpu",kernelFunc:sa};function Nu(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=e.map(h=>h.shape);I.assertParamsConsistent(i,s);let a=I.computeOutShape(e.map(h=>h.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let u=e.filter(h=>b.sizeFromShape(h.shape)>0);if(u.length===1)return jr({inputs:{x:u[0]},backend:t});if(u[0].dtype==="complex64"){let h=u.map(v=>Do({inputs:{input:v},backend:t})),g=u.map(v=>sa({inputs:{input:v},backend:t})),x=Nu({inputs:h,backend:t,attrs:{axis:s}}),y=Nu({inputs:g,backend:t,attrs:{axis:s}}),w=br({inputs:{real:x,imag:y},backend:t});return h.forEach(v=>t.disposeIntermediateTensorInfo(v)),g.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),w}let l=u.map(h=>{let x=[-1,b.sizeFromShape(h.shape.slice(s))];return Qt({inputs:{x:h},backend:t,attrs:{shape:x}})}),c=l.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=I.computeOutShape(l.map(h=>h.shape),1);let p=l[0].shape[0]===1,m=wc(c,a,e[0].dtype,p),f=I.computeOutShape(u.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var G$={kernelName:Ti,backendName:"cpu",kernelFunc:Nu};function O0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=n;et([o,s],"conv2d");let p=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,i,l,a,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,y=m.padInfo.top,w=m.dataFormat==="channelsLast",v=new ae(m.outShape,o.dtype),N=b.computeStrides(o.shape),_=b.computeStrides(s.shape),A=N[0],D=w?N[1]:N[2],F=w?N[2]:1,O=w?1:N[1],V=v.strides[0],G=w?v.strides[1]:v.strides[2],W=w?v.strides[2]:1,H=w?1:v.strides[1],q=t.data.get(o.dataId).values,j=t.data.get(s.dataId).values,X=v.values;for(let Z=0;Z<m.batchSize;++Z){let tt=Z*A,st=Z*V;for(let it=0;it<m.outHeight;++it){let ut=st+it*G,rt=it*m.strideHeight-y;for(let lt=0;lt<f;++lt){let ft=rt+lt*h;if(ft<0||ft>=m.inHeight)continue;let ht=lt*_[0],It=tt+ft*D;for(let Ft=0;Ft<m.outWidth;++Ft){let Dt=ut+Ft*W,Ht=Ft*m.strideWidth-x;for(let qt=0;qt<d;++qt){let ce=Ht+qt*g;if(ce<0||ce>=m.inWidth)continue;let ye=ht+qt*_[1],ee=It+ce*F,be=ye;for(let fe=0;fe<m.inChannels;++fe){let Ae=q[ee+fe*O];for(let De=0;De<m.outChannels;++De)X[Dt+De*H]+=Ae*j[be+De];be+=m.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,X)}var W$={kernelName:Yo,backendName:"cpu",kernelFunc:O0};function VZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=n;et([o,s],"conv2dBackpropFilter");let p=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,c,i,1,a,l,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,x=m.dataFormat==="channelsLast",y=new ae(m.filterShape,"float32"),w=m.padInfo.left,v=m.padInfo.top,N=t.data.get(o.dataId).values,_=t.data.get(s.dataId).values,A=new ae(o.shape,o.dtype,N),D=new ae(s.shape,s.dtype,_);for(let F=0;F<h;++F){let O=Math.max(0,Math.ceil((v-F)/f)),V=Math.min(m.outHeight,(m.inHeight+v-F)/f);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((w-G)/d)),H=Math.min(m.outWidth,(m.inWidth+w-G)/d);for(let q=0;q<m.inChannels;++q)for(let j=0;j<m.outChannels;++j){let X=0;for(let Z=0;Z<m.batchSize;++Z)for(let tt=O;tt<V;++tt){let st=F+tt*f-v;for(let it=W;it<H;++it){let ut=G+it*d-w;x?X+=A.get(Z,st,ut,q)*D.get(Z,tt,it,j):X+=A.get(Z,q,st,ut)*D.get(Z,j,tt,it)}}y.set(X,F,G,q,j)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var U$={kernelName:np,backendName:"cpu",kernelFunc:VZ};function GZ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=n;et([o,s],"conv2dBackpropInput");let p=b.computeStrides(s.shape),m=b.computeStrides(o.shape),f=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,s.shape,a,1,u,c,!1,f),h=new ae(d.inShape,"float32"),g=h.values,x=t.data.get(o.dataId).values,y=t.data.get(s.dataId).values,[w,v,N]=p,{batchSize:_,filterHeight:A,filterWidth:D,inChannels:F,inHeight:O,inWidth:V,outChannels:G,outHeight:W,outWidth:H,strideHeight:q,strideWidth:j}=d;f=d.dataFormat;let X=A-1-d.padInfo.top,Z=D-1-d.padInfo.left,tt=f==="channelsLast",st=h.strides[0],it=tt?h.strides[1]:h.strides[2],ut=tt?h.strides[2]:1,rt=tt?1:h.strides[1],lt=m[0],ft=tt?m[1]:m[2],ht=tt?m[2]:1,It=tt?1:m[1];for(let Ft=0;Ft<_;++Ft)for(let Dt=0;Dt<F;++Dt)for(let Ht=0;Ht<O;++Ht){let qt=Ht-X,ce=Math.max(0,Math.ceil(qt/q)),ye=Math.min(W,(A+qt)/q);for(let ee=0;ee<V;++ee){let be=ee-Z,fe=Math.max(0,Math.ceil(be/j)),Ae=Math.min(H,(D+be)/j),De=0;for(let sr=ce;sr<ye;++sr){let jn=sr*q-qt;for(let Mr=fe;Mr<Ae;++Mr){let Ye=Mr*j-be,Lr=lt*Ft+ft*sr+ht*Mr,zr=w*(A-1-jn)+v*(D-1-Ye)+N*Dt;for(let Xn=0;Xn<G;++Xn){let Yn=x[Lr+It*Xn],Yr=y[zr+Xn];De+=Yn*Yr}}}let An=st*Ft+it*Ht+ut*ee+rt*Dt;g[An]=De}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var H$={kernelName:Zo,backendName:"cpu",kernelFunc:GZ};function WZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;et([o,s],"conv3d");let l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=l,x=g.front,y=g.left,w=g.top,v=new ae(l.outShape,o.dtype),N=t.data.get(o.dataId).values,_=t.data.get(s.dataId).values,A=v.values,D=b.computeStrides(o.shape),F=b.computeStrides(s.shape);for(let O=0;O<l.batchSize;++O){let V=O*D[0],G=O*v.strides[0];for(let W=0;W<l.outDepth;++W){let H=G+W*v.strides[1],q=W*l.strideDepth-x;for(let j=0;j<c;++j){let X=q+j*f;if(X<0||X>=l.inDepth)continue;let Z=j*F[0],tt=V+X*D[1];for(let st=0;st<l.outHeight;++st){let it=H+st*v.strides[2],ut=st*l.strideHeight-w;for(let rt=0;rt<p;++rt){let lt=ut+rt*d;if(lt<0||lt>=l.inHeight)continue;let ft=Z+rt*F[1],ht=tt+lt*D[2];for(let It=0;It<l.outWidth;++It){let Ft=it+It*l.outChannels,Dt=It*l.strideWidth-y;for(let Ht=0;Ht<m;++Ht){let qt=Dt+Ht*h;if(qt<0||qt>=l.inWidth)continue;let ce=ft+Ht*F[2],ye=ht+qt*l.inChannels,ee=ce;for(let be=0;be<l.inChannels;++be){let fe=N[ye+be];for(let Ae=0;Ae<l.outChannels;++Ae)A[Ft+Ae]+=fe*_[ee+Ae];ee+=l.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}var q$={kernelName:Jo,backendName:"cpu",kernelFunc:WZ};function UZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n;et([o,s],"conv3dBackpropFilterV2");let l=b.computeStrides(o.shape),c=b.computeStrides(s.shape),p=I.computeConv3DInfo(o.shape,u,i,1,a),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,x=p.filterWidth,y=new ae(p.filterShape,"float32"),w=y.values,[v,N,_,A]=y.strides,D=t.data.get(s.dataId).values,[F,O,V,G]=c,W=t.data.get(o.dataId).values,[H,q,j,X]=l,Z=p.padInfo.front,tt=p.padInfo.left,st=p.padInfo.top;for(let it=0;it<h;++it){let ut=Math.max(0,Math.ceil((Z-it)/m)),rt=Math.min(p.outDepth,(p.inDepth+Z-it)/m),lt=it*v;for(let ft=0;ft<g;++ft){let ht=Math.max(0,Math.ceil((st-ft)/f)),It=Math.min(p.outHeight,(p.inHeight+st-ft)/f),Ft=ft*N+lt;for(let Dt=0;Dt<x;++Dt){let Ht=Math.max(0,Math.ceil((tt-Dt)/d)),qt=Math.min(p.outWidth,(p.inWidth+tt-Dt)/d),ce=Dt*_+Ft;for(let ye=0;ye<p.inChannels;++ye){let ee=ye*A+ce;for(let be=0;be<p.outChannels;++be){let fe=0;for(let Ae=0;Ae<p.batchSize;++Ae){let De=Ae*H,An=Ae*F;for(let sr=ut;sr<rt;++sr){let Mr=(it+sr*m-Z)*q+De,Ye=sr*O+An;for(let Lr=ht;Lr<It;++Lr){let Xn=(ft+Lr*f-st)*j+Mr,Yn=Lr*V+Ye;for(let Yr=Ht;Yr<qt;++Yr){let Mo=(Dt+Yr*d-tt)*X+Xn,wi=Yr*G+Yn;fe+=W[Mo+ye]*D[wi+be]}}}}w[ee+be]=fe}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}var K$={kernelName:wa,backendName:"cpu",kernelFunc:UZ};function HZ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n;et([o],"conv3dBackpropInputV2");let l=b.computeStrides(o.shape),c=b.computeStrides(s.shape),p=I.computeConv3DInfo(u,s.shape,a,1,i),m=new ae(p.inShape,"float32"),f=m.values,[d,h,g,x]=m.strides,y=t.data.get(o.dataId).values,[w,v,N,_]=l,A=t.data.get(s.dataId).values,[D,F,O,V]=c,{batchSize:G,filterDepth:W,filterHeight:H,filterWidth:q,inChannels:j,inDepth:X,inHeight:Z,inWidth:tt,outChannels:st,outDepth:it,outHeight:ut,outWidth:rt,strideDepth:lt,strideHeight:ft,strideWidth:ht}=p,It=W-1-p.padInfo.front,Ft=H-1-p.padInfo.top,Dt=q-1-p.padInfo.left;for(let Ht=0;Ht<G;++Ht)for(let qt=0;qt<j;++qt)for(let ce=0;ce<X;++ce){let ye=ce-It,ee=Math.max(0,Math.ceil(ye/lt)),be=Math.min(it,(W+ye)/lt);for(let fe=0;fe<Z;++fe){let Ae=fe-Ft,De=Math.max(0,Math.ceil(Ae/ft)),An=Math.min(ut,(H+Ae)/ft);for(let sr=0;sr<tt;++sr){let jn=sr-Dt,Mr=Math.max(0,Math.ceil(jn/ht)),Ye=Math.min(rt,(q+jn)/ht),Lr=0;for(let zr=ee;zr<be;++zr){let Xn=zr*lt-ye;for(let Yn=De;Yn<An;++Yn){let Yr=Yn*ft-Ae;for(let ua=Mr;ua<Ye;++ua){let Mo=ua*ht-jn,wi=w*Ht+v*zr+N*Yn+_*ua,Tr=D*(W-1-Xn)+F*(H-1-Yr)+O*(q-1-Mo)+V*qt;for(let ca=0;ca<st;++ca){let jm=y[wi+ca],Xm=A[Tr+ca];Lr+=jm*Xm}}}}f[d*Ht+h*ce+g*fe+x*sr+qt]=Lr}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var j$={kernelName:va,backendName:"cpu",kernelFunc:HZ};var qZ=At(Qo,r=>Math.cos(r)),X$={kernelName:Qo,backendName:"cpu",kernelFunc:qZ};var KZ=At(ts,r=>Math.cosh(r)),Y$={kernelName:ts,backendName:"cpu",kernelFunc:KZ};function jZ(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,[c,p,m,f]=o.shape,d=s.shape[0],[h,g]=a,x=wt([d,h,g,f],"float32"),y=t.data.get(s.dataId).values,w=t.data.get(i.dataId).values,v=t.data.get(o.dataId).values,N=b.computeStrides(o.shape),_=b.computeStrides(x.shape);for(let A=0;A<d;A++){let D=A*4,F=y[D],O=y[D+1],V=y[D+2],G=y[D+3],W=w[A];if(W>=c)continue;let H=h>1?(V-F)*(p-1)/(h-1):0,q=g>1?(G-O)*(m-1)/(g-1):0;for(let j=0;j<h;j++){let X=h>1?F*(p-1)+j*H:.5*(F+V)*(p-1);if(X<0||X>p-1){for(let Z=0;Z<g;Z++)for(let tt=0;tt<f;tt++){let st=tt+Z*_[2]+j*_[1]+A*_[0];x.values[st]=l}continue}if(u==="bilinear"){let Z=Math.floor(X),tt=Math.ceil(X),st=X-Z;for(let it=0;it<g;it++){let ut=g>1?O*(m-1)+it*q:.5*(O+G)*(m-1);if(ut<0||ut>m-1){for(let ht=0;ht<f;ht++){let It=ht+it*_[2]+j*_[1]+A*_[0];x.values[It]=l}continue}let rt=Math.floor(ut),lt=Math.ceil(ut),ft=ut-rt;for(let ht=0;ht<f;ht++){let It=ht+rt*N[2]+Z*N[1]+W*N[0],Ft=v[It];It=ht+lt*N[2]+Z*N[1]+W*N[0];let Dt=v[It];It=ht+rt*N[2]+tt*N[1]+W*N[0];let Ht=v[It];It=ht+lt*N[2]+tt*N[1]+W*N[0];let qt=v[It],ce=Ft+(Dt-Ft)*ft,ye=Ht+(qt-Ht)*ft;It=ht+it*_[2]+j*_[1]+A*_[0],x.values[It]=ce+(ye-ce)*st}}}else for(let Z=0;Z<g;++Z){let tt=g>1?O*(m-1)+Z*q:.5*(O+G)*(m-1);if(tt<0||tt>m-1){for(let ut=0;ut<f;ut++){let rt=ut+Z*_[2]+j*_[1]+A*_[0];x.values[rt]=l}continue}let st=Math.round(tt),it=Math.round(X);for(let ut=0;ut<f;ut++){let rt=ut+st*N[2]+it*N[1]+W*N[0],lt=ut+Z*_[2]+j*_[1]+A*_[0];x.values[lt]=v[rt]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var Z$={kernelName:Ia,backendName:"cpu",kernelFunc:jZ};function XZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;et(o,"cumprod");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Ue({inputs:{x:o},backend:t,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,o.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=ir(l.dtype,"int32"),m=b.makeOnesTypedArray(b.sizeFromShape(l.shape),p),f=t.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=a?(x,y)=>x+d-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=d)for(let y=0;y<d;y++){let w=h(x,y);if(y===0)m[w]=i?1:f[w];else{let v=h(x,y-1);m[w]=i?f[v]*m[v]:f[w]*m[v]}}let g=t.makeTensorInfo(l.shape,p,m);if(u!=null){let x=I.getUndoAxesPermutation(u),y=Ue({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),y}return g}var J$={kernelName:Ca,backendName:"cpu",kernelFunc:XZ};function YZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;et(o,"cumsum");let u=I.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Ue({inputs:{x:o},backend:t,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,o.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=ir(l.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(l.shape),p),f=t.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=a?(x,y)=>x+d-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=d)for(let y=0;y<d;y++){let w=h(x,y);if(y===0)m[w]=i?0:f[w];else{let v=h(x,y-1);m[w]=i?f[v]+m[v]:f[w]+m[v]}}let g=t.makeTensorInfo(l.shape,p,m);if(u!=null){let x=I.getUndoAxesPermutation(u),y=Ue({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),y}return g}var Q$={kernelName:es,backendName:"cpu",kernelFunc:YZ};function ZZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,c=Cm(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),c=Lx(u,l,i,a);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var tF={kernelName:Dl,backendName:"cpu",kernelFunc:ZZ};function JZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],u=o.shape[1],l=o.shape[2],c=o.shape[3],p=u*s,m=l*s,f=c/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(a*p*m*f),g=0;for(let x=0;x<a;++x)for(let y=0;y<p;++y){let w=Math.floor(y/s),v=y%s;for(let N=0;N<m;++N){let _=Math.floor(N/s),A=N%s,D=(v*s+A)*f;for(let F=0;F<f;++F){let V=F+D+c*(_+l*(w+u*x));h[g++]=d[V]}}}return t.makeTensorInfo([a,p,m,f],o.dtype,h)}var eF={kernelName:Sa,backendName:"cpu",kernelFunc:JZ};function P0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n;et([o,s],"depthwiseConv2DNative");let c=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=u;m==null&&(m=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=I.computeConv2DInfo(o.shape,s.shape,i,m,a,l,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:x,padInfo:y}=f,w=y.left,v=y.top,N=f.outChannels/f.inChannels,_=new ae(f.outShape,o.dtype),A=t.data.get(o.dataId).values,D=t.data.get(s.dataId).values,F=_.values;for(let O=0;O<f.batchSize;++O){let V=O*c[0],G=O*_.strides[0];for(let W=0;W<f.outHeight;++W){let H=G+W*_.strides[1],q=W*f.strideHeight-v;for(let j=0;j<d;++j){let X=q+j*g;if(X<0||X>=f.inHeight)continue;let Z=j*p[0],tt=V+X*c[1];for(let st=0;st<f.outWidth;++st){let it=H+st*_.strides[2],ut=st*f.strideWidth-w;for(let rt=0;rt<h;++rt){let lt=ut+rt*x;if(lt<0||lt>=f.inWidth)continue;let ft=Z+rt*p[1],ht=tt+lt*f.inChannels,It=it,Ft=ft;for(let Dt=0;Dt<f.inChannels;++Dt){let Ht=A[ht+Dt];for(let qt=0;qt<N;++qt)F[It+qt]+=Ht*D[Ft+qt];It+=N,Ft+=N}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var rF={kernelName:rs,backendName:"cpu",kernelFunc:P0};function QZ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=n;et([o,s],"depthwiseConv2dNativeBackpropFilter");let p=I.computeConv2DInfo(o.shape,c,i,a,u,l,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new ae(p.filterShape,"float32"),x=p.padInfo.left,y=p.padInfo.top,w=p.outChannels/p.inChannels,v=t.data.get(o.dataId).values,N=new ae(o.shape,o.dtype,v),_=t.data.get(s.dataId).values,A=new ae(s.shape,s.dtype,_);for(let D=0;D<d;++D){let F=Math.max(0,Math.ceil((y-D)/m)),O=Math.min(p.outHeight,(p.inHeight+y-D)/m);for(let V=0;V<h;++V){let G=Math.max(0,Math.ceil((x-V)/f)),W=Math.min(p.outWidth,(p.inWidth+x-V)/f);for(let H=0;H<p.outChannels;++H){let q=Math.trunc(H/w),j=H%w,X=0;for(let Z=0;Z<p.batchSize;++Z)for(let tt=F;tt<O;++tt){let st=D+tt*m-y;for(let it=G;it<W;++it){let ut=V+it*f-x;X+=N.get(Z,st,ut,q)*A.get(Z,tt,it,H)}}g.set(X,D,V,q,j)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var nF={kernelName:op,backendName:"cpu",kernelFunc:QZ};function tJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=n;et([o,s],"depthwiseConv2DNativeBackpropInput");let p=b.computeStrides(o.shape),m=b.computeStrides(s.shape),f=I.computeConv2DInfo(c,s.shape,i,a,u,l,!0),d=new ae(f.inShape,"float32"),h=d.values,[g,x,y]=d.strides,w=t.data.get(o.dataId).values,[v,N,_]=p,A=t.data.get(s.dataId).values,[D,F,O]=m,{batchSize:V,filterHeight:G,filterWidth:W,inChannels:H,inHeight:q,inWidth:j,outChannels:X,outHeight:Z,outWidth:tt,strideHeight:st,strideWidth:it}=f,ut=G-1-f.padInfo.top,rt=W-1-f.padInfo.left,lt=X/H;for(let ft=0;ft<V;++ft)for(let ht=0;ht<H;++ht)for(let It=0;It<q;++It){let Ft=It-ut,Dt=Math.max(0,Math.ceil(Ft/st)),Ht=Math.min(Z,(G+Ft)/st);for(let qt=0;qt<j;++qt){let ce=qt-rt,ye=Math.max(0,Math.ceil(ce/it)),ee=Math.min(tt,(W+ce)/it),be=0;for(let fe=Dt;fe<Ht;++fe){let Ae=fe*st-Ft;for(let De=ye;De<ee;++De){let An=De*it-ce,sr=v*ft+N*fe+_*De,jn=D*(G-1-Ae)+F*(W-1-An)+O*ht;for(let Mr=0;Mr<lt;++Mr){let Ye=ht*lt+Mr,Lr=w[sr+Ye],zr=A[jn+Mr];be+=Lr*zr}}}h[g*ft+x*It+y*qt+ht]=be}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var oF={kernelName:sp,backendName:"cpu",kernelFunc:tJ};function eJ(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,i=wt([o,o],n.dtype),a=i.values;for(let l=0;l<s.length;l++)a[l*o+l]=s[l];let u=[...n.shape,...n.shape];return t.makeTensorInfo(u,i.dtype,i.values)}var sF={kernelName:Rl,backendName:"cpu",kernelFunc:eJ};var iF={kernelName:ns,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=t,u=e,l=u.data.get(n.dataId).values,c=n.shape.length,p=u.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:N,filterHeight:_,filterWidth:A,dilationHeight:D,dilationWidth:F,outShape:O}=I.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),V=b.sizeFromShape(O),G=O.length,W=b.getArrayFromDType(n.dtype,V);for(let q=0;q<f;++q)for(let j=0;j<x;++j){let X=j*v-w.top;for(let Z=0;Z<y;++Z){let tt=Z*N-w.left;for(let st=0;st<g;++st){let it=Number.MIN_SAFE_INTEGER;for(let rt=0;rt<_;++rt){let lt=X+rt*D;if(lt>=0&&lt<d)for(let ft=0;ft<A;++ft){let ht=tt+ft*F;if(ht>=0&&ht<h){let It=b.locToIndex([q,lt,ht,st],c,b.computeStrides(n.shape)),Ft=b.locToIndex([rt,ft,st],m,b.computeStrides(o.shape)),Dt=l[It]+p[Ft];Dt>it&&(it=Dt)}}}let ut=b.locToIndex([q,j,Z,st],G,b.computeStrides(O));W[ut]=it}}}return{dataId:u.write(b.toTypedArray(W,n.dtype),O,n.dtype),shape:O,dtype:n.dtype}}};var aF={kernelName:Fl,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,c=b.toNestedArray(n.shape,l.data.get(n.dataId).values),p=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:N,filterWidth:_,dilationHeight:A,dilationWidth:D,outShape:F}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===F.length,()=>`Error in ${Fl}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let O=b.toNestedArray(F,l.data.get(s.dataId).values),V=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<m;++W)for(let H=0;H<g;++H){let q=H*w-y.top;for(let j=0;j<x;++j){let X=j*v-y.left;for(let Z=0;Z<h;++Z){let tt=Number.MIN_SAFE_INTEGER,st=0,it=0;for(let ut=0;ut<N;++ut){let rt=q+ut*A;if(rt>=0&&rt<f)for(let lt=0;lt<_;++lt){let ft=X+lt*D;if(ft>=0&&ft<d){let ht=c[W][rt][ft][Z]+p[ut][lt][Z];ht>tt&&(tt=ht,st=ut,it=lt)}}}V[st][it][Z]+=O[W][H][j][Z]}}}return{dataId:l.write(b.toTypedArray(V,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var lF={kernelName:$l,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=t,l=e,c=b.toNestedArray(n.shape,l.data.get(n.dataId).values),p=b.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:N,filterWidth:_,dilationHeight:A,dilationWidth:D,outShape:F}=I.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);b.assert(s.rank===F.length,()=>`Error in ${$l}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let O=b.toNestedArray(F,l.data.get(s.dataId).values),V=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<m;++W)for(let H=0;H<g;++H){let q=H*w-y.top;for(let j=0;j<x;++j){let X=j*v-y.left;for(let Z=0;Z<h;++Z){let tt=Number.MIN_SAFE_INTEGER,st=q<0?0:q,it=X<0?0:X;for(let ut=0;ut<N;++ut){let rt=q+ut*A;if(rt>=0&&rt<f)for(let lt=0;lt<_;++lt){let ft=X+lt*D;if(ft>=0&&ft<d){let ht=c[W][rt][ft][Z]+p[ut][lt][Z];ht>tt&&(tt=ht,st=rt,it=ft)}}}V[W][st][it][Z]+=O[W][H][j][Z]}}}return{dataId:l.write(b.toTypedArray(V,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function rJ(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{canvas:s,options:i}=n,{contextOptions:a,imageOptions:u}=i||{},l=u?.alpha||1,c=a?.contextType||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);let p=s.getContext(c,a?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${c} type.`);let[m,f]=o.shape.slice(0,2),d=o.shape.length===2?1:o.shape[2],h=t.data.get(o.dataId).values,g=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(f*m*4);for(let w=0;w<m*f;++w){let v=[0,0,0,255*l];for(let _=0;_<d;_++){let A=h[w*d+_];if(o.dtype==="float32"){if(A<0||A>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${A}.`)}else if(o.dtype==="int32"&&(A<0||A>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${A}.`);d===1?(v[0]=A*g,v[1]=A*g,v[2]=A*g):v[_]=A*g}let N=w*4;x[N+0]=Math.round(v[0]),x[N+1]=Math.round(v[1]),x[N+2]=Math.round(v[2]),x[N+3]=Math.round(v[3])}s.width=f,s.height=m;let y=new ImageData(x,f,m);return p.putImageData(y,0,0),o}var uF={kernelName:af,backendName:"cpu",kernelFunc:rJ};function gl(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;et(o,"sum");let a;o.dtype==="bool"?a=Ro({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=jr({inputs:{x:o},backend:t});let u=a.shape.length,l=b.parseAxisParam(s,a.shape),c=I.getAxesPermutation(l,u),p=l,m=a;c!=null&&(m=Ue({inputs:{x:a},backend:t,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,u)),I.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=I.computeOutAndReduceShapes(m.shape,p),h=I.upcastType(m.dtype,"int32"),g=wm(t,f,h),x=b.sizeFromShape(d),y=t.data.get(g.dataId).values,w=t.data.get(m.dataId).values;for(let v=0;v<y.length;++v){let N=v*x,_=0;for(let A=0;A<x;++A)_+=w[N+A];y[v]=_}if(i){let v=I.expandShapeToKeepDim(g.shape,l),N=g;g=Qt({inputs:{x:g},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(N)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(m),g}var cF={kernelName:Xs,backendName:"cpu",kernelFunc:gl};function nJ(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:c}=I.getEinsumComputePath(a,u),p=c.length,m=null,f=i.length,d=[];for(let h=0;h<p;++h){for(let g of c[h]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,u[g]),w;I.isIdentityPermutation(x)?w=s[g]:(w=Ue({inputs:{x:s[g]},backend:t,attrs:{perm:x}}),d.push(w));let v=w.shape.slice();for(let N=0;N<y.length;++N)v.splice(y[N],0,1);b.arraysEqual(w.shape,v)||(w=Qt({inputs:{x:w},backend:t,attrs:{shape:v}}),d.push(w)),m===null?m=w:(m=vc({inputs:{a:w,b:m},backend:t}),d.push(m))}h<p-1&&(l[h]>=0&&(m=gl({inputs:{x:m},backend:t,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var pF={kernelName:ip,backendName:"cpu",kernelFunc:nJ};function oJ(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;et([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=0?s[u]=a[u]:s[u]=a[u]*(l+1)}return t.makeTensorInfo(o.shape,"float32",s)}var mF={kernelName:Na,backendName:"cpu",kernelFunc:oJ};var sJ=I.ERF_P,iJ=I.ERF_A1,aJ=I.ERF_A2,lJ=I.ERF_A3,uJ=I.ERF_A4,cJ=I.ERF_A5,pJ=At(is,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+sJ*t);return e*(1-((((cJ*n+uJ)*n+lJ)*n+aJ)*n+iJ)*n*Math.exp(-t*t))}),fF={kernelName:is,backendName:"cpu",kernelFunc:pJ};function km(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),Qt({inputs:{x:o},backend:t,attrs:{shape:a}})}var dF={kernelName:_i,backendName:"cpu",kernelFunc:km};var mJ=Jt((r,e)=>r/e),Zf=oe(os,mJ),Jf={kernelName:os,backendName:"cpu",kernelFunc:Zf};function Qx(r,e,t){let n=r.shape,o=n[0],s=n[1],i=t.data.get(r.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],c=b.sizeFromShape(l),p=b.getTypedArrayFromDType("float32",c),m=b.getTypedArrayFromDType("float32",c);for(let g=0;g<o;g++){let x=Fo({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,s]}}),y=Fo({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,s]}}),w=br({inputs:{real:x,imag:y},backend:t}),{real:v,imag:N}=fJ(w,e,t),_=I.mergeRealAndImagArrays(v,N);for(let A=0;A<s;A++){let D=I.getComplexWithIndex(_,A);p[g*s+A]=D.real,m[g*s+A]=D.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(l,"float32",p),d=t.makeTensorInfo(l,"float32",m),h=br({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function fJ(r,e,t){let n=b.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(dJ(n)){let a=M0(s,i,n,e,t),u=[r.shape[0],r.shape[1]];if(e){let l=t.makeTensorInfo(u,"float32",a.real),c=t.makeTensorInfo(u,"float32",a.imag),p=t.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),m=jr({inputs:{x:p},backend:t}),f=Jf.kernelFunc({inputs:{a:l,b:p},backend:t}),d=Jf.kernelFunc({inputs:{a:c,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return a}else{let a=I.mergeRealAndImagArrays(s,i),u=hJ(a,n,e);return I.splitRealAndImagArrays(u)}}function dJ(r){return(r&r-1)===0}function M0(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=I.mergeRealAndImagArrays(r,e),i=t/2,a=I.complexWithEvenIndex(s),u=a.real,l=a.imag,c=[u.length],p=o.makeTensorInfo(c,"float32",u),m=o.makeTensorInfo(c,"float32",l),f=br({inputs:{real:p,imag:m},backend:o}),d=I.complexWithOddIndex(s),h=d.real,g=d.imag,x=[h.length],y=o.makeTensorInfo(x,"float32",h),w=o.makeTensorInfo(x,"float32",g),v=br({inputs:{real:y,imag:w},backend:o}),N=M0(u,l,i,n,o),_=N.real,A=N.imag,D=[_.length],F=o.makeTensorInfo(D,"float32",_),O=o.makeTensorInfo(D,"float32",A),V=br({inputs:{real:F,imag:O},backend:o}),G=M0(h,g,i,n,o),W=G.real,H=G.imag,q=[W.length],j=o.makeTensorInfo(q,"float32",W),X=o.makeTensorInfo(q,"float32",H),Z=br({inputs:{real:j,imag:X},backend:o}),tt=I.exponents(t,n),st=[tt.real.length],it=o.makeTensorInfo(st,"float32",tt.real),ut=o.makeTensorInfo(st,"float32",tt.imag),rt=br({inputs:{real:it,imag:ut},backend:o}),lt=vc({inputs:{a:rt,b:Z},backend:o}),ft=oa({inputs:{a:V,b:lt},backend:o}),ht=Xf({inputs:{a:V,b:lt},backend:o}),It=Do({inputs:{input:ft},backend:o}),Ft=Do({inputs:{input:ht},backend:o}),Dt=sa({inputs:{input:ft},backend:o}),Ht=sa({inputs:{input:ht},backend:o}),qt=Nu({inputs:[It,Ft],backend:o,attrs:{axis:0}}),ce=Nu({inputs:[Dt,Ht],backend:o,attrs:{axis:0}}),ye=o.data.get(qt.dataId).values,ee=o.data.get(ce.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(it),o.disposeIntermediateTensorInfo(ut),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(lt),o.disposeIntermediateTensorInfo(ft),o.disposeIntermediateTensorInfo(ht),o.disposeIntermediateTensorInfo(It),o.disposeIntermediateTensorInfo(Dt),o.disposeIntermediateTensorInfo(Ft),o.disposeIntermediateTensorInfo(Ht),o.disposeIntermediateTensorInfo(qt),o.disposeIntermediateTensorInfo(ce),{real:ye,imag:ee}}function hJ(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,i=0;for(let a=0;a<e;a++){let u=I.exponent(o*a,e,t),l=I.getComplexWithIndex(r,a);s+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}t&&(s/=e,i/=e),I.assignToTypedArray(n,s,i,o)}return n}function gJ(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=Qt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=Qx(a,!1,t),l=Qt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var hF={kernelName:ap,backendName:"cpu",kernelFunc:gJ};function Qf(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,i=s||b.inferDtype(o),a=b.getArrayFromDType(i,b.sizeFromShape(n));return xJ(a,o,i),e.makeTensorInfo(n,i,a)}var gF={kernelName:Ol,backendName:"cpu",kernelFunc:Qf};function xJ(r,e,t){r.fill(e)}var xF={kernelName:Ta,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[i,a,u,l]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<i;m++){let f=m*u*a*l;for(let d=0;d<a;d++){let h=d*(u*l);for(let g=0;g<u;g++){let x=g*l;for(let y=0;y<l;y++){let w=Math.round(u-g-1),v=f+h+x+y,N=c[v];if(w>=0&&w<u){let _=w*l,A=f+h+_+y;N=c[A]}s[v]=N}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function yJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=O0({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=h;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Qt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});h=oa({inputs:{a:h,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else h=oa({inputs:{a:h,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(f){let g=h;if(c==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Qt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});h=_c(t,h,f,x,d),t.disposeIntermediateTensorInfo(x)}else h=_c(t,h,f,a,d);t.disposeIntermediateTensorInfo(g)}return h}var yF={kernelName:Gi,backendName:"cpu",kernelFunc:yJ};function bJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=P0({inputs:{x:o,filter:s},backend:t,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=h;h=oa({inputs:{a:h,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=_c(t,h,f,a,d),t.disposeIntermediateTensorInfo(g)}return h}var bF={kernelName:Wi,backendName:"cpu",kernelFunc:bJ};function wJ(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=b.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[u,l,c,p]=I.prepareAndValidate(n,o);if(l===0)return t.makeTensorInfo(u,n.dtype,[]);let m=t.data.get(o.dataId).values,f=t.bufferSync(n),d=zx(m,f,n.dtype,l,a,c,p,n.shape,s);return t.makeTensorInfo(u,n.dtype,d.values)}var wF={kernelName:_a,backendName:"cpu",kernelFunc:wJ};function vJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n;et([o,s],"gatherV2");let u=b.parseAxisParam(i,o.shape)[0],l=t.data.get(s.dataId).values,c=o.shape[u];for(let v=0;v<l.length;++v){let N=l[v];b.assert(N<=c-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${c-1}]`)}let p=a;a==null&&(p=0);let m=b.sizeFromShape(s.shape),f=I.segment_util.collectGatherOpShapeInfo(o,s,u,p),d=Qt({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),h=Qt({inputs:{x:s},backend:t,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=t.bufferSync(h),y=t.bufferSync(d),w=Bx(y,x,g);return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.makeTensorInfo(f.outputShape,w.dtype,w.values)}var vF={kernelName:Ei,backendName:"cpu",kernelFunc:vJ};function CJ(r){let{inputs:e,backend:t}=r,{input:n}=e,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=Qt({inputs:{x:n},backend:t,attrs:{shape:[i,s]}}),u=Qx(a,!0,t),l=Qt({inputs:{x:u},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),l}var CF={kernelName:lp,backendName:"cpu",kernelFunc:CJ};var IJ=At(fs,r=>Number.isFinite(r)?1:0,"bool"),IF={kernelName:fs,backendName:"cpu",kernelFunc:IJ};var SJ=At(ds,r=>Math.abs(r)===1/0?1:0,"bool"),SF={kernelName:ds,backendName:"cpu",kernelFunc:SJ};var NJ=At(hs,r=>Number.isNaN(r)?1:0,"bool"),NF={kernelName:hs,backendName:"cpu",kernelFunc:NJ};function kJ(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=Vx(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var kF={kernelName:Ra,backendName:"cpu",kernelFunc:kJ};var TJ=At(ys,r=>Math.log1p(r)),TF={kernelName:ys,backendName:"cpu",kernelFunc:TJ};var _J=Jt((r,e)=>r&&e),EJ=oe($a,_J,null,"bool"),_F={kernelName:$a,backendName:"cpu",kernelFunc:EJ};var AJ=At(Fa,r=>r?0:1,"bool"),EF={kernelName:Fa,backendName:"cpu",kernelFunc:AJ};var DJ=Jt((r,e)=>r||e),RJ=oe(Oa,DJ,null,"bool"),AF={kernelName:Oa,backendName:"cpu",kernelFunc:RJ};function $J(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n;et(o,"LRN");let l=o.shape[3],c=l-1,p=t.data.get(o.dataId).values,m=b.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%l,x=h-g+Math.max(0,g-s),y=h-g+Math.min(g+s,c),w=0;for(;x<=y;x++){let v=p[x];w+=v*v}return w}for(let h=0;h<m;h++){let g=d(h),x=p[h]*Math.pow(i+a*g,-u);f[h]=x}return t.makeTensorInfo(o.shape,o.dtype,f)}var DF={kernelName:bs,backendName:"cpu",kernelFunc:$J};function FJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=n;et(i,"LRNGrad");let p=b.sizeFromShape(i.shape),m=i.shape[3],f=t.data.get(i.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let y=0;y<x;y++){let w=y%m,v=y-w+Math.max(0,w-a),N=y-w+Math.min(m,w+a+1),_=0;for(let A=v;A<N;A++)_+=Math.pow(d[A],2);_=l*_+u;for(let A=v;A<N;A++){let D=-2*l*c*d[A]*h[y]/_;y===A&&(D+=Math.pow(_,-c)),D*=f[y],g[A]+=D}}return t.makeTensorInfo(i.shape,o.dtype,g)}var RF={kernelName:Pa,backendName:"cpu",kernelFunc:FJ};function L0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=t,u=o.shape,l=u.length,c=b.parseAxisParam(s,u),p=c,m=I.getAxesPermutation(p,l),f=a.data.get(o.dataId).values;if(m!=null){let v=new Array(l);for(let N=0;N<v.length;N++)v[N]=u[m[N]];f=Im(f,u,o.dtype,m,v),p=I.getInnerMostAxes(p.length,l),u=v}et(o,"max"),I.assertAxesAreInnerMostDims("max",p,l);let[d,h]=I.computeOutAndReduceShapes(u,p),g=b.sizeFromShape(h),x=Gx(f,g,d,o.dtype),y=a.write(x,d,o.dtype),w=d;return i&&(w=I.expandShapeToKeepDim(d,c)),{dataId:y,shape:w,dtype:o.dtype}}var $F={kernelName:ws,backendName:"cpu",kernelFunc:L0};function OJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;et(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(o.shape,s,i,l,a,u),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=jr({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=Nm(m,o.shape,o.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var FF={kernelName:Cs,backendName:"cpu",kernelFunc:OJ};function PJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;et(o,"maxPool3d");let c=I.computePool3DInfo(o.shape,s,i,1,a,u,l),p=t.data.get(o.dataId).values,m=Jx(p,o.shape,o.dtype,b.computeStrides(o.shape),c,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}var OF={kernelName:Ai,backendName:"cpu",kernelFunc:PJ};function MJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;et([o,s],"maxPool3DGrad");let c=I.computePool3DInfo(s.shape,i,a,1,u,l),p=t.bufferSync(s),m=A$(p,c),f=c.strideDepth,d=c.strideHeight,h=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,N=c.effectiveFilterWidth,_=w-1-c.padInfo.front,A=N-1-c.padInfo.left,D=v-1-c.padInfo.top,F=wt(s.shape,"float32"),O=t.bufferSync(o);for(let V=0;V<c.batchSize;++V)for(let G=0;G<c.inChannels;++G)for(let W=0;W<c.inDepth;++W)for(let H=0;H<c.inHeight;++H)for(let q=0;q<c.inWidth;++q){let j=W-_,X=H-D,Z=q-A,tt=0;for(let st=0;st<w;st+=g){let it=(j+st)/f;if(!(it<0||it>=c.outDepth||Math.floor(it)!==it))for(let ut=0;ut<v;ut+=x){let rt=(X+ut)/d;if(!(rt<0||rt>=c.outHeight||Math.floor(rt)!==rt))for(let lt=0;lt<N;lt+=y){let ft=(Z+lt)/h;if(ft<0||ft>=c.outWidth||Math.floor(ft)!==ft)continue;let ht=w*v*N-1-m.get(V,it,rt,ft,G),It=st*v*N+ut*N+lt,Ft=ht===It?1:0;if(Ft===0)continue;let Dt=O.get(V,it,rt,ft,G);tt+=Dt*Ft}}}F.set(tt,V,W,H,q,G)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}var PF={kernelName:Ml,backendName:"cpu",kernelFunc:MJ};function LJ(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;et([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=n,m=I.computePool2DInfo(a.shape,u,l,1,c,p),f=t.data.get(a.dataId).values,d=wt(m.outShape,a.dtype,Zx(f,a.shape,a.dtype,m).values),h=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,y=m.dilationWidth,w=m.effectiveFilterHeight,v=m.effectiveFilterWidth,N=v-1-m.padInfo.left,_=w-1-m.padInfo.top,A=wt(a.shape,"float32"),D=t.data.get(o.dataId).values,F=wt(o.shape,"float32",D);for(let O=0;O<m.batchSize;++O)for(let V=0;V<m.inChannels;++V)for(let G=0;G<m.inHeight;++G)for(let W=0;W<m.inWidth;++W){let H=G-_,q=W-N,j=0;for(let X=0;X<w;X+=x){let Z=(H+X)/h;if(!(Z<0||Z>=m.outHeight||Math.floor(Z)!==Z))for(let tt=0;tt<v;tt+=y){let st=(q+tt)/g;if(st<0||st>=m.outWidth||Math.floor(st)!==st)continue;let it=w*v-1-d.get(O,Z,st,V),ut=X*v+tt,rt=it===ut?1:0;if(rt===0)continue;let lt=F.get(O,Z,st,V);j+=lt*rt}}A.set(j,O,G,W,V)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}var MF={kernelName:Pl,backendName:"cpu",kernelFunc:LJ};function LF(r,e,t,n,o){let s=b.computeStrides(e),i=Nm(r,e,t,s,o,"max"),a=Zx(r,e,t,o,!0,n);return[i.values,a.values]}var zF={kernelName:Ll,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;et(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,c=I.computePool2DInfo(n.shape,o,s,[1,1],i),[p,m]=LF(l,n.shape,n.dtype,a,c),f=u.write(p,c.outShape,n.dtype),d=u.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function zJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=b.parseAxisParam(s,o.shape),l=I.computeOutAndReduceShapes(o.shape,a)[1],c=b.sizeFromShape(l),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Ro({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});p.push(f);let d=Zf({inputs:{a:f,b:m},backend:t});p.push(d);let h=gl({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:i}});return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var BF={kernelName:Is,backendName:"cpu",kernelFunc:zJ};function BJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;et(o,"min");let a=b.parseAxisParam(s,o.shape),u=a,l=I.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ue({inputs:{x:o},backend:t,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,c.shape.length);let[p,m]=I.computeOutAndReduceShapes(c.shape,u),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,w=h[y];for(let v=0;v<f;++v){let N=h[y+v];(Number.isNaN(N)||N<w)&&(w=N)}d[x]=w}l!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(i){let x=I.expandShapeToKeepDim(p,a),y=Qt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}var VF={kernelName:Ss,backendName:"cpu",kernelFunc:BJ};function VJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:i}=n;et(o,"mirrorPad");let a=s.map((w,v)=>w[0]+o.shape[v]+w[1]),u=s.map(w=>w[0]),l=s.map((w,v)=>w[0]+o.shape[v]),c=i==="reflect"?0:1,p=t.data.get(o.dataId).values,m=o.shape.length,f=b.computeStrides(o.shape),d=b.sizeFromShape(a),h=a.length,g=b.computeStrides(a),x=b.getTypedArrayFromDType(o.dtype,d);for(let w=0;w<d;w++){let v=b.indexToLoc(w,h,g);for(let _=0;_<h;_++)v[_]<u[_]?v[_]=u[_]*2-v[_]-c:v[_]>=l[_]&&(v[_]=(l[_]-1)*2-v[_]+c);v=v.map((_,A)=>_-u[A]);let N=b.locToIndex(v,m,f);x[w]=p[N]}return{dataId:t.write(x,a,o.dtype),shape:a,dtype:o.dtype}}var GF={kernelName:ks,backendName:"cpu",kernelFunc:VJ};var GJ=Jt((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),WJ=oe(Ts,GJ),WF={kernelName:Ts,backendName:"cpu",kernelFunc:WJ};var HF=Sl(wf());function z0(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let u=b.parseAxisParam([a],o.shape),l=L0({inputs:{x:o},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),c=I.expandShapeToKeepDim(l.shape,u),p=Qt({inputs:{x:l},backend:t,attrs:{shape:c}}),m=Xf({inputs:{a:o,b:p},backend:t}),f=a0({inputs:{x:m},backend:t}),d=gl({inputs:{x:f},backend:t,attrs:{axis:u,keepDims:!1}}),h=Qt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Zf({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var UF={kernelName:Ys,backendName:"cpu",kernelFunc:z0};function UJ(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n;et(o,"multinomial");let u=a?o:z0({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=t.data.get(u.dataId).values,m=[l,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let d=0;d<l;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let x=HF.alea(i.toString()),y=d*s;for(let w=0;w<s;++w){let v=x();f[y+w]=g.length;for(let N=0;N<g.length;N++)if(v<g[N]){f[y+w]=N;break}}}return a||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(m,"int32",f)}var qF={kernelName:Ma,backendName:"cpu",kernelFunc:UJ};var HJ=Kr.nonMaxSuppressionV3Impl;function qJ(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n;et(o,"NonMaxSuppression");let l=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=HJ(l,c,i,a,u);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var KF={kernelName:za,backendName:"cpu",kernelFunc:qJ};var KJ=Kr.nonMaxSuppressionV4Impl;function jJ(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n;et(o,"NonMaxSuppressionPadded");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=KJ(c,p,i,a,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var jF={kernelName:Ba,backendName:"cpu",kernelFunc:jJ};var XJ=Kr.nonMaxSuppressionV5Impl;function YJ(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n;et(o,"NonMaxSuppressionWithScore");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=XJ(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var XF={kernelName:Va,backendName:"cpu",kernelFunc:YJ};function ZJ(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:i,onValue:a,offValue:u}=n;et(o,"oneHot");let l=b.sizeFromShape(o.shape),c=new Float32Array(l*i);c.fill(u);let p=t.data.get(o.dataId).values;for(let m=0;m<l;++m)p[m]>=0&&p[m]<i&&(c[m*i+p[m]]=a);return t.makeTensorInfo([...o.shape,i],s,c)}var YF={kernelName:Es,backendName:"cpu",kernelFunc:ZJ};function td(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Do({inputs:{input:n},backend:t}),s=td({inputs:{x:o},backend:t}),i=sa({inputs:{input:n},backend:t}),a=td({inputs:{x:i},backend:t}),u=br({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Qf({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var ZF={kernelName:Bi,backendName:"cpu",kernelFunc:td};function JF(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Do({inputs:{input:n},backend:t}),s=JF({inputs:{x:o},backend:t}),i=sa({inputs:{input:n},backend:t}),a=td({inputs:{x:i},backend:t}),u=br({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return Qf({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var QF={kernelName:Ri,backendName:"cpu",kernelFunc:JF};function B0(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return km({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(c=>{let p=km({inputs:{input:c},backend:t,attrs:{dim:o}});return a.push(p),p}),l=Nu({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),l}var tO={kernelName:$i,backendName:"cpu",kernelFunc:B0};function JJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;et(o,"pad");let a=s.map((y,w)=>y[0]+o.shape[w]+y[1]),u=s.map(y=>y[0]),l=t.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),p=o.shape.length,m=b.computeStrides(o.shape),f=b.sizeFromShape(a),d=a.length,h=b.computeStrides(a),g=b.getTypedArrayFromDType(o.dtype,f);i!==0&&g.fill(i);for(let y=0;y<c;y++){let v=b.indexToLoc(y,p,m).map((_,A)=>_+u[A]),N=b.locToIndex(v,d,h);g[N]=l[y]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}var ty={kernelName:As,backendName:"cpu",kernelFunc:JJ};var QJ=Jt((r,e)=>Math.pow(r,e)),tQ=oe(Ds,QJ),eO={kernelName:Ds,backendName:"cpu",kernelFunc:tQ};function eQ(r){let{inputs:e,backend:t,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=e,{outputRaggedRank:a}=n,u=o.map(x=>t.data.get(x.dataId).values),l=o.map(x=>x.shape),c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,[m,f,d]=Wx(u,l,c,s.shape,s.dtype,p,i.shape,a),h=m.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(d,s.dtype,f);return h.concat([g])}var rO={kernelName:cp,backendName:"cpu",kernelFunc:eQ};function rQ(r){let{inputs:e,backend:t}=r,{starts:n,limits:o,deltas:s}=e,i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,c]=Ux(i,n.shape,n.dtype,a,o.shape,u,s.shape),p=t.makeTensorInfo([l.length],"int32",l),m=t.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var nO={kernelName:pp,backendName:"cpu",kernelFunc:rQ};function nQ(r){let{inputs:e,backend:t,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=n,l=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,m=a.map(g=>t.data.get(g.dataId).values),f=a.map(g=>g.shape),[d,h]=Hx(l,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,u);return t.makeTensorInfo(d,s.dtype,h)}var oO={kernelName:mp,backendName:"cpu",kernelFunc:nQ};function oQ(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:i}=t,a=Cc(n,o,i,s);return e.makeTensorInfo([a.length],s,a)}var sO={kernelName:zl,backendName:"cpu",kernelFunc:oQ};var sQ=At(Fs,r=>1/r),iO={kernelName:Fs,backendName:"cpu",kernelFunc:sQ};function iQ(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;et(o,"resizeBilinear");let u=b.computeStrides(o.shape),[l,c]=a,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(b.sizeFromShape([p,l,c,d])),x=[s&&l>1?m-1:m,s&&c>1?f-1:f],y=[s&&l>1?l-1:l,s&&c>1?c-1:c],w=0,v=x[0]/y[0],N=x[1]/y[1];for(let _=0;_<p;_++)for(let A=0;A<l;A++){let D;i?D=v*(A+.5)-.5:D=v*A;let F=Math.max(0,Math.floor(D)),O=D-F,V=Math.min(m-1,Math.ceil(D)),G=_*u[0]+F*u[1],W=_*u[0]+V*u[1];for(let H=0;H<c;H++){let q;i?q=N*(H+.5)-.5:q=N*H;let j=Math.max(0,Math.floor(q)),X=q-j,Z=Math.min(f-1,Math.ceil(q)),tt=G+j*u[2],st=W+j*u[2],it=G+Z*u[2],ut=W+Z*u[2];for(let rt=0;rt<d;rt++){let lt=h[tt+rt],ft=h[st+rt],ht=h[it+rt],It=h[ut+rt],Ft=lt+(ht-lt)*X,Dt=ft+(It-ft)*X,Ht=Ft+(Dt-Ft)*O;g[w++]=Ht}}}return t.makeTensorInfo([p,l,c,d],"float32",g)}var aO={kernelName:Ms,backendName:"cpu",kernelFunc:iQ};function aQ(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;et([s,o],"resizeBilinearGrad");let a=b.computeStrides(o.shape),[u,l,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(u*l*c*p),h=[i&&m>1?l-1:l,i&&f>1?c-1:c],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=h[0]/g[0],y=h[1]/g[1],w=t.data.get(s.dataId).values,v=0;for(let N=0;N<u;N++){let _=N*a[0];for(let A=0;A<m;A++){let D=A*x,F=Math.floor(D),O=Math.min(Math.ceil(D),l-1),V=_+F*a[1],G=_+O*a[1],W=D-F,H=1-W;for(let q=0;q<f;q++){let j=q*y,X=Math.floor(j),Z=Math.min(Math.ceil(j),c-1),tt=j-X,st=1-tt,it=V+X*a[2],ut=V+Z*a[2],rt=G+X*a[2],lt=G+Z*a[2],ft=H*st,ht=H*tt,It=W*st,Ft=W*tt;for(let Dt=0;Dt<p;Dt++){let Ht=w[v++];d[it+Dt]+=Ht*ft,d[ut+Dt]+=Ht*ht,d[rt+Dt]+=Ht*It,d[lt+Dt]+=Ht*Ft}}}}return t.makeTensorInfo([u,c,l,p],"float32",d)}var lO={kernelName:Wa,backendName:"cpu",kernelFunc:aQ};function lQ(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n;et(o,"resizeNearestNeighbor");let u=b.computeStrides(o.shape),[l,c]=a,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(p*l*c*d),x=[s&&l>1?m-1:m,s&&c>1?f-1:f],y=[s&&l>1?l-1:l,s&&c>1?c-1:c],w=x[0]/y[0],v=x[1]/y[1],N=0;for(let _=0;_<p;_++){let A=_*u[0];for(let D=0;D<l;D++){let F=i?w*(D+.5):w*D,O=Math.min(m-1,s?Math.round(F):Math.floor(F));i&&(O=Math.max(0,O));let V=A+O*u[1];for(let G=0;G<c;G++){let W=i?v*(G+.5):v*G,H=Math.min(f-1,s?Math.round(W):Math.floor(W));i&&(H=Math.max(0,H));let q=V+H*u[2];for(let j=0;j<d;j++){let X=h[q+j];g[N++]=X}}}}return t.makeTensorInfo([p,l,c,d],o.dtype,g)}var uO={kernelName:Ps,backendName:"cpu",kernelFunc:lQ};function uQ(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n;et([s,o],"resizeNearestNeighborGrad");let a=b.computeStrides(o.shape),u=b.computeStrides(s.shape),[l,c,p,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(l*c*p*m),g=t.data.get(s.dataId).values,x=[i&&f>1?c-1:c,i&&d>1?p-1:p],y=[i&&f>1?f-1:f,i&&d>1?d-1:d],w=x[0]/y[0],v=x[1]/y[1],N=1/w,_=1/v,A=Math.ceil(N)*2+2,D=Math.ceil(_)*2+2;for(let F=0;F<l;F++){let O=F*a[0];for(let V=0;V<c;V++){let G=O+V*a[1],W=Math.floor(V*N),H=Math.floor(W-A/2);for(let q=0;q<p;q++){let j=G+q*a[2],X=Math.floor(q*_),Z=Math.floor(X-D/2);for(let tt=0;tt<m;tt++){let st=0;for(let it=0;it<A;it++){let ut=it+H;if(ut<0||ut>=f)continue;let rt=O+ut*u[1],lt=ut*w,ft=Math.min(c-1,i?Math.round(lt):Math.floor(lt));if(V===ft)for(let ht=0;ht<D;ht++){let It=ht+Z;if(It<0||It>=d)continue;let Ft=rt+It*u[2],Dt=It*v,Ht=Math.min(p-1,i?Math.round(Dt):Math.floor(Dt));q===Ht&&(st+=g[Ft+tt])}}h[j+tt]=st}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var cO={kernelName:Ga,backendName:"cpu",kernelFunc:uQ};function cQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;et(o,"reverse");let i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return jr({inputs:{x:o},backend:t});let u=new ae(o.shape,o.dtype),l=t.bufferSync(o);for(let c=0;c<u.size;c++){let p=u.indexToLoc(c),m=p.slice();a.forEach(f=>m[f]=o.shape[f]-1-m[f]),u.set(l.get(...m),...p)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}var pO={kernelName:zs,backendName:"cpu",kernelFunc:cQ};var mO={kernelName:Ja,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[l,c,p,m]=n.shape,[f,d]=I.getImageCenter(i,c,p),h=255,g=Math.sin(o),x=Math.cos(o),y=a.data.get(n.dataId).values;for(let v=0;v<l;v++){let N=v*p*c*m;for(let _=0;_<c;_++){let A=_*(p*m);for(let D=0;D<p;D++){let F=D*m;for(let O=0;O<m;O++){let V=[l,_,D,O],G=V[2],W=V[1],H=(G-f)*x-(W-d)*g,q=(G-f)*g+(W-d)*x;H=Math.round(H+f),q=Math.round(q+d);let j=s;if(typeof s!="number"&&(O===3?j=h:j=s[O]),H>=0&&H<p&&q>=0&&q<c){let Z=q*(p*m),tt=H*m,st=N+Z+tt+O;j=y[st]}let X=N+A+F+O;u[X]=j}}}}return{dataId:a.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var pQ=At(Bs,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2===0?e:e+1}),fO={kernelName:Bs,backendName:"cpu",kernelFunc:pQ};function mQ(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(s,o,i),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=gi(f,d,i,p,l,u,a,c,0,m);return t.makeTensorInfo(i,h.dtype,h.values)}var dO={kernelName:Ua,backendName:"cpu",kernelFunc:mQ};function fQ(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<e?t=o+1:n=o;return n}function dQ(r,e){let t=0,n=r.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),r[o]<=e?t=o+1:n=o;return n}function hO(r,e,t,n,o,s){let i=b.getArrayFromDType("int32",t*o);for(let a=0;a<t;++a){let u=r.slice(a*n,(a+1)*n),l=a*o;for(let c=0;c<o;++c)i[l+c]=s==="left"?fQ(u,e[c+l]):dQ(u,e[c+l])}return i}function hQ(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:i}=n,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,l=hO(a,u,o.shape[0],o.shape[1],s.shape[1],i);return t.makeTensorInfo(s.shape,"int32",l)}var gO={kernelName:qa,backendName:"cpu",kernelFunc:hQ};function gQ(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;et([n,o,s],"select");let i=n.shape.length,a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,c=ir(o.dtype,s.dtype),p=b.makeZerosTypedArray(b.sizeFromShape(o.shape),c),m=0,f=i===0||i>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let d=0;d<a.length;d++)for(let h=0;h<f;h++)a[d]===1?p[m++]=u[d]:p[m++]=l[d];return t.makeTensorInfo(o.shape,c,p)}var xO={kernelName:Oi,backendName:"cpu",kernelFunc:gQ};var xQ=I.SELU_SCALEALPHA,yQ=I.SELU_SCALE,bQ=At(Gs,r=>r>=0?yQ*r:xQ*(Math.exp(r)-1)),yO={kernelName:Gs,backendName:"cpu",kernelFunc:bQ};var wQ=At(Hs,r=>r<0?-1:r>0?1:0),bO={kernelName:Hs,backendName:"cpu",kernelFunc:wQ};var vQ=At(Ws,r=>Math.sin(r)),wO={kernelName:Ws,backendName:"cpu",kernelFunc:vQ};var CQ=At(Us,r=>Math.sinh(r)),vO={kernelName:Us,backendName:"cpu",kernelFunc:CQ};var IQ=11920928955078125e-23,CO=Math.log(IQ)+2,SQ=At(Ks,r=>{let e=r>-CO,t=r<CO,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),IO={kernelName:Ks,backendName:"cpu",kernelFunc:SQ};function NQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;et([o],"spaceToBatchND");let a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let _=1+s.length;_<o.shape.length;++_)u.push([0,0]);let l=ty.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,s,a,!1),p=I.getPermuted(c.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,a,!1),h=Qt({inputs:{x:l},backend:t,attrs:{shape:c}}),y=Ue({inputs:{x:h},backend:t,attrs:{perm:p}}),N=Qt({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(y),N}var SO={kernelName:Mi,backendName:"cpu",kernelFunc:NQ};function kQ(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.data.get(n.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values[0],[p,m,f,d,h]=qx(a,n.shape,n.dtype,u,o.dtype,l,c);return[t.makeTensorInfo(m,n.dtype,p),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var NO={kernelName:Bl,backendName:"cpu",kernelFunc:kQ};function TQ(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.data.get(o.dataId).values),a=t.data.get(n.dataId).values,u=Array.from(t.data.get(s.dataId).values),[l,c,p]=Kx(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(c,n.dtype,l),t.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var kO={kernelName:Ka,backendName:"cpu",kernelFunc:TQ};function _Q(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,c]=Sm(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(c,n.dtype,l)}var TO={kernelName:Vl,backendName:"cpu",kernelFunc:_Q};function EQ(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,[l,c]=Sm(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(c,n.dtype,l)}var _O={kernelName:Gl,backendName:"cpu",kernelFunc:EQ};function AQ(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=I.calculateShapes(s,o,a),f=!1,d=t.bufferSync(o),h;switch(s.dtype){case"bool":{let g=t.bufferSync(s),x=!!t.data.get(i.dataId).values[0];h=gi(d,g,a,m,c,l,u,p,x,f);break}case"float32":{let g=t.bufferSync(s),x=t.data.get(i.dataId).values[0];h=gi(d,g,a,m,c,l,u,p,x,f);break}case"int32":{let g=t.bufferSync(s),x=t.data.get(i.dataId).values[0];h=gi(d,g,a,m,c,l,u,p,x,f);break}case"string":{let g=t.bufferSync(s),x=b.decodeString(t.data.get(i.dataId).values[0]);h=gi(d,g,a,m,c,l,u,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return t.makeTensorInfo(a,h.dtype,h.values)}var EO={kernelName:ja,backendName:"cpu",kernelFunc:AQ};function DQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),c=o.shape.slice();return u.map(p=>{let m=[...c];m[a]=p;let f=Fo({inputs:{x:o},backend:t,attrs:{begin:l,size:m}});return l[a]+=p,f})}var AO={kernelName:Li,backendName:"cpu",kernelFunc:DQ};var DO={kernelName:Wl,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;et(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let u=o[a];s[a]=u*u}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var RQ=At(ho,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),RO={kernelName:ho,backendName:"cpu",kernelFunc:RQ};function $Q(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;et(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:v}=Ve.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=Qt({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=Ve.computeOutShape(y,w,v),A=Fo({inputs:{x:o},backend:t,attrs:{begin:y,size:_}});N=Qt({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(A)}else{let _=t.bufferSync(o),A=jx(f,_,v,y);N=t.makeTensorInfo(d,A.dtype,A.values)}return N}var $O={kernelName:Xa,backendName:"cpu",kernelFunc:$Q};function FQ(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:c,dataSplits:p}=e,m=t.data.get(c.dataId).values,f=t.data.get(p.dataId).values,[d,h]=Sc(m,f,o,s,i,a,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(p.shape,"int32",h)]}var FO={kernelName:Ul,backendName:"cpu",kernelFunc:FQ};function OQ(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values[0],[l,c,p]=Nc(a,u,o),m=c.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(p))]}var OO={kernelName:Hl,backendName:"cpu",kernelFunc:OQ};function PQ(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.data.get(s.dataId).values,a=kc(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var PO={kernelName:ql,backendName:"cpu",kernelFunc:PQ};var MQ=At(Qs,r=>Math.tan(r)),MO={kernelName:Qs,backendName:"cpu",kernelFunc:MQ};var LQ=At(ti,r=>Math.tanh(r)),LO={kernelName:ti,backendName:"cpu",kernelFunc:LQ};function zQ(r){let{inputs:e,backend:t}=r,{tensor:n,indices:o,updates:s}=e,{sliceRank:i,numUpdates:a,sliceSize:u,strides:l,outputSize:c}=I.calculateShapes(s,o,n.shape),p=!1,m=t.bufferSync(o),f=t.bufferSync(s),d=t.bufferSync(n),h=gi(m,f,n.shape,c,u,a,i,l,d,p);return t.makeTensorInfo(n.shape,h.dtype,h.values)}var zO={kernelName:Ha,backendName:"cpu",kernelFunc:zQ};function BQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;et(o,"tile");let i=Xx(t.bufferSync(o),s);return t.makeTensorInfo(i.shape,i.dtype,i.values)}var BO={kernelName:ro,backendName:"cpu",kernelFunc:BQ};function VQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n;et(o,"topk");let a=t.data.get(o.dataId).values,[u,l]=Yx(a,o.shape,o.dtype,s,i);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}var VO={kernelName:Ya,backendName:"cpu",kernelFunc:VQ};function GQ(r){let{inputs:e,attrs:t,backend:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=t,[c,p,m,f]=o.shape,[d,h]=l??[p,m],g=[c,d,h,f],x=b.computeStrides(o.shape),y=x[0],w=x[1],v=x[2],N=b.computeStrides(g),_=N[0],A=N[1],D=N[2],F=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(g));F.fill(u);let O=n.data.get(o.dataId).values,V=n.data.get(s.dataId).values;for(let W=0;W<c;++W){let H=s.shape[0]===1?V:V.subarray(W*8,W*8+8);for(let q=0;q<d;++q)for(let j=0;j<h;++j)for(let X=0;X<f;++X){let Z,tt=H[6]*j+H[7]*q+1;if(tt===0)continue;let st=(H[0]*j+H[1]*q+H[2])/tt,it=(H[3]*j+H[4]*q+H[5])/tt,ut=GO(st,m,a),rt=GO(it,p,a);switch(i){case"nearest":Z=KQ(O,p,m,y,w,v,W,rt,ut,X,u);break;case"bilinear":Z=jQ(O,p,m,y,w,v,W,rt,ut,X,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let lt=W*_+q*A+j*D+X;F[lt]=Z}return n.makeTensorInfo(g,o.dtype,F)}return{dataId:n.write(F,g,o.dtype),shape:o.shape,dtype:o.dtype}}var WO={kernelName:Za,backendName:"cpu",kernelFunc:GQ};function GO(r,e,t){switch(t){case"reflect":return WQ(r,e);case"wrap":return UQ(r,e);case"nearest":return qQ(r,e);case"constant":default:return HQ(r,e)}}function WQ(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{let n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return b.clamp(0,t,e-1)}function UQ(r,e){let t=r;if(t<0)if(e<=1)t=0;else{let n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{let n=e-1;t-=e*Math.trunc(t/n)}return b.clamp(0,t,e-1)}function HQ(r,e){return r}function qQ(r,e){return b.clamp(0,r,e-1)}function ed(r,e,t,n,o,s,i,a,u,l,c){let p=i*n+a*o+u*s+l;return 0<=a&&a<e&&0<=u&&u<t?r[p]:c}function KQ(r,e,t,n,o,s,i,a,u,l,c){let p=Math.round(a),m=Math.round(u);return ed(r,e,t,n,o,s,i,p,m,l,c)}function jQ(r,e,t,n,o,s,i,a,u,l,c){let p=Math.floor(a),m=Math.floor(u),f=p+1,d=m+1,h=(d-u)*ed(r,e,t,n,o,s,i,p,m,l,c)+(u-m)*ed(r,e,t,n,o,s,i,p,d,l,c),g=(d-u)*ed(r,e,t,n,o,s,i,f,m,l,c)+(u-m)*ed(r,e,t,n,o,s,i,f,d,l,c);return(f-a)*h+(a-p)*g}function XQ(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;et(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:u,indices:l}=Tc(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var UO={kernelName:Kl,backendName:"cpu",kernelFunc:XQ};function YQ(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],u=new Array(i-1),l=0;for(let f=0;f<i;f++)f!==s&&(u[l++]=o.shape[f]);let c=new Array(i).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){c[s]=f;let d=Fo({inputs:{x:o},backend:t,attrs:{begin:c,size:p}});m[f]=Qt({inputs:{x:d},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(d)}return m}var HO={kernelName:zi,backendName:"cpu",kernelFunc:YQ};function ZQ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n;et(o,"unsortedSegmentSum");let a=o.shape.length,u=s.shape.length,l=[],c=[],p=a-u,m=s;for(let d=0;d<p;++d){let h=km({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<i;++d){let h=b.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),x=s0({inputs:{a:g,b:m},backend:t}),y=Ro({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=vc({inputs:{a:y,b:o},backend:t}),v=gl({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});l.push(v),c.push(g),c.push(x),c.push(y),c.push(w),c.push(v)}let f=B0({inputs:l,backend:t,attrs:{axis:0}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var qO={kernelName:jl,backendName:"cpu",kernelFunc:ZQ};var JQ=[x$,NR,y$,b$,AR,w$,v$,C$,I$,S$,N$,k$,T$,_$,E$,D$,R$,$$,F$,g$,O$,P$,M$,DR,L$,ER,RR,z$,kR,B$,G$,W$,U$,H$,q$,K$,j$,X$,Y$,Z$,J$,Q$,tF,eF,rF,nF,oF,sF,iF,aF,lF,uF,pF,c$,mF,$R,fF,FR,dF,OR,hF,gF,xF,PR,MR,yF,bF,wF,vF,LR,zR,TR,CF,V$,IF,SF,NF,p$,BR,VR,kF,GR,TF,_F,EF,AF,DF,RF,$F,WR,FF,OF,PF,MF,zF,BF,VF,UR,GF,WF,qF,HR,qR,KF,jF,XF,KR,YF,QF,tO,ty,eO,m$,XR,rO,nO,oO,sO,_R,Jf,iO,f$,d$,h$,aO,lO,uO,cO,pO,mO,fO,t$,dO,gO,xO,yO,r$,bO,wO,vO,n$,UF,IO,SO,NO,kO,TO,_O,EO,AO,s$,DO,i$,a$,RO,$O,FO,OO,PO,l$,cF,MO,LO,zO,BO,VO,WO,jR,UO,HO,qO,ZF];for(let r of JQ)hp(r);var Ec={},ey={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function KO(r,e){Ec[r]=e}function Un(r,e){if(!(r in Ec)||e!=null){let n=ttt(r,e);if(n!==null)Ec[r]=n;else return console.log("Could not get context for WebGL version",r),null}let t=Ec[r];return t==null||t.isContextLost()?(delete Ec[r],Un(r)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ec[r])}function QQ(r){if(!z().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ttt(r,e){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=e??QQ(r);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ec[r]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(ey.failIfMajorPerformanceCaveat=!1),r===1?t.getContext("webgl",ey)||t.getContext("experimental-webgl",ey):t.getContext("webgl2",ey)}var Ac=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(Ac||{}),rn=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(rn||{}),Xr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(Xr||{});function Dc(r,e){return[e,r]}function jO(r,e){return r*e}function rd(r){let e=b.sizeFromShape(r),t=Math.ceil(e/4);return b.sizeToSquarishShape(t)}function ia(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function XO(r,e){let[t,n]=ia(r,e);return t*n*4}function nd(r,e){let t=r,n,o,s,i,a,u,l,c,p,m;return z().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,i=t.RGBA32F,a=t.RED,l=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT,u=t.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=t.RGBA,a=r.RGBA,l=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function xt(r,e){let t=e();return z().getBool("DEBUG")&&ett(r),t}function ett(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+ott(r,e))}var rtt=596e-10,ntt=65504;function YO(r){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||rtt<Math.abs(r)&&Math.abs(r)<ntt)}function ott(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function od(r,e){return xl(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function ZO(r,e){let t=xl(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xt(r,()=>r.shaderSource(t,e)),xt(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function JO(r,e){let t=xl(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xt(r,()=>r.shaderSource(t,e)),xt(r,()=>r.compileShader(t)),z().get("ENGINE_COMPILE_ONLY"))return t;if(r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw H0(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var stt=/ERROR: [0-9]+:([0-9]+):/g;function H0(r,e){let t=stt.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((p,m)=>b.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let u=i.slice(0,n-1),l=i.slice(n-1,n),c=i.slice(n);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${b.rightPad(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function QO(r){return xl(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function tP(r,e){if(xt(r,()=>r.linkProgram(e)),!z().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function ny(r,e){if(xt(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function eP(r,e){let t=xl(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),xt(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function rP(r,e){let t=xl(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xt(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),xt(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function nP(r){return xl(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function oP(r,e){let t=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function sP(r){return xl(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function q0(r,e,t,n,o,s,i){let a=r.getAttribLocation(e,t);return a===-1?!1:(xt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),xt(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),xt(r,()=>r.enableVertexAttribArray(a)),!0)}function itt(r,e,t){ltt(r,t),xt(r,()=>r.activeTexture(r.TEXTURE0+t)),xt(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function iP(r,e,t){return xl(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function aP(r,e,t){return r.getUniformLocation(e,t)}function lP(r,e,t,n){xt(r,()=>itt(r,e,n)),xt(r,()=>r.uniform1i(t,n))}function oy(r,e,t){xt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),xt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function K0(r,e){xt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),xt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function sd(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+att(r,e))}function att(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function xl(r,e,t){let n=xt(r,()=>e());if(n==null)throw new Error(t);return n}function ltt(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function ku(r,e=2){return b.sizeFromShape(r.slice(0,r.length-e))}function Tu(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function id(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[ku(r),...Tu(r)]),e}function uP(r,e=!1){let t=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=t/2),e&&(t=t*2,n=n*2,r=r.map((a,u)=>u>=r.length-2?b.nearestLargerEven(r[u]):r[u]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let o=b.sizeFromShape(r),s=null;r.length<=1&&o<=t?s=[1,o]:r.length===2&&r[0]<=t&&r[1]<=t?s=r:r.length===3&&r[0]*r[1]<=t&&r[2]<=t?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=t&&r[1]*r[2]<=t?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(s==null||i)if(e){let a=ku(r),u=2,l=2;r.length&&([u,l]=Tu(r)),o=a*(u/2)*(l/2),s=b.sizeToSquarishShape(o).map(c=>c*2)}else s=b.sizeToSquarishShape(o);return s}function ry(r){return r%2===0}function Rc(r,e){if(r=r.slice(-2),e=e.slice(-2),b.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r[r.length-1],n=e[e.length-1];if(t===n||ry(t)&&ry(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&ry(r[0])&&ry(e[0])}var G0,W0;function cP(r){if(G0==null){let e=Un(r);G0=e.getParameter(e.MAX_TEXTURE_SIZE)}return G0}function pP(r){if(W0==null){let e=Un(r);W0=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,W0)}function mP(r){if(r===0)return 0;let e,t=Un(r);return uo(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:uo(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function uo(r,e){return r.getExtension(e)!=null}function j0(r){try{if(Un(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function fP(r){if(r===0)return!1;let e=Un(r);if(r===1){if(!uo(e,"OES_texture_float"))return!1}else if(!uo(e,"EXT_color_buffer_float"))return!1;return U0(e)}function dP(r){if(r===0)return!1;let e=Un(r);if(r===1){if(!uo(e,"OES_texture_float")||!uo(e,"WEBGL_color_buffer_float"))return!1}else{if(uo(e,"EXT_color_buffer_float"))return U0(e);let n="EXT_color_buffer_half_float";if(uo(e,n)){let o=e.getExtension(n);return utt(e,o)}return!1}return U0(e)}function U0(r){let e=nd(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function utt(r,e){let t=nd(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function hP(r){return r!==2?!1:Un(r).fenceSync!=null}function aa(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&b.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Tt=z();Tt.registerFlag("HAS_WEBGL",()=>Tt.getNumber("WEBGL_VERSION")>0);Tt.registerFlag("WEBGL_VERSION",()=>j0(2)?2:j0(1)?1:0);Tt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Tt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Tt.get("WEBGL_VERSION")===2);Tt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Tt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Tt.registerFlag("WEBGL_PACK",()=>Tt.getBool("HAS_WEBGL"));Tt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_CLIP",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_REDUCE",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_CONV_IM2COL",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>cP(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>pP(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Tt.getNumber("WEBGL_VERSION");return r===0?0:mP(r)});Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Tt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Zl.isMobile());Tt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>fP(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Tt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Tt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Tt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>dP(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>hP(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Tt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Tt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Tt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Zl.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Tt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Tt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Tt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Tt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Tt.registerFlag("WEBGL_EXP_CONV",()=>!1);Tt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Tt.getBool("IS_TEST"));Tt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Tt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Tt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Tt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function He(){let r,e,t,n,o,s,i,a,u,l;return z().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function xi(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function $c(r,e,t="index"){let n=b.computeStrides(e);return n.map((o,s)=>{let i=`int ${r[s]} = ${t} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function ctt(r,e){let t=r.length,n=r.map(s=>`${e}[${s}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let s=t-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function gP(r,e,t="index"){let n=r.map((s,i)=>i),o=ctt(n,e);return o.map((s,i)=>{let a=`int ${r[i]} = ${t} / ${o[i]}`,u=i===o.length-1?`int ${r[i+1]} = ${t} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${u};`}).join("")}function Tm(r){let e=b.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function _m(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var iy=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:xP}=I;function yP(r,e,t){let n=[];if(r.forEach(f=>{let d=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){let{uniformShape:h}=ay(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>ptt(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=He(),u=dtt(a),l,c,p=xtt(a);return e.isPacked?(l=mtt(e.logicalShape,i,t.enableShapeUniforms),c=gtt(a)):(l=ftt(e.logicalShape,i,t.enableShapeUniforms),c=htt(a)),t.packedInputs&&(p+=vtt),[p,u,c,o,l,s,t.userCode].join(`
`)}function Am(r,e=!1){let t=r.shapeInfo.logicalShape;switch(t.length){case 0:return $tt(r,e);case 1:return Ott(r,e);case 2:return Mtt(r,e);case 3:return ztt(r,e);case 4:return Vtt(r,e);case 5:return Gtt(r);case 6:return Wtt(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function bP(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return Rtt(r);case 1:return Ftt(r,e);case 2:return Ptt(r,e);case 3:return Ltt(r,e);default:return Btt(r,e)}}function ptt(r,e,t=!1,n){let o="";t?o+=bP(r,n):o+=Am(r,n);let s=r.shapeInfo.logicalShape,i=e.logicalShape;return s.length<=i.length&&(t?o+=Utt(r,e):o+=Htt(r,e)),o}function mtt(r,e,t){switch(r.length){case 0:return wP();case 1:return Ctt(r,e,t);case 2:return Att(r,e,t);case 3:return Stt(r,e,t);default:return ktt(r,e,t)}}function ftt(r,e,t){switch(r.length){case 0:return wP();case 1:return Itt(r,e,t);case 2:return Dtt(r,e,t);case 3:return Ntt(r,e,t);case 4:return Ttt(r,e,t);case 5:return _tt(r,e);case 6:return Ett(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function dtt(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function htt(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function gtt(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function xtt(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ytt}
    ${btt}
    ${wtt}
  `}var ytt=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,btt=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wtt=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vtt=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function wP(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Ctt(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Itt(r,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Stt(r,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Ntt(r,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${$c(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=xi(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function ktt(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",u="b, r, c";for(let l=2;l<r.length-1;l++)i*=r[r.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Ttt(r,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${$c(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=xi(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function _tt(r,e){let t=xi(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Ett(r,e){let t=xi(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Att(r,e,t){let n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b.arraysEqual(r,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Dtt(r,e,t){return b.arraysEqual(r,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Fc(r){return`offset${r}`}function Rtt(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=He();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function $tt(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;let i=Fc(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;let[a,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Ftt(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=He();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function Ott(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Dm(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;let a=Fc(t);return i===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Ptt(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],u=He();if(s!=null&&b.arraysEqual(t,s))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Mtt(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(t,s)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(t),u=i;if(u.length<t.length){let m=Rm(r,u),f=["row","col"];return`
      ${Am(m,e)}
      float ${o}(int row, int col) {
        return ${o}(${$m(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Dm(r)}
      }
    `;let l=s[0],c=s[1],p=Fc(n);return c===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${p};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function Ltt(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){let m=t.slice(1),f=[1,2],d=Rm(r,m),h=["b","row","col"];return`
        ${bP(d,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${$m(h,f)});
        }
      `}let a=He();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let u=i[0],l=i[1],c=Math.ceil(t[2]/2),p=c*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function ztt(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:a,keptDims:u}=b.squeezeShape(t),l=a;if(l.length<t.length){let h=Rm(r,l),g=["row","col","depth"];return`
        ${Am(h,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${$m(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Dm(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],m=c[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===i&&f==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=Fc(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${d};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Btt(r,e){let t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=He();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let h=2;h<i-1;h++)f=`int b${h}, `+f,m*=s[i-h-1],d=`b${h} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function Vtt(r,e){let t=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,a=t[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(t);if(u.length<t.length){let y=Rm(r,u),w=["row","col","depth","depth2"];return`
      ${Am(y,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${$m(w,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Dm(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],d=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&c==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&c==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let x=Fc(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function Gtt(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,a=e[1]*i,{newShape:u,keptDims:l}=b.squeezeShape(e);if(u.length<e.length){let h=Rm(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${Am(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${$m(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${Dm(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=Fc(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Wtt(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(e);if(o.length<e.length){let g=Rm(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Am(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${$m(x,s)});
      }
    `}let i=e[5],a=e[4]*i,u=e[3]*a,l=e[2]*u,c=e[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Dm(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Fc(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Dm(r){let e=r.name,t=b.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Utt(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=xP(r.shapeInfo.logicalShape,e.logicalShape),u=Lt(i),l=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(y=>`coords.${p[y+l]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((y,w)=>`coords.${p[w+l]}`).join(", ");let f="return outputValue;",h=b.sizeFromShape(r.shapeInfo.logicalShape)===1,x=b.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let y=s-2,w=s-1;a.indexOf(y)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function Htt(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!r.shapeInfo.isUniform&&a===u&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let l=Lt(u),c=xP(r.shapeInfo.logicalShape,e.logicalShape),p=u-a,m,f=["x","y","z","w","u","v"];a===0?m="":u<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return u<2&&a>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function Lt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ay(r,e,t){let{newShape:n,keptDims:o}=b.squeezeShape(e),s=e.length,i=r&&s===3&&e[0]===1,a=i?e.slice(1):n,u=!r&&s>1&&!b.arraysEqual(e,t)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:o}}function Rm(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function $m(r,e){return e.map(t=>r[t]).join(", ")}function CP(r,e,t,n){let o=t.map((c,p)=>{let m={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(m.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[p],shapeInfo:m}}),s=o.map(c=>c.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=yP(o,i,e),u=JO(r.gl,a),l=r.createProgram(u);return z().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(l),Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:s,outShapeInfo:i},X0(r,e,l)))}function X0(r,e,t){let n=[],o=[],s,i,a,u=null,l=null;l=r.getUniformLocation(t,"NAN",!1),z().getNumber("WEBGL_VERSION")===1&&(u=r.getUniformLocation(t,"INFINITY",!1));let c=!1;for(let p of e.variableNames){let m={name:p,uniform:r.getUniformLocation(t,p,c),offset:r.getUniformLocation(t,`offset${p}`,c)};e.enableShapeUniforms&&(m.shape=r.getUniformLocation(t,`${p}Shape`,c),m.texShape=r.getUniformLocation(t,`${p}TexShape`,c)),n.push(m)}if(e.enableShapeUniforms&&(s=r.getUniformLocation(t,"outShape",c),a=r.getUniformLocation(t,"outShapeStrides",c),i=r.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(let p of e.customUniforms)o.push(r.getUniformLocation(t,p.name,c));return{variablesLocations:n,customUniformLocations:o,infLoc:u,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:i}}function vP(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],i=s.shape;if(!b.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&s.isUniform)return;let a=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function IP(r,e,t,n,o){e.program.enableShapeUniforms||(vP(e.inShapeInfos,t),vP([e.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(e.webGLProgram),r.bindVertexArray(e.webGLProgram.vao),z().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){let l=t[u],{uniform:c,offset:p,shape:m,texShape:f}=e.variablesLocations[u];if(m){let{uniformShape:d}=ay(e.program.packedInputs,l.shape,l.texData.texShape);switch(d.length){case 1:r.gl.uniform1iv(m,new Int32Array(d));break;case 2:r.gl.uniform2iv(m,new Int32Array(d));break;case 3:r.gl.uniform3iv(m,new Int32Array(d));break;case 4:r.gl.uniform4iv(m,new Int32Array(d));break;default:break}}if(f&&r.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),c!=null){if(l.isUniform){if(b.sizeFromShape(l.shape)<2)r.gl.uniform1f(c,l.uniformValues[0]);else{let d=l.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),r.gl.uniform1fv(c,d)}continue}l.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,l.texData.slice.flatOffset),r.setInputMatrixTexture(l.texData.texture.texture,c,u)}}let a=e.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(e.outShapeStridesLocation){let u=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break;default:break}}if(e.outTexShapeLocation&&r.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o)for(let u=0;u<e.program.customUniforms.length;++u){let l=e.program.customUniforms[u],c=e.customUniformLocations[u],p=o[u];if(l.type==="float")r.gl.uniform1fv(c,p);else if(l.type==="vec2")r.gl.uniform2fv(c,p);else if(l.type==="vec3")r.gl.uniform3fv(c,p);else if(l.type==="vec4")r.gl.uniform4fv(c,p);else if(l.type==="int")r.gl.uniform1iv(c,p);else if(l.type==="ivec2")r.gl.uniform2iv(c,p);else if(l.type==="ivec3")r.gl.uniform3iv(c,p);else if(l.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}r.executeProgram()}function SP(r,e,t){let n="";e.concat(t).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:p}=ay(r.packedInputs,i.shape,u),m="",f="",d="";if(c.length===1&&r.packedInputs){let N=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${N[0]>1}_${N[1]>1}`}else if(c.length===2&&!r.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let N=b.computeStrides(c);d=`${N[0]===u[1]}_${N[N.length-1]===u[1]}`}let h=i.shape.length,g=c.length===2&&b.arraysEqual(i.shape,u),x=b.sizeFromShape(i.shape)===1,y=I.getBroadcastDims(i.shape,t.shape),w=!r.packedInputs&&h===t.shape.length&&b.arraysEqual(u,t.texData.texShape),v=r.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${w}_${l?p:""}_${c.length}_${x}_${y}_${g}_${m}_${f}_${d}_${v}_${a}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${z().getNumber("WEBGL_VERSION")}`,s}function he(r){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var ly=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ac.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=He();this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?$c(["r","c","d"],e):xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}};var uy=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ac.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=He();this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?$c(["r","c","d"],e):xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}};var cy=class{constructor(e){this.variableNames=["A"],this.outTexUsage=rn.DOWNLOAD;let t=He();this.outputShape=e,this.userCode=`
      ${iy}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var py=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=rn.DOWNLOAD;let t=He();this.outputShape=e,this.userCode=`
      ${iy}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var jtt={R:0,G:1,B:2,A:3},ad=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=He();this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){let u=n[a];i+=`
          if(offset == ${a}) {
            result = values[${jtt[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?_m():Tm(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${i}
        }
        ${o.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var my=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=He();this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length);let o="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let u=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?_m():Tm(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};function NP(r){let e=He(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return ZO(r,t)}function kP(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return eP(r,e)}function TP(r){let e=new Uint16Array([0,1,2,2,1,3]);return rP(r,e)}function ld(r,e,t,n,o,s){oP(e,t);let i=nP(r),a=r.TEXTURE_2D;return xt(r,()=>r.bindTexture(a,i)),xt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),xt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),xt(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),xt(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),z().getNumber("WEBGL_VERSION")===1?xt(r,()=>r.texImage2D(a,0,n,e,t,0,o,s,null)):xt(r,()=>r.texStorage2D(a,1,n,e,t)),xt(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function Y0(r){return r.internalFormatFloat}function _P(r,e,t,n){let[o,s]=Dc(e,t);return ld(r,o,s,Y0(n),n.textureFormatFloat,r.FLOAT)}function Z0(r){return r.internalFormatHalfFloat}function EP(r,e,t,n){let[o,s]=Dc(e,t);return ld(r,o,s,Z0(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function J0(r){return r.downloadTextureFormat}function AP(r,e,t,n){let[o,s]=Dc(e,t);return ld(r,o,s,J0(n),r.RGBA,r.UNSIGNED_BYTE)}function Q0(r){return r.internalFormatPackedFloat}function DP(r,e,t,n){let[o,s]=ia(e,t);return ld(r,o,s,Q0(n),r.RGBA,r.FLOAT)}function tN(r){return r.internalFormatPackedHalfFloat}function RP(r,e,t,n){let[o,s]=ia(e,t);return ld(r,o,s,tN(n),r.RGBA,n.textureTypeHalfFloat)}function $P(r,e,t){return xt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),q0(r,e,"clipSpacePos",t,3,20,0)&&q0(r,e,"uv",t,2,20,12)}function FP(r,e,t,n,o,s){xt(r,()=>r.bindTexture(r.TEXTURE_2D,e));let i,a,u;o instanceof Uint8Array?(i=new Uint8Array(t*n*4),a=r.UNSIGNED_BYTE,u=r.RGBA):(i=new Float32Array(t*n*4),a=r.FLOAT,u=s.internalFormatPackedFloat),i.set(o),z().getNumber("WEBGL_VERSION")===2?xt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,a,i)):xt(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,t,n,0,r.RGBA,a,i)),xt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function OP(r,e,t){xt(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?z().getNumber("WEBGL_VERSION")===2?xt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):xt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):z().getNumber("WEBGL_VERSION")===2?xt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):xt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),xt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function PP(r,e,t,n){let o=r.createBuffer();xt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*e*t;return xt(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),xt(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),xt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function MP(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function LP(r,e,t,n){let[o,s]=Dc(e,t),i=4,a=new Uint8Array(jO(e*t,i));return xt(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function zP(r,e,t,n,o,s,i,a){let u=r,l=new Float32Array(XO(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function BP(r,e,t){let n=new Float32Array(e*t*4);return xt(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Fm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=z().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,KO(t,e)):this.gl=Un(t),e=this.gl,z().getNumber("WEBGL_VERSION")===2){let s=e;this.createVertexArray=()=>xt(s,()=>s.createVertexArray()),this.bindVertexArray=i=>xt(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>xt(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>xt(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(e!=null){let s=e.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>xt(e,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>xt(e,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>xt(e,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>xt(e,()=>e.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),z().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=od(this.gl,s),uo(this.gl,i))this.textureHalfFloatExtension=od(this.gl,i);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),uo(this.gl,o))this.colorBufferHalfFloatExtension=od(this.gl,o);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",uo(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(uo(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=kP(this.gl),this.indexBuffer=TP(this.gl),this.framebuffer=sP(this.gl),this.textureConfig=nd(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;xt(e,()=>e.finish()),xt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xt(e,()=>e.deleteFramebuffer(this.framebuffer)),xt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xt(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_P(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),EP(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),AP(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),OP(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),FP(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),RP(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),DP(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(K0(this.gl,this.framebuffer),this.outputTexture=null),xt(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>LP(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,i){return zP(this.gl,e,t,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return MP(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=PP(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(z().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=s}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>BP(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=NP(t));let n=QO(t);xt(t,()=>t.attachShader(n,this.vertexShader)),xt(t,()=>t.attachShader(n,e)),tP(t,n);let o=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ny(t,o),o}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;xt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),$P(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(xt(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&ny(this.gl,this.program),xt(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?iP(this.gl,e,t):aP(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xt(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),lP(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ia(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ny(this.gl,this.program),sd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}xt(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=od(this.gl,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await b.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Ytt(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in z().platform&&(n=z().platform.setTimeoutCustom.bind(z().platform)),b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),oy(this.gl,e,this.framebuffer),this.debug&&sd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(oy(this.gl,this.outputTexture,this.framebuffer),this.debug&&sd(this.gl)):K0(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;oy(o,e,this.framebuffer),this.debug&&sd(o),this.outputTexture=e,xt(o,()=>o.viewport(0,0,t,n)),xt(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),xt(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Ytt(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{addImpl:VP,bincountImpl:fy,bincountReduceImpl:GP,bitwiseAndImpl:WP,castImpl:UP,ceilImpl:HP,concatImpl:qP,equalImpl:KP,expImpl:jP,expm1Impl:XP,floorImpl:YP,gatherNdImpl:ZP,gatherV2Impl:JP,greaterImpl:QP,greaterEqualImpl:tM,lessImpl:eM,lessEqualImpl:rM,linSpaceImpl:nM,logImpl:oM,maxImpl:sM,maximumImpl:iM,minimumImpl:aM,multiplyImpl:lM,negImpl:uM,notEqualImpl:cM,prodImpl:pM,raggedGatherImpl:mM,raggedRangeImpl:fM,raggedTensorToTensorImpl:dM,rangeImpl:hM,rsqrtImpl:gM,scatterImpl:xM,sigmoidImpl:yM,simpleAbsImpl:dy,sliceImpl:bM,sparseFillEmptyRowsImpl:wM,sparseReshapeImpl:vM,sparseSegmentReductionImpl:hy,sqrtImpl:CM,staticRegexReplaceImpl:IM,stridedSliceImpl:SM,stringNGramsImpl:NM,stringSplitImpl:kM,stringToHashBucketFastImpl:TM,subImpl:_M,tileImpl:EM,topKImpl:AM,transposeImpl:Oc,uniqueImpl:DM}=_0;function eN(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function er(r,e){return e===1?[r]:eN(r,e)}function RM(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var gy=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=he(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=er("rc",this.rank),n=Lt(this.rank),o=this.getOutOfBoundsCondition(t),s=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${e[e.length-1-i]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}};var Om=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Ztt(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?_m():Tm(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Ztt(r,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?gP(["r","c","d"],"inputShape"):xi(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var xy=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let o=FM(t,n),s=OM(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=$M(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let u=this.freeTextures[s].pop();return this.usedTextures[s].push(u),u}let a;return o===Xr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Xr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Xr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Xr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Xr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=FM(n,o),i=OM(t,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=$M(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let l=this.usedTextures[i],c=l&&l.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Jtt(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function $M(r,e,t,n,o){let s=Qtt(e,n),i;if(o){let[u,l]=ia(r[0],r[1]);i=u*l}else{let[u,l]=Dc(r[0],r[1]);i=u*l}let a=Jtt(t,s);return i*a}function Qtt(r,e){switch(r){case Xr.PACKED_2X2_FLOAT32:return Q0(e);case Xr.PACKED_2X2_FLOAT16:return tN(e);case Xr.UNPACKED_FLOAT32:return Y0(e);case Xr.UNPACKED_FLOAT16:return Z0(e);case Xr.PACKED_4X1_UNSIGNED_BYTE:return J0(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function tet(r){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Xr.PACKED_2X2_FLOAT32:Xr.UNPACKED_FLOAT32:r?Xr.PACKED_2X2_FLOAT16:Xr.UNPACKED_FLOAT16}function FM(r,e){if(r===rn.UPLOAD)return Xr.PACKED_2X2_FLOAT32;if(r===rn.RENDER||r==null)return tet(e);if(r===rn.DOWNLOAD||r===rn.PIXELS)return Xr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function OM(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var Pr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},gr="if (isnan(x)) return x;",PM="return x;",rN="return abs(x);";var MM="return (x >= 0.0) ? x : (exp(x) - 1.0);",LM=gr+`
  return (x < 0.0) ? 0.0 : x;
`,zM=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,la="return x;",BM="return 1.0 / (1.0 + exp(-1.0 * x));";var GM="return x;",WM=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,UM=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HM=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qM="return 1.0 / (1.0 + exp(-1.0 * x));",kn=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var yy=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length);let t=e.length,n=er("rc",t),o=Lt(t),s=RM(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var ret=Kr.whereImpl,net=1e-7,oet=1e-4,by={};function set(r){return r in by||(by[r]={}),by[r]}var iet=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),aet=600;function uet(){return z().global.screen==null?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*aet/1024/1024}var KM=(()=>{class r extends Lo{nextDataId(){return r.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(t!=null){if(t instanceof Fm)n=t;else{let o=Un(z().getNumber("WEBGL_VERSION"),t);n=new Fm(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Un(z().getNumber("WEBGL_VERSION"));n=new Fm(o),this.binaryCache=set(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xy(this.gpgpu),this.numMBBeforeWarning=uet(),this.texData=new da(this,Mn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,n,o,s,i,a){let u=this.makeTensorInfo(n,o),l=this.texData.get(u.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[s,i]},l.texShape=[s,i];let c=id(n),p=new ad(c,!1,a),m=this.runWebGLProgram(p,[u],o,[[s,i]]);return m.shape=n,l.texture=null,this.disposeIntermediateTensorInfo(u),m.dataId}write(t,n,o){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(t),o==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:t,usage:rn.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--}}move(t,n,o,s,i){if(z().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:o,dtype:s,values:n,usage:rn.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let n=this.texData.get(t),{values:o,dtype:s,complexTensorInfos:i,slice:a,shape:u,isPacked:l}=n;if(a!=null){let f;l?f=new kn(u,la):f=new Pr(u,la);let d=this.runWebGLProgram(f,[{dataId:t,shape:u,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(o!=null)return this.convertAndCacheOnCPU(t);if(s==="string")return o;let c=this.activeTimers!=null,p;c&&(p=b.now());let m;if(s==="complex64"){let f=this.readSync(i.real.dataId),d=this.readSync(i.imag.dataId);m=I.mergeRealAndImagArrays(f,d)}else m=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(t,m)}async read(t){if(this.pendingRead.has(t)){let h=this.pendingRead.get(t);return new Promise(g=>h.push(g))}let n=this.texData.get(t),{values:o,shape:s,slice:i,dtype:a,complexTensorInfos:u,isPacked:l}=n;if(i!=null){let h;l?h=new kn(s,la):h=new Pr(s,la);let g=this.runWebGLProgram(h,[{dataId:t,shape:s,dtype:a}],a),x=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),x}if(o!=null)return this.convertAndCacheOnCPU(t);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&z().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(t);let h=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(h.texture.texture,...rd(s))}this.pendingRead.set(t,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let m;if(a==="complex64"){let h=await Promise.all([this.read(u.real.dataId),this.read(u.imag.dataId)]),g=h[0],x=h[1];m=I.mergeRealAndImagArrays(g,x)}else if(c==null)m=this.getValuesFromTexture(t);else{let h=b.sizeFromShape(s);m=this.gpgpu.downloadFloat32MatrixFromBuffer(c,h)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let h=this.gpgpu.gl;xt(h,()=>h.deleteBuffer(c))}let f=this.convertAndCacheOnCPU(t,m),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(h=>h(f)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Mn().removeDataId(t,this),this.pendingDeletes--),f}readToGPU(t,n={}){let o=this.texData.get(t),{values:s,shape:i,slice:a,dtype:u,isPacked:l,texture:c}=o;if(u==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;l?d=new kn(i,la):d=new Pr(i,la);let h=this.runWebGLProgram(d,[{dataId:t,shape:i,dtype:u}],u),g=this.readToGPU(h,n);return this.disposeIntermediateTensorInfo(h),g}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(t,n.customTexShape),m=Mn().makeTensorFromTensorInfo(p),f=this.texData.get(p.dataId);return Object.assign({tensorRef:m},f.texture)}bufferSync(t){let n=this.readSync(t.dataId);if(t.dtype==="string")try{let o=n.map(s=>b.decodeString(s));return wt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(t.shape,t.dtype,n)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){let o=t[n];if(!YO(o))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:n,dtype:o,isPacked:s}=this.texData.get(t),i=b.sizeFromShape(n);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let f=this.decode(t),d=this.texData.get(f.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...rd(n)).subarray(0,i);return this.disposeIntermediateTensorInfo(f),h}let a=z().getBool("WEBGL_PACK")&&s===!0,u=a?id(n):n,l=a?new py(u):new cy(u),c=this.runWebGLProgram(l,[{shape:u,dtype:o,dataId:t}],"float32"),p=this.texData.get(c.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),m}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,t();let i=b.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=b.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(i);u.kernelMs=b.sum(l),u.getExtraProfileInfo=()=>l.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else u.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,u})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(t){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=b.now(),t)}async getQueryTime(t){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:o}=this.texData.get(t);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:n,dtype:o,texShape:s,usage:i,isPacked:a,slice:u}=this.texData.get(t),l=u&&u.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,i,a)));let p=this.texData.get(t);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=iet){return z().getBool("WEBGL_CPU_FORWARD")&&t.every(o=>this.texData.get(o.dataId).texture==null&&b.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=t.dataSync();return ret(t.shape,n)}packedUnaryOp(t,n,o){let s=new kn(t.shape,n),i=this.compileAndRun(s,[t],o);return Mn().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let s=dy(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,s)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,rN,t.dtype);let n=new Pr(t.shape,rN),o=this.compileAndRun(n,[t]);return Mn().makeTensorFromTensorInfo(o)}makeTensorInfo(t,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&b.isString(o[0])){let i=o.map(a=>b.encodeString(a));s=this.write(i,t,n)}else s=this.write(o,t,n);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:n}}makeOutput(t,n,o){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,o),this)}unpackTensor(t){let n=new yy(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){let n=new gy(t.shape);return this.runWebGLProgram(n,[t],t.dtype,null,!0)}packedReshape(t,n){let o=[ku(t.shape),...Tu(t.shape)],s={dtype:t.dtype,shape:o,dataId:t.dataId},i=[ku(n),...Tu(n)],a=new Om(i,o),u=!0,l=[o],c=this.runWebGLProgram(a,[s],t.dtype,l,u);return{dataId:c.dataId,shape:n,dtype:c.dtype}}decode(t,n){let o=this.texData.get(t),{isPacked:s,shape:i,dtype:a}=o;if(n!=null){let f=b.sizeFromShape(i),d=n[0]*n[1]*4;b.assert(f<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let u=id(i),l;s?l=new uy(u):l=new ly(u);let c=!0,p=[n??rd(u)],m=this.runWebGLProgram(l,[{shape:u,dtype:a,dataId:t}],a,p,c,n);return{dtype:a,shape:i,dataId:m.dataId}}runWebGLProgram(t,n,o,s,i=!1,a){let u=this.makeTensorInfo(t.outputShape,o),l=this.texData.get(u.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Ac.DENSE){let y=a??rd(t.outputShape);l.texShape=y.map(w=>w*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),b.sizeFromShape(u.shape)===0)return l.values=b.getTypedArrayFromDType(u.dtype,0),u;let c=[],p=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(y.dataId);if(w.texture==null){if(!t.packedInputs&&b.sizeFromShape(y.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:w.values};t.packedInputs&&(w.isPacked=!0,w.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!w.isPacked!=!!t.packedInputs)y=w.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),w=this.texData.get(y.dataId);else if(w.isPacked&&!Rc(w.shape,y.shape)){let v=y,N=y.shape;y.shape=w.shape,y=this.packedReshape(y,N),c.push(y),w=this.texData.get(y.dataId),v.shape=N}return{shape:y.shape,texData:w,isUniform:!1}});this.uploadToGPU(u.dataId);let m={shape:u.shape,texData:l,isUniform:!1},f=SP(t,p,m),d=this.getAndSaveBinary(f,()=>CP(this.gpgpu,t,p,m)),h=this.activeTimers!=null,g;h&&(g=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||IP(this.gpgpu,d,p,m,s),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),h&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));let x=z().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){let y=b.now();y-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){let y=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),y}return u}compileAndRun(t,n,o,s,i=!1){return o=o||n[0].dtype,this.runWebGLProgram(t,n,o,s,i)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=B(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=z().getBool("DEBUG");z().set("DEBUG",!1);let n=this.abs(pt(1e-8)).dataSync()[0];if(z().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?net:oet}uploadToGPU(t){let n=this.texData.get(t),{shape:o,dtype:s,values:i,texture:a,usage:u,isPacked:l}=n;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=b.now());let m=n.texShape;if(m==null&&(m=uP(o,l),n.texShape=m),i!=null){let f=id(o),d,h=m[1],g=m[0],x=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!x)&&([h,g]=ia(m[0],m[1])),l?d=new my(f,x):d=new ad(f,x);let y=x?[g,h]:m,w=this.makeTensorInfo(y,s),v=this.texData.get(w.dataId);x?v.usage=rn.PIXELS:v.usage=rn.UPLOAD,v.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),h,g,i);let N=[[g,h]],A=this.runWebGLProgram(d,[w],s,N,!0),D=this.texData.get(A.dataId);n.texShape=D.texShape,n.isPacked=D.isPacked,n.usage=D.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(n.texture=D.texture,n.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(w),c&&(this.uploadWaitMs+=b.now()-p)}else{let f=this.acquireTexture(m,u,s,l);n.texture=f}}convertAndCacheOnCPU(t,n){let o=this.texData.get(t),{dtype:s}=o;return n!=null&&(o.values=cet(n,s)),o.values}acquireTexture(t,n,o,s){if(this.numBytesInGPU+=this.computeBytes(t,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,s)}computeBytes(t,n){return t[0]*t[1]*b.bytesPerElement(n)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(n));return Promise.all(t)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(i){throw i}});t.push(o)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await kf(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(H0(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:n,customUniformLocations:o,infLoc:s,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:l}=X0(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=n,t.customUniformLocations=o,t.infLoc=s,t.nanLoc=i,t.outShapeLocation=a,t.outShapeStridesLocation=u,t.outTexShapeLocation=l}}createTensorFromGPUData(t,n,o){t.channels=t.channels||"RGBA";let{texture:s,height:i,width:a,channels:u}=t,l=Mn().backend;if(!l.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=l.writeTexture(s,n,o,i,a,u);return Mn().makeTensorFromDataId(c,n,o,l)}}return r.nextDataId=0,r})();function cet(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}Zl.isBrowser()&&Cp("webgl",()=>new KM,2);var Pm=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Tn=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=he(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var qn=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Hn=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=I.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=he(s);let i="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Lt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=er("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function rr(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var jM={kernelName:fo,backendName:"webgl",kernelFunc:rr};function _n(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),i=t.texData.get(s.dataId),a=rr({inputs:{x:n},backend:t}),u=rr({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:u},s}var XM={kernelName:rp,backendName:"webgl",kernelFunc:_n};var nN="return (a < 0.) ? b * a : a;",oN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,i=t.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hn(oN,o.shape,i.shape):new Tn(nN,o.shape,i.shape),u=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),u}var YM={kernelName:gs,backendName:"webgl",kernelFunc:pet};var sN="return (a < 0.) ? b * a : a;",iN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function met(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hn(iN,n.shape,o.shape):new Tn(sN,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],"float32")}var ZM={kernelName:Rs,backendName:"webgl",kernelFunc:met};var Oo="if (isnan(x)) return x;";function Ct({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,u=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){let p=a.texData.get(i.dataId),m=t(p.values,u);return a.makeTensorInfo(i.shape,u,m)}let l=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return l?c=new kn(i.shape,e):c=new Pr(i.shape,r),a.runWebGLProgram(c,[i],u)}}function ue({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:u,b:l}=i,c=a;if(n&&u.dtype==="complex64"){let d=c.texData.get(u.dataId),h=c.texData.get(l.dataId),[g,x]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[v,N]=w,_={dataId:v.dataId,dtype:v.dtype,shape:u.shape},A={dataId:N.dataId,dtype:N.dtype,shape:l.shape},D=new Tn(r,u.shape,l.shape);return c.runWebGLProgram(D,[_,A],ir(v.dtype,N.dtype))}),y=_n({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),y}let p=s||ir(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&o!=null){let d=c.texData.get(u.dataId).values,h=c.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(d):d,x=u.dtype==="string"?I.fromUint8ToStringArray(h):h,[y,w]=o(u.shape,l.shape,g,x,p),v=c.makeTensorInfo(w,p),N=c.texData.get(v.dataId);return N.values=y,v}let m=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Hn(e,u.shape,l.shape,t):f=new Tn(r,u.shape,l.shape),c.runWebGLProgram(f,[u,l],p)}}function yl(r,e=!1){if(r==="linear")return e?GM:PM;if(r==="relu")return e?UM:LM;if(r==="elu")return e?WM:MM;if(r==="relu6")return e?HM:zM;if(r==="prelu")return e?iN:sN;if(r==="leakyrelu")return e?oN:nN;if(r==="sigmoid")return e?qM:BM;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Mm=class{constructor(e,t,n,o=!1,s=!1,i=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=he(this.outputShape.length);let c=o?e[1]:e[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",v="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${v};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}};var aN={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},ud=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var JM="return a * b;";function cd(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),l=new ud(aN.REAL,n.shape,o.shape),c=new ud(aN.IMAG,n.shape,o.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(l,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=_n({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let a=t.texData.get(n.dataId),u=t.texData.get(o.dataId),[l,c]=lM(n.shape,o.shape,a.values,u.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=l,p}let i;return z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Hn(JM,n.shape,o.shape):i=new Tn(JM,n.shape,o.shape),t.runWebGLProgram(i,[n,o],s)}var QM={kernelName:_s,backendName:"webgl",kernelFunc:cd};function tL(r,e,t){let n=[ku(r.shape),...Tu(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[ku(e),...Tu(e)],i=new Om(s,n),a=!0,u=[n],l=t.runWebGLProgram(i,[o],r.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function ot(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,i=t,a=b.sizeFromShape(o.shape),u=b.inferFromImplicitShape(s,a),l=b.sizeFromShape(u);b.assert(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(o.dataId);return c.isPacked&&!Rc(o.shape,u)&&!(c.texture!==null&&Rc(c.shape,u))?tL(o,u,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var eL={kernelName:Fi,backendName:"webgl",kernelFunc:ot};var pd=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(t!=null){let p=1/t;l=`sumValue += dot(values * ${b.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var wy=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=e;this.outputShape=[o,i];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function det(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=I.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Kn(r,e,t,n){let o=det(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:u,outSize:l}=o[i],c,p;t==="mean"?c=i===0?new pd({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},a):new pd({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l}):c=new wy({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},t),p=s,s=n.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var vy=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;let o=Lt(this.rank),s=het(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function het(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var Cy=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Lt(this.rank),s=eN("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=s[c];let a=`vec2(${i.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function _u(r,e,t){let n=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cy(r.shape,e):new vy(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function rL(r,e,t,n){let o=e,s=r.shape.length,i=b.parseAxisParam(o,r.shape),a=i,u=I.getAxesPermutation(a,s),l=u!=null,c=r;l&&(c=_u(r,u,n),a=I.getInnerMostAxes(a.length,s)),I.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=I.computeOutAndReduceShapes(c.shape,a),f=p;t&&(f=I.expandShapeToKeepDim(p,i));let d=b.sizeFromShape(m),g=b.sizeFromShape(r.shape)/d,x=ot({inputs:{x:c},attrs:{shape:[g,d]},backend:n}),y=Uu(r.dtype),w=Kn(x,y,"sum",n),v=ot({inputs:{x:w},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),l&&n.disposeIntermediateTensorInfo(c),v}function Pc(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n;return rL(o,s,i,t)}var nL={kernelName:Xs,backendName:"webgl",kernelFunc:Pc};function Oe(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,i=t,a=o.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=o.shape[s[c]];let l;if(i.shouldExecuteOnCPU([o])){let p=i.texData.get(o.dataId).values,m=Oc(p,o.shape,o.dtype,s,u);l=i.makeTensorInfo(u,o.dtype);let f=i.texData.get(l.dataId);f.values=m}else l=_u(o,s,i);return l}var oL={kernelName:no,backendName:"webgl",kernelFunc:Oe};var lN=1e3;function Mc({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,c=e.shape.length,p=t?r.shape[l-2]:r.shape[l-1],m=n?e.shape[c-1]:e.shape[c-2],f=t?r.shape[l-1]:r.shape[l-2],d=n?e.shape[c-2]:e.shape[c-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),x=b.sizeFromShape(h),y=b.sizeFromShape(g),v=Vr.assertAndGetBroadcastShape(r.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let N=t?[x,p,f]:[x,f,p],_=n?[y,d,m]:[y,m,d],A=ot({inputs:{x:r},backend:o,attrs:{shape:N}}),D=ot({inputs:{x:e},backend:o,attrs:{shape:_}}),F=[A,D],O=Math.max(x,y),V=t?A.shape[1]:A.shape[2],G=s!=null,W=i!=null,H=u==="leakyrelu",q=u!=null?yl(u,!0):null,j=G||W||H||q!=null,X;if((f===1||d===1)&&V>lN&&j===!1){let tt=A,st=D;t&&(tt=Oe({inputs:{x:A},backend:o,attrs:{perm:[0,2,1]}}),F.push(tt)),n&&(st=Oe({inputs:{x:D},backend:o,attrs:{perm:[0,2,1]}}),F.push(st));let it=d!==1,ut=d===1,rt=tt;it&&(rt=ot({inputs:{x:tt},backend:o,attrs:{shape:[O,V,1]}}),F.push(rt));let lt=d===1?2:1,ft=st;ut&&(ft=ot({inputs:{x:st},backend:o,attrs:{shape:[O,1,V]}}),F.push(ft));let ht=cd({inputs:{a:rt,b:ft},backend:o});X=Pc({inputs:{x:ht},backend:o,attrs:{axis:lt,keepDims:!0}}),F.push(ht)}else{let tt=ir(r.dtype,e.dtype),st=new Mm(N,_,[O,f,d],t,n,G,q,W,H),it=[A,D];if(s!=null&&it.push(s),W&&it.push(i),H){let ut=o.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));it.push(ut),F.push(ut)}X=o.runWebGLProgram(st,it,tt)}let Z=ot({inputs:{x:X},backend:o,attrs:{shape:v}});F.push(X);for(let tt of F)o.disposeIntermediateTensorInfo(tt);return Z}function get(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n;return Mc({a:o,b:s,transposeA:u,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var sL={kernelName:Vi,backendName:"webgl",kernelFunc:get};var iL="return abs(x);";function xet(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),i=dy(s.values);return t.makeTensorInfo(n.shape,n.dtype,i)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new kn(n.shape,iL):o=new Pr(n.shape,iL),t.runWebGLProgram(o,[n],n.dtype)}var aL={kernelName:Ci,backendName:"webgl",kernelFunc:xet};var yet=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,bet=Ct({opSnippet:yet}),lL={kernelName:zo,backendName:"webgl",kernelFunc:bet};var wet=gr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,vet=Ct({opSnippet:wet}),uL={kernelName:Bo,backendName:"webgl",kernelFunc:vet};var cL="return a + b;",Cet=ue({opSnippet:cL,packedOpSnippet:cL,supportsComplex:!0,cpuKernelImpl:VP}),pL={kernelName:eo,backendName:"webgl",kernelFunc:Cet};var Iy=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var Sy=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Ny(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return rr({inputs:{x:n[0]},backend:t});if(n.length>z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=Ny({inputs:n.slice(0,u),backend:t}),c=Ny({inputs:n.slice(u),backend:t});return Ny({inputs:[l,c],backend:t})}let o=n.map(u=>u.dtype).reduce((u,l)=>ir(u,l)),s=n.map(u=>u.shape),a=z().getBool("WEBGL_PACK")?new Sy(n[0].shape,s):new Iy(n[0].shape,s);return t.runWebGLProgram(a,n,o)}var mL={kernelName:Vo,backendName:"webgl",kernelFunc:Ny};function Iet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,c=I.getAxesPermutation(l,a),p=o;c!=null&&(p=Oe({inputs:{x:o},backend:t,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("all",l,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,l),d=b.sizeFromShape(f),h=ot({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Kn(h,h.dtype,"all",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=ot({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=ot({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var fL={kernelName:ga,backendName:"webgl",kernelFunc:Iet};function Net(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,c=I.getAxesPermutation(l,a),p=o;c!=null&&(p=Oe({inputs:{x:o},backend:t,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,a)),I.assertAxesAreInnerMostDims("any",l,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,l),d=b.sizeFromShape(f),h=ot({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Kn(h,h.dtype,"any",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=ot({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=ot({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var dL={kernelName:xa,backendName:"webgl",kernelFunc:Net};var ky=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=t==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Ty=class{constructor(e,t,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,b.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,u=a.length,l=Lt(u),c=er("coords",u),p,m;if(i===1){m=u+1;let D=Lt(m);p=`
        ${D} sourceLocR = ${D}(${c.join()}, 0);
        ++${c[u-1]};
        ${D} sourceLocG = ${D}(${c.join()}, 0);
        ++${c[u-2]};
        ${D} sourceLocA = ${D}(${c.join()}, 0);
        --${c[u-1]};
        ${D} sourceLocB = ${D}(${c.join()}, 0);
        --${c[u-2]};`}else m=u,p=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(D=>"int "+D),g=er("sourceLocR",m-1).concat("inIdx.r"),x=er("sourceLocG",m-1).concat("inIdx.g"),y=er("sourceLocB",m-1).concat("inIdx.b"),w=er("sourceLocA",m-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",N=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,_=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,A=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${N}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function hL(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=I.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},u=new ky(a,t,n==null),l=[e];n!=null&&l.push(n);let c=r.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;let p=hL(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function gL(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],i=I.computeOptimalWindowSize(s),a=new Ty(o,i,t,n==null),u=n==null?[e]:[e,n],l=r.runWebGLProgram(a,u,"int32");if(l.shape.length===e.shape.length){let c=gL(r,e,t,l);return r.disposeIntermediateTensorInfo(l),c}return l}function _y(r,e,t,n){let o=[t];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],i=r.texData.get(e.dataId),a=i!==null&&i.isPacked,u=e;a&&(u=r.unpackTensor(e),s.push(u));let[l,c]=I.computeOutAndReduceShapes(u.shape,o),p=b.sizeFromShape(c),m=ot({inputs:{x:u},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=hL(r,m,n);s.push(f);let d=ot({inputs:{x:f},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),d}return gL(r,e,n)}function ket(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Oe({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=_y(t,u,i[0],"max");return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var xL={kernelName:Ii,backendName:"webgl",kernelFunc:ket};function Tet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=I.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Oe({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=_y(t,u,i[0],"min");return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var yL={kernelName:Si,backendName:"webgl",kernelFunc:Tet};var _et=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Eet=Ct({opSnippet:_et}),bL={kernelName:Go,backendName:"webgl",kernelFunc:Eet};var Aet=gr+"return log(x + sqrt(x * x + 1.0));",Det=Ct({opSnippet:Aet}),wL={kernelName:Wo,backendName:"webgl",kernelFunc:Det};var Ret=gr+`
  return atan(x);
`,$et=Ct({opSnippet:Ret}),vL={kernelName:Uo,backendName:"webgl",kernelFunc:$et};var Fet=Pm+`
  return atan(a, b);
`,Oet=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+qn+`
  return result;
`,Pet=ue({opSnippet:Fet,packedOpSnippet:Oet}),CL={kernelName:qo,backendName:"webgl",kernelFunc:Pet};var Met=gr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Let=Ct({opSnippet:Met}),IL={kernelName:Ho,backendName:"webgl",kernelFunc:Let};var yi=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(h||(y="-1.0 / 1e-20"),n){let D=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${D} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");let N=Math.floor(i/4)*4,_=i%4,A=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${N}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${N};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${v});
      }
    `}},Eu=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",v="0.0";if(w||(v="-1.0 / 1e-20"),n){let O=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${O} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let N="max",_=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / max(count, 1.0)");let A=Math.floor(i/4)*4,D=i%4,F=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${N}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${A};
            if (${D===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${D===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${D===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${F}
            }
          }
        }
        setOutput(${_});
      }
    `}};function zet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;aa(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(o.shape,s,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return rr({inputs:{x:o},backend:t});let p=new yi(c,"avg",!1);return t.runWebGLProgram(p,[o],"float32")}var SL={kernelName:Ko,backendName:"webgl",kernelFunc:zet};function Bet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,c=[1,1,1],p=I.computePool3DInfo(o.shape,s,i,c,a,u,l),m=new Eu(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var NL={kernelName:Ni,backendName:"webgl",kernelFunc:Bet};var Ey=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=u-1-e.padInfo.top,p=l-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ay=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=p-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,x=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Vet(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=n,p=[1,1,1],m=I.computePool3DInfo(i.shape,a,u,p,l,c),f=new Ay(m);return t.runWebGLProgram(f,[o],i.dtype)}var kL={kernelName:_l,backendName:"webgl",kernelFunc:Vet};function Get(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s;aa([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,c=I.computePool2DInfo(i.shape,a,u,1,l),p=new Ey(c);return t.runWebGLProgram(p,[o],i.dtype)}var TL={kernelName:Tl,backendName:"webgl",kernelFunc:Get};function Wet(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;return Mc({a:o,b:s,transposeA:i,transposeB:a,backend:t})}var _L={kernelName:jo,backendName:"webgl",kernelFunc:Wet};var Dy=class{constructor(e,t,n,o,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="0.0";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Ry=class{constructor(e,t,n,o,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let a="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Uet=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);let l=[n,o,s],c=null;i!=null&&(c=i.shape,l.push(i));let p=null;a!=null&&(p=a.shape,l.push(a));let m=z().getBool("WEBGL_PACK_NORMALIZATION")?new Ry(n.shape,o.shape,s.shape,c,p,u):new Dy(n.shape,o.shape,s.shape,c,p,u);return e.runWebGLProgram(m,l,l[0].dtype)},EL={kernelName:ps,backendName:"webgl",kernelFunc:Uet};var $y=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Lt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Het(this.rank),o,s=e.map((i,a)=>`sourceLoc.${uN[a]} = start[${a}] + coords.${uN[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},uN=["x","y","z","w","u","v"];function Het(r){if(r===1)return"sourceLoc";if(r<=6)return uN.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Fy=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Lt(this.rank),n=er("coords",this.rank),o=er("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}};function qet(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=r.dtype;let a=Ve.computeFlatOffset(e,b.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function bi(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:i}=n,[a,u]=Ve.parseSliceParams(o,s,i);if(Ve.assertParamsValid(o,a,u),b.sizeFromShape(u)===0)return t.makeTensorInfo(u,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=t.texData.get(o.dataId),m=bM(p.values,a,u,o.shape,o.dtype);return t.makeTensorInfo(u,o.dtype,m)}let{isPacked:l}=t.texData.get(o.dataId),c=Ve.isSliceContinous(o.shape,a,u);if(l||!c){let p=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fy(u):new $y(u),m=[a];return t.runWebGLProgram(p,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),qet(o,a,u,t)}var AL={kernelName:Pi,backendName:"webgl",kernelFunc:bi};var Ket=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,w)=>y*w),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),c=I.getReshapedPermuted(o.shape,s,a),p=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(c,i,s.length),f=[],d=ot({inputs:{x:o},backend:t,attrs:{shape:u}}),h=Oe({inputs:{x:d},backend:t,attrs:{perm:l}}),g=ot({inputs:{x:h},backend:t,attrs:{shape:c}}),x=bi({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},DL={kernelName:ki,backendName:"webgl",kernelFunc:Ket};function jet(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i}=n,a=t.readSync(o.dataId),u=t.readSync(s.dataId),l=fy(a,u,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,l)}var RL={kernelName:ya,backendName:"webgl",kernelFunc:jet};var Xet=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Yet=`
  return float(int(a.r) & int(b.r));
`;function Zet(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=z().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([n,o])||i===1){let u=t.texData.get(n.dataId).values,l=t.texData.get(o.dataId).values,[c,p]=WP(n.shape,o.shape,u,l,n.dtype),m=t.makeTensorInfo(p,n.dtype),f=t.texData.get(m.dataId);return f.values=c,m}let a;return s?a=new Hn(Xet,n.shape,o.shape,!1):a=new Tn(Yet,n.shape,o.shape),t.runWebGLProgram(a,[n,o],n.dtype)}var $L={kernelName:ba,backendName:"webgl",kernelFunc:Zet};function Jet(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.readSync(n.dataId),i=t.readSync(o.dataId),a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var FL={kernelName:El,backendName:"webgl",kernelFunc:Jet};var Qet="return float(a != b);",cN=ue({opSnippet:Qet,cpuKernelImpl:cM,dtype:"bool"}),OL={kernelName:La,backendName:"webgl",kernelFunc:cN};function bl(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return rr({inputs:{x:o.complexTensorInfos.real},backend:t})}var PL={kernelName:fp,backendName:"webgl",kernelFunc:bl};var trt="return float(int(x));";function ML(r,e){let t=new Pr(r.shape,trt),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function pN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return rr({inputs:{x:o},backend:t});let i=ke(o.shape),a=pN({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),u=_n({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=bl({inputs:{input:o},backend:t}),a=pN({inputs:{x:i},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=rr({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(t.shouldExecuteOnCPU([o])){let i=t.texData.get(o.dataId).values,[a,u,l]=UP(i,o.shape,o.dtype,s);return t.makeTensorInfo(a,u,l)}if(s==="int32")return ML(o,t);if(s==="bool"){let i=t.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),u=cN({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var LL={kernelName:po,backendName:"webgl",kernelFunc:pN};var zL="return ceil(x);",ert=Ct({opSnippet:zL,packedOpSnippet:zL,cpuKernelImpl:HP}),BL={kernelName:Xo,backendName:"webgl",kernelFunc:ert};var Oy=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Py=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function rrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a;z().getBool("WEBGL_PACK_CLIP")?a=new Py(o.shape):a=new Oy(o.shape);let u=[[s],[i]];return t.runWebGLProgram(a,[o],o.dtype,u)}var VL={kernelName:mo,backendName:"webgl",kernelFunc:rrt};var My=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function GL(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function nrt(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new My(n.shape),i=[GL(n,o.complexTensorInfos.real),GL(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,i,i[0].dtype)}var WL={kernelName:Al,backendName:"webgl",kernelFunc:nrt};var Ly=class{constructor(e){this.outputShape=[],this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((i,a)=>`T${a}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let a=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var By=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=Lt(o),i=er("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let u=new Array(e.length-1);u[0]=e[0][t];for(let h=1;h<u.length;h++)u[h]=u[h-1]+e[h][t];let l=a[t],c=a.slice(-2),p=a.join(),m=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];m+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${zy(a,l,g)}),
            vec2(${zy(c,l,g)}));
        }`}let f=u.length,d=u[u.length-1];m+=`
        return getChannel(
          getT${f}(${zy(a,l,d)}),
          vec2(${zy(c,l,d)}));`,this.userCode=`
      float getValue(${a.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function zy(r,e,t){let n=r.indexOf(e);return r.map((s,i)=>i===n?`${s} - ${t}`:s).join()}function Lc(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return rr({inputs:{x:o.complexTensorInfos.imag},backend:t})}var UL={kernelName:up,backendName:"webgl",kernelFunc:Lc};function Lm(r,e,t){let n=r[0].dtype;if(n==="complex64"){let f=r.map(y=>bl({inputs:{input:y},backend:t})),d=r.map(y=>Lc({inputs:{input:y},backend:t})),h=Lm(f,e,t),g=Lm(d,e,t),x=_n({inputs:{real:h,imag:g},backend:t});return f.forEach(y=>t.disposeIntermediateTensorInfo(y)),d.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),x}let o=t.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(v=>{let _=[-1,b.sizeFromShape(v.shape.slice(e))];return ot({inputs:{x:v},backend:t,attrs:{shape:_}})}),d=f.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),h=I.computeOutShape(f.map(v=>v.shape),1),g=f[0].shape[0]===1,x=qP(d,h,n,g),y=I.computeOutShape(r.map(v=>v.shape),e),w=t.makeTensorInfo(y,n,x);return f.forEach(v=>t.disposeIntermediateTensorInfo(v)),w}let s=r.filter(f=>b.sizeFromShape(f.shape)>0),i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new Pr(r[0].shape,la):new kn(r[0].shape,la);return t.runWebGLProgram(f,r,n)}let a=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let h=0;h<s.length;h+=a){let g=s.slice(h,h+a);f.push(Lm(g,e,t))}let d=Lm(f,e,t);for(let h of f)t.disposeIntermediateTensorInfo(h);return d}if(i){let f=new By(s.map(d=>d.shape),e);return t.runWebGLProgram(f,s,n)}let{tensors2D:u,outShape:l}=ort(s,e,t),c=new Ly(u.map(f=>f.shape)),p=t.runWebGLProgram(c,u,n);u.forEach(f=>t.disposeIntermediateTensorInfo(f));let m=ot({inputs:{x:p},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(p),m}function ort(r,e,t){let n=I.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>ot({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function mN(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,e[0].shape)[0],i=e.map(l=>l.shape);I.assertParamsConsistent(i,s);let a=I.computeOutShape(e.map(l=>l.shape),s);if(b.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let u=e.filter(l=>b.sizeFromShape(l.shape)>0);return u.length===1?rr({inputs:{x:u[0]},backend:t}):Lm(u,s,t)}var HL={kernelName:Ti,backendName:"webgl",kernelFunc:mN};var zm=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,w=g?3:1,v="",N="";n&&(o?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,N="result = activation(result);");let _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${N}
        setOutput(result);
      }
    `}},Vy=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Bm=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=he(this.outputShape.length);let i=e.padInfo.left,a=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)m+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;m+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)m+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(p+1)/2;g++){let x=g*2;if(m+=`
           xC = xCCorner + ${x*u};
           `,a===1){if(x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){let y=i%2===0?b.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",d="";n&&(o?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,d="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${d}
         setOutput(result);
       }
     `}};var Gy=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=he(this.outputShape.length);let{dataFormat:n}=t,o=He(),s=n==="channelsLast",i=s?1:2,a=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)l+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function Wy(r,e){let t=r.length;return t>=3?e?[...r.slice(0,-3),r[t-3]*r[t-2],r[t-1]]:[...r.slice(0,-3),r[t-3],r[t-2]*r[t-1]]:!e&&t===1&&r[0]>1?[r[0],1]:null}function Uy({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=n.texData.get(r.dataId),c=t.inChannels,p=u[0]*u[1]*u[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,x=[];if(s!=null){let v=Wy(s.shape,f);v!=null&&(s=ot({inputs:{x:s},backend:n,attrs:{shape:v}}),x.push(s))}if(o!=null){let v=Wy(o.shape,f);v!=null&&(o=ot({inputs:{x:o},backend:n,attrs:{shape:v}}),x.push(o))}if(!((p===1||m===1)&&c>lN)&&l.isPacked&&f&&l.texture!=null&&u[2]%2!==0&&b.arraysEqual(l.shape.slice(-3),u.slice(-3))){let v=u[0]*u[1]*(u[2]+1),N={dataId:r.dataId,shape:[1,v,t.inChannels],dtype:r.dtype},_=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,b.assert(Rc(l.shape,N.shape),()=>`packed reshape ${l.shape} to ${N.shape} isn't free`);let A=ot({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(A);let D=Mc({a:N,b:A,backend:n,transposeA:d,transposeB:h,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),F=n.texData.get(D.dataId);b.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=_,F.shape=t.outShape,g=rr({inputs:{x:D},backend:n}),g.shape=t.outShape,x.push(D)}else{let v=t.outHeight*t.outWidth,N=ot({inputs:{x:r},backend:n,attrs:{shape:f?[t.batchSize,v,t.inChannels]:[t.batchSize,t.inChannels,v]}}),_=ot({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=Mc({a:f?N:_,b:f?_:N,transposeA:!f,transposeB:h,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=ot({inputs:{x:A},backend:n,attrs:{shape:t.outShape}}),x.push(N),x.push(_),x.push(A)}for(let v of x)n.disposeIntermediateTensorInfo(v);return g}function Hy({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=u*l*c,g=m*p,x=[t.batchSize,h,g],y=!0,w=!1,v=[];if(s!=null){let Z=Wy(s.shape,d);Z!=null&&(s=ot({inputs:{x:s},backend:n,attrs:{shape:Z}}),v.push(s))}if(o!=null){let Z=Wy(o.shape,d);Z!=null&&(o=ot({inputs:{x:o},backend:n,attrs:{shape:Z}}),v.push(o))}let N=ot({inputs:{x:e},backend:n,attrs:{shape:[1,h,b.sizeFromShape(e.shape)/h]}});v.push(N);let _=new Gy(x,t),A=[r.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],D=n.runWebGLProgram(_,[r],"float32",A),F=ot({inputs:{x:D},backend:n,attrs:{shape:x}});v.push(D),v.push(F);let O=o!=null,V=s!=null,G=a==="leakyrelu",W=a?yl(a,!0):null,H=new Mm(d?F.shape:N.shape,d?N.shape:F.shape,d?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],y,w,O,W,V,G),q=d?[F,N]:[N,F];if(o&&q.push(o),V&&q.push(s),G){let Z=n.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));q.push(Z),v.push(Z)}let j=n.runWebGLProgram(H,q,"float32"),X=ot({inputs:{x:j},backend:n,attrs:{shape:t.outShape}});v.push(j);for(let Z of v)n.disposeIntermediateTensorInfo(Z);return X}function srt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=n,p=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,s.shape,i,l,a,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Uy({x:o,filter:s,convInfo:m,backend:t});else if(m.strideWidth<=2&&p==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let h=new Bm(m),g=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=t.runWebGLProgram(h,[o,s],"float32",g)}else if(z().getBool("WEBGL_CONV_IM2COL"))f=Hy({x:o,filter:s,convInfo:m,backend:t});else{let h=new zm(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=ot({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var qL={kernelName:Yo,backendName:"webgl",kernelFunc:srt};var qy=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ky=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=n-1-e.padInfo.left,l=i?1:2,c=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},jy=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xy=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function irt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=n,p=I.convertConv2DDataFormat(u),m=I.computeConv2DInfo(o.shape,c,i,1,a,l,!1,p),f=new qy(m);return t.runWebGLProgram(f,[o,s],"float32")}var KL={kernelName:np,backendName:"webgl",kernelFunc:irt};var Yy=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=he(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function art(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=n,p=I.convertConv2DDataFormat(l),m=I.computeConv2DInfo(i,s.shape,a,1,u,c,!1,p);if(z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let f=[[m.strideHeight,m.strideWidth]],d=new Yy(m);return t.runWebGLProgram(d,[o,s],"float32",f)}else{let f=new Ky(m);return t.runWebGLProgram(f,[o,s],"float32")}}var jL={kernelName:Zo,backendName:"webgl",kernelFunc:art};function lrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),c=new Vy(l);return t.runWebGLProgram(c,[o,s],"float32")}var XL={kernelName:Jo,backendName:"webgl",kernelFunc:lrt};function urt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n,l=I.computeConv3DInfo(o.shape,u,i,1,a),c=new jy(l);return t.runWebGLProgram(c,[o,s],"float32")}var YL={kernelName:wa,backendName:"webgl",kernelFunc:urt};function crt(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n,l=I.computeConv3DInfo(u,s.shape,a,1,i),c=new Xy(l);return t.runWebGLProgram(c,[o,s],"float32")}var ZL={kernelName:va,backendName:"webgl",kernelFunc:crt};var prt=Oo+`
  return cos(x);
`,mrt=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${qn}
  return result;
`,frt=Ct({opSnippet:prt,packedOpSnippet:mrt}),JL={kernelName:Qo,backendName:"webgl",kernelFunc:frt};var drt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,hrt=Ct({opSnippet:drt}),QL={kernelName:ts,backendName:"webgl",kernelFunc:hrt};var Zy=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,u,l]=e,[c]=t,[p,m]=n;this.outputShape=[c,p,m,l];let f=o==="bilinear"?1:0,[d,h]=[`${a-1}.0`,`${u-1}.0`],[g,x,y]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,v,N]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${v};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${N};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var grt=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=n,c=new Zy(o.shape,s.shape,a,u,l);return t.runWebGLProgram(c,[o,s,i],"float32")},tz={kernelName:Ia,backendName:"webgl",kernelFunc:grt};var Vm=function(r){return r.Prod="*",r.Sum="+",r}(Vm||{}),md=class{constructor(e,t,n,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Vm.Prod?"1.0":"0.0",a=n?i:`getX(${ez(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",c="";n?(l=o?`end != ${u-1}`:"end != 0",c=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",c=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Lt(s)} coords = getOutputCoords();
        int end = ${rz(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${rz(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${ez(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function ez(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function rz(r,e,t){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${r} is not yet supported`)}function Jy(r,e,t,n,o,s){let i=e.shape.length,a=I.getAxesPermutation([n],i),u=e;a!=null&&(u=Oe({inputs:{x:e},backend:t,attrs:{perm:a}}));let l=I.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);let c=u.shape[l],p=rr({inputs:{x:u},backend:t});for(let m=0;m<=Math.ceil(Math.log2(c))-1;m++){let f=new md(r,u.shape,!1,s),d=[[m]],h=p;p=t.runWebGLProgram(f,[p],p.dtype,d),t.disposeIntermediateTensorInfo(h)}if(o){let m=new md(r,u.shape,o,s),f=p;p=t.runWebGLProgram(m,[p],p.dtype),t.disposeIntermediateTensorInfo(f)}if(a!=null){let m=I.getUndoAxesPermutation(a),f=Oe({inputs:{x:p},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(u),f}return p}function xrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;return Jy(Vm.Prod,o,t,s,i,a)}var nz={kernelName:Ca,backendName:"webgl",kernelFunc:xrt};function yrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n;return Jy(Vm.Sum,o,t,s,i,a)}var oz={kernelName:es,backendName:"webgl",kernelFunc:yrt};function brt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=t.readSync(o.dataId),l=t.readSync(s.dataId),c=fy(u,l,s.dtype,s.shape,i);return t.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let u=t.bufferSync(o),l=t.bufferSync(s),c=GP(u,l,i,a);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var sz={kernelName:Dl,backendName:"webgl",kernelFunc:brt};var Qy=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function wrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],c=i==="NHWC"?o.shape[3]:o.shape[1],p=u*s,m=l*s,f=c/(s*s),d=i==="NHWC"?[a,p,m,f]:[a,f,p,m],h=new Qy(d,s,i);return t.runWebGLProgram(h,[o],o.dtype)}var iz={kernelName:Sa,backendName:"webgl",kernelFunc:wrt};var Gm=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=he(this.outputShape.length);let i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels,l="",c="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var Wm=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=he(this.outputShape.length);let i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let y=x*2;if(f+=`
          xC = xCCorner + ${y*l};
          `,u===1){if(y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<p)){let w=a%2===0?b.nearestLargerEven(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<p&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<p&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<p&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",h="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function vrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,c=u;c==null&&(c=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=I.computeConv2DInfo(o.shape,s.shape,i,c,a,l,!0),m;z().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new Wm(p):m=new Gm(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return t.runWebGLProgram(m,[o,s],"float32",f)}var az={kernelName:rs,backendName:"webgl",kernelFunc:vrt};var tb=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},eb=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Crt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=n,p=I.computeConv2DInfo(o.shape,c,i,a,u,l,!0),m=new tb(p);return t.runWebGLProgram(m,[o,s],"float32")}var lz={kernelName:op,backendName:"webgl",kernelFunc:Crt};function Irt(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=n,p=I.computeConv2DInfo(c,s.shape,i,a,u,l,!0),m=new eb(p);return t.runWebGLProgram(m,[o,s],"float32")}var uz={kernelName:sp,backendName:"webgl",kernelFunc:Irt};var rb=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Srt(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),i=ot({inputs:{x:n},backend:t,attrs:{shape:[s]}}),a=new rb(s),u=t.runWebGLProgram(a,[i],i.dtype),l=ot({inputs:{x:u},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),l}var cz={kernelName:Rl,backendName:"webgl",kernelFunc:Srt};var nb=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=e,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Nrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),c,p=new nb(l);c=t.runWebGLProgram(p,[o,s],"float32");let m=ot({inputs:{x:c},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(c),m}var pz={kernelName:ns,backendName:"webgl",kernelFunc:Nrt};function krt(r){let{inputs:e,backend:t,attrs:n}=r,{equation:o}=n,s=e,{allDims:i,summedDims:a,idDims:u}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:c}=I.getEinsumComputePath(a,u),p=c.length,m=null,f=i.length,d=[];for(let h=0;h<p;++h){for(let g of c[h]){let{permutationIndices:x,expandDims:y}=I.getEinsumPermutation(f,u[g]),w;I.isIdentityPermutation(x)?w=s[g]:(w=Oe({inputs:{x:s[g]},backend:t,attrs:{perm:x}}),d.push(w));let v=w.shape.slice();for(let N=0;N<y.length;++N)v.splice(y[N],0,1);b.arraysEqual(w.shape,v)||(w=ot({inputs:{x:w},backend:t,attrs:{shape:v}}),d.push(w)),m===null?m=w:(m=cd({inputs:{a:w,b:m},backend:t}),d.push(m))}h<p-1&&(l[h]>=0&&(m=Pc({inputs:{x:m},backend:t,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&t.disposeIntermediateTensorInfo(h);return m}var mz={kernelName:ip,backendName:"webgl",kernelFunc:krt};var Trt="return (x >= 0.0) ? x : (exp(x) - 1.0);",_rt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ert=Ct({opSnippet:Trt,packedOpSnippet:_rt}),fz={kernelName:ss,backendName:"webgl",kernelFunc:Ert};var Art="return (b >= 0.0) ? a : a * (b + 1.0);",Drt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Rrt=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hn(Drt,n.shape,o.shape):new Tn(Art,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},dz={kernelName:Na,backendName:"webgl",kernelFunc:Rrt};var $rt=`
  return vec4(equal(a, b));
`,Frt="return float(a == b);",Ort=ue({opSnippet:Frt,packedOpSnippet:$rt,dtype:"bool",cpuKernelImpl:KP}),hz={kernelName:ka,backendName:"webgl",kernelFunc:Ort};var Prt=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Mrt=Ct({opSnippet:Prt}),gz={kernelName:is,backendName:"webgl",kernelFunc:Mrt};var Lrt=Oo+`
  return exp(x);
`,zrt=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fN=Ct({opSnippet:Lrt,packedOpSnippet:zrt,cpuKernelImpl:jP,dtype:"float32"}),xz={kernelName:as,backendName:"webgl",kernelFunc:fN};function ob(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),ot({inputs:{x:s},backend:n,attrs:{shape:a}})}var yz={kernelName:_i,backendName:"webgl",kernelFunc:ob};var bz="return exp(x) - 1.0;",Brt=Ct({opSnippet:bz,packedOpSnippet:bz,cpuKernelImpl:XP}),wz={kernelName:ls,backendName:"webgl",kernelFunc:Brt};var fd=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function sb(r,e,t){let n=t.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=ot({inputs:{x:r},backend:t,attrs:{shape:[i,s]}}),u=a.shape,l=new fd("real",u,e),c=new fd("imag",u,e),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],m=t.runWebGLProgram(l,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=_n({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=ot({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(d),h}function Vrt(r){let{inputs:e,backend:t}=r,{input:n}=e;return sb(n,!1,t)}var vz={kernelName:ap,backendName:"webgl",kernelFunc:Vrt};var ib=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function wl(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),e.makeTensorInfo(n,s,i)}else{let i=new ib(n,o),a=[[o]];return e.runWebGLProgram(i,[],s,a)}}var Cz={kernelName:Ol,backendName:"webgl",kernelFunc:wl};var ab=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var Iz={kernelName:Ta,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new ab(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var Sz="return floor(x);",Grt=Ct({opSnippet:Sz,packedOpSnippet:Sz,cpuKernelImpl:YP}),Nz={kernelName:us,backendName:"webgl",kernelFunc:Grt};var Wrt=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Urt=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Hrt=ue({opSnippet:Wrt,packedOpSnippet:Urt,dtype:"int32"}),kz={kernelName:cs,backendName:"webgl",kernelFunc:Hrt};var lb=class{constructor(e){this.variableNames=["A"];let t=He(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var ub=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=He(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var Tz={kernelName:lf,backendName:"webgl",kernelFunc:qrt},Um,dN=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function qrt(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[u,l]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[l,u],p=[l,u,s];if(a||i){let h=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Um==null||h!==dN)&&(dN=h,Um=document.createElement("canvas").getContext("2d",{willReadFrequently:dN})),Um.canvas.width=u,Um.canvas.height=l,Um.drawImage(o,0,0,u,l),o=Um.canvas}let m=t.makeTensorInfo(c,"int32");t.texData.get(m.dataId).usage=rn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),o);let f=z().getBool("WEBGL_PACK")?new ub(p):new lb(p),d=t.runWebGLProgram(f,[m],"int32");return t.disposeData(m.dataId),d}function Krt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=I.convertConv2DDataFormat(c),g=I.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!1,h),x,y=[],w=i!=null,v=a!=null,N=f==="leakyrelu",_=()=>{let D=[o,s],F=(O,V)=>{if(V==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){let G=ot({inputs:{x:O},backend:t,attrs:{shape:[O.shape[0],1,1]}});return y.push(G),G}return O};if(w&&D.push(F(i,c)),v&&D.push(F(a,c)),N){let O=t.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));D.push(O),y.push(O)}return D};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Uy({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else if(g.strideWidth<=2&&h==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let D=f?yl(f,!0):null,F=new Bm(g,w,D,v,N),O=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],V=_();x=t.runWebGLProgram(F,V,"float32",O)}else if(z().getBool("WEBGL_CONV_IM2COL"))x=Hy({x:o,filter:s,convInfo:g,backend:t,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else{let D=f?yl(f,!1):null,F=new zm(g,w,D,v,N),O=_();x=t.runWebGLProgram(F,O,"float32")}let A=ot({inputs:{x},backend:t,attrs:{shape:g.outShape}});return y.push(x),y.forEach(D=>t.disposeIntermediateTensorInfo(D)),A}var _z={kernelName:Gi,backendName:"webgl",kernelFunc:Krt};function jrt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],h=c;h==null&&(h=[1,1]),b.assert(I.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,u,h,l,p,!0),x=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=m?yl(m,x):null,w=[o,s],v=i!=null,N=a!=null,_=m==="leakyrelu";if(v&&w.push(i),N&&w.push(a),_){let O=t.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));w.push(O),d.push(O)}let A;x?A=new Wm(g,v,y,N,_):A=new Gm(g,v,y,N,_);let D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=t.runWebGLProgram(A,w,"float32",D);return d.forEach(O=>t.disposeIntermediateTensorInfo(O)),F}var Ez={kernelName:Wi,backendName:"webgl",kernelFunc:jrt};var cb=class{constructor(e,t,n,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=n;let s=Lt(n.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Xrt(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[u,l,c,p]=I.prepareAndValidate(n,o),m=ot({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),f=ot({inputs:{x:n},backend:t,attrs:{shape:[b.sizeFromShape(n.shape)/c,c]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=t.readSync(o.dataId),y=t.bufferSync(n),w=ZP(x,y,n.dtype,l,i,c,p,n.shape,a);return t.makeTensorInfo(u,n.dtype,w.values)}let d=new cb(i,p,[l,c],n.shape),h=t.runWebGLProgram(d,[f,m],f.dtype),g=ot({inputs:{x:h},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(h),g}var Az={kernelName:_a,backendName:"webgl",kernelFunc:Xrt};var pb=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Lt(this.rank),o=Yrt(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function Yrt(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}function hN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0];if(z().get("DEBUG")){let y=t.readSync(s.dataId),w=o.shape[u];for(let v=0;v<y.length;++v){let N=y[v];b.assert(N<=w-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${w-1}]`)}}let l=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),c=b.sizeFromShape(s.shape),p=[],m=ot({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ot({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(m),p.push(f);let d=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let y=t.bufferSync(f),w=t.bufferSync(m),v=JP(w,y,d);return p.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.makeTensorInfo(l.outputShape,v.dtype,v.values)}let h=new pb(m.shape,d),g=t.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let x=ot({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}var Dz={kernelName:Ei,backendName:"webgl",kernelFunc:hN};var Zrt="return float(a > b);",Jrt=`
  return vec4(greaterThan(a, b));
`,Qrt=ue({opSnippet:Zrt,packedOpSnippet:Jrt,cpuKernelImpl:QP,dtype:"bool"}),Rz={kernelName:Ea,backendName:"webgl",kernelFunc:Qrt};var tnt="return float(a >= b);",ent=`
  return vec4(greaterThanEqual(a, b));
`,rnt=ue({opSnippet:tnt,packedOpSnippet:ent,dtype:"bool",cpuKernelImpl:tM}),$z={kernelName:ms,backendName:"webgl",kernelFunc:rnt};function nnt(r){let{inputs:e,backend:t}=r,{input:n}=e;return sb(n,!0,t)}var Fz={kernelName:lp,backendName:"webgl",kernelFunc:nnt};var ont="return float(!isnan(x) && !isinf(x));",snt=Ct({opSnippet:ont,dtype:"bool"}),Oz={kernelName:fs,backendName:"webgl",kernelFunc:snt};var int="return float(isinf(x));",ant=Ct({opSnippet:int,dtype:"bool"}),Pz={kernelName:ds,backendName:"webgl",kernelFunc:ant};var lnt="return float(isnan(x));",unt=Ct({opSnippet:lnt,dtype:"bool"}),Mz={kernelName:hs,backendName:"webgl",kernelFunc:unt};var cnt="return float(a < b);",pnt=`
  return vec4(lessThan(a, b));
`,mnt=ue({opSnippet:cnt,packedOpSnippet:pnt,cpuKernelImpl:eM,dtype:"bool"}),Lz={kernelName:Aa,backendName:"webgl",kernelFunc:mnt};var fnt="return float(a <= b);",dnt=`
  return vec4(lessThanEqual(a, b));
`,hnt=ue({opSnippet:fnt,packedOpSnippet:dnt,cpuKernelImpl:rM,dtype:"bool"}),zz={kernelName:Da,backendName:"webgl",kernelFunc:hnt};function gnt(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,i=nM(n,o,s);return e.makeTensorInfo([i.length],"float32",i)}var Bz={kernelName:Ra,backendName:"webgl",kernelFunc:gnt};var xnt=Oo+`
  return x < 0.0 ? 0./0. : log(x);
`,ynt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,bnt=Ct({opSnippet:xnt,packedOpSnippet:ynt,cpuKernelImpl:oM}),Vz={kernelName:xs,backendName:"webgl",kernelFunc:bnt};var wnt=Oo+`
  return log(1.0 + x);
`,vnt=Ct({opSnippet:wnt}),Gz={kernelName:ys,backendName:"webgl",kernelFunc:vnt};var Cnt="return float(a >= 1.0 && b >= 1.0);",Int=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Snt=ue({opSnippet:Cnt,packedOpSnippet:Int,dtype:"bool"}),Wz={kernelName:$a,backendName:"webgl",kernelFunc:Snt};var Nnt="return float(!(x >= 1.0));",knt=Ct({opSnippet:Nnt}),Uz={kernelName:Fa,backendName:"webgl",kernelFunc:knt};var Tnt="return float(a >= 1.0 || b >= 1.0);",_nt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Ent=ue({opSnippet:Tnt,packedOpSnippet:_nt,dtype:"bool"}),Hz={kernelName:Oa,backendName:"webgl",kernelFunc:Ent};var mb=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[];let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var fb=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=t,a=e[3]-1;this.outputShape=e;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var Ant=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n,l=z().getBool("WEBGL_PACK_NORMALIZATION")?new fb(o.shape,s,i,a,u):new mb(o.shape,s,i,a,u);return t.runWebGLProgram(l,[o],o.dtype)},qz={kernelName:bs,backendName:"webgl",kernelFunc:Ant};var db=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Dnt=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=n,p=new db(o.shape,a,u,l,c);return t.runWebGLProgram(p,[o,s,i],o.dtype)},Kz={kernelName:Pa,backendName:"webgl",kernelFunc:Dnt};function jz(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=ot({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Kn(a,r.dtype,"max",n),l=ot({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}function gN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,c=I.getAxesPermutation(l,a),p=c!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let w=t.texData.get(f.dataId).values,v=new Array(a);for(let A=0;A<v.length;A++)v[A]=o.shape[c[A]];let N=Oc(w,o.shape,o.dtype,c,v);f=t.makeTensorInfo(v,o.dtype);let _=t.texData.get(f.dataId);_.values=N}else f=_u(o,c,t);l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("max",l,a);let[d,h]=I.computeOutAndReduceShapes(f.shape,l),g=d;i&&(g=I.expandShapeToKeepDim(d,u));let x;if(m){let w=t.texData.get(f.dataId).values,v=sM(w,b.sizeFromShape(h),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);let N=t.texData.get(x.dataId);N.values=v}else x=jz(f,h,g,t);return p&&t.disposeIntermediateTensorInfo(f),x}var Xz={kernelName:ws,backendName:"webgl",kernelFunc:gN};var Rnt=Pm+`
  return max(a, b);
`,$nt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+qn+`
  return result;
`,Fnt=ue({opSnippet:Rnt,packedOpSnippet:$nt,cpuKernelImpl:iM}),Yz={kernelName:vs,backendName:"webgl",kernelFunc:Fnt};function Ont(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;aa(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(o.shape,s,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return rr({inputs:{x:o},backend:t});let p=new yi(c,"max",!1);return t.runWebGLProgram(p,[o],o.dtype)}var Zz={kernelName:Cs,backendName:"webgl",kernelFunc:Ont};function Pnt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=n,c=[1,1,1],p=I.computePool3DInfo(o.shape,s,i,c,a,l,u),m=new Eu(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var Jz={kernelName:Ai,backendName:"webgl",kernelFunc:Pnt};var hb=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,u=i-1-e.padInfo.left,l=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},gb=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=u-1-e.padInfo.front,m=l-1-e.padInfo.top,f=c-1-e.padInfo.left,d=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Mnt(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=n,p=[1,1,1],m=I.computePool3DInfo(i.shape,a,u,p,l,c),f=new Eu(m,"max",!0),d=t.runWebGLProgram(f,[i],i.dtype),h=new gb(m),g=t.runWebGLProgram(h,[o,d],i.dtype);return t.disposeIntermediateTensorInfo(d),g}var Qz={kernelName:Ml,backendName:"webgl",kernelFunc:Mnt};function Lnt(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:i}=e,a=s;aa([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=n,m=I.computePool2DInfo(a.shape,u,l,1,c,p),f=!0,d=new yi(m,"max",f),h=t.runWebGLProgram(d,[a],a.dtype),g=new hb(m),x=t.runWebGLProgram(g,[o,h],a.dtype);return t.disposeIntermediateTensorInfo(h),x}var t3={kernelName:Pl,backendName:"webgl",kernelFunc:Lnt};function e3(r,e,t,n){let o=new yi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new yi(t,"max",!0,!0,e);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var r3={kernelName:Ll,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=e,u=t;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let c=I.computePool2DInfo(n.shape,o,s,l,i),[p,m]=e3(n,a,c,u);return[p,m]}};function n3(r,e,t,n){let o=b.sizeFromShape(e),i=b.sizeFromShape(r.shape)/o,a=ot({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Kn(a,"float32","mean",n),l=ot({inputs:{x:u},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}var o3={kernelName:Is,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,i=t,a=n.shape.length,u=b.parseAxisParam(s,n.shape),l=u,c=I.getAxesPermutation(l,a),p=c!=null,m=i.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let v=i.texData.get(d.dataId).values,N=new Array(a);for(let D=0;D<N.length;D++)N[D]=n.shape[c[D]];let _=Oc(v,n.shape,n.dtype,c,N);d=i.makeTensorInfo(N,n.dtype);let A=i.texData.get(d.dataId);A.values=_}else d=_u(n,c,i);f.push(d),l=I.getInnerMostAxes(l.length,a)}I.assertAxesAreInnerMostDims("sum",l,a);let[h,g]=I.computeOutAndReduceShapes(d.shape,l),x=h;o&&(x=I.expandShapeToKeepDim(h,u));let y=n3(d,g,x,i);for(let w of f)i.disposeIntermediateTensorInfo(w);return y}};function znt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=b.parseAxisParam(s,o.shape),l=u,c=I.getAxesPermutation(l,a),p=o;c!=null&&(p=Oe({inputs:{x:o},backend:t,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",l,a);let[m,f]=I.computeOutAndReduceShapes(p.shape,l),d=b.sizeFromShape(f),h=ot({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Kn(h,h.dtype,"min",t),x;if(i){let y=I.expandShapeToKeepDim(m,u);x=ot({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=ot({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var s3={kernelName:Ss,backendName:"webgl",kernelFunc:znt};var Bnt=Pm+`
  return min(a, b);
`,Vnt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+qn+`
  return result;
`,Gnt=ue({opSnippet:Bnt,packedOpSnippet:Vnt,cpuKernelImpl:aM}),i3={kernelName:Ns,backendName:"webgl",kernelFunc:Gnt};var xb=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let o=e.length,s=Lt(o),i=t.map(c=>c[0]).join(","),a=t.map((c,p)=>c[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var yb=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=Lt(o),i=t.map(d=>d[0]).join(","),a=t.map((d,h)=>d[0]+e[h]).join(","),u=er("rc",o),l=er("source",o),c=`${u[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${l.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${u[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${u[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${l.join()}), ${p});
          ${u[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${l.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var Wnt=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yb(n.shape,o,s):new xb(n.shape,o,s);return e.runWebGLProgram(i,[n],n.dtype)},a3={kernelName:ks,backendName:"webgl",kernelFunc:Wnt};var Unt=`if (b == 0.0) return NAN;
  return mod(a, b);`,Hnt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+qn+`
  return result;
`,qnt=ue({opSnippet:Unt,packedOpSnippet:Hnt}),l3={kernelName:Ts,backendName:"webgl",kernelFunc:qnt};var bb=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};var Knt=`
if (a == b) {
  return 1.0;
};
return a / b;`,jnt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,xN=ue({opSnippet:Knt,packedOpSnippet:jnt,checkOutOfBounds:!0}),u3={kernelName:os,backendName:"webgl",kernelFunc:xN};var c3="return a - b;",yN=ue({opSnippet:c3,packedOpSnippet:c3,supportsComplex:!0,cpuKernelImpl:_M}),p3={kernelName:Js,backendName:"webgl",kernelFunc:yN};function bN(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=gN({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(a.shape,i),l=ot({inputs:{x:a},backend:t,attrs:{shape:u}}),c=yN({inputs:{a:o,b:l},backend:t}),p=fN({inputs:{x:c},backend:t}),m=Pc({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:!1}}),f=ot({inputs:{x:m},backend:t,attrs:{shape:u}}),d=xN({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var m3={kernelName:Ys,backendName:"webgl",kernelFunc:bN};function Xnt(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n,u=a?o:bN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new bb(l,c,s),m=[[i]],f=t.runWebGLProgram(p,[u],"int32",m);return a||t.disposeIntermediateTensorInfo(u),f}var f3={kernelName:Ma,backendName:"webgl",kernelFunc:Xnt};var Ynt=gr+`
  return -x;
`,Znt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Jnt(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[i,a]=uM(s.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,i)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new kn(n.shape,Znt):o=new Pr(n.shape,Ynt),t.runWebGLProgram(o,[n],n.dtype)}var d3={kernelName:Di,backendName:"webgl",kernelFunc:Jnt};var Qnt=Kr.nonMaxSuppressionV3Impl;function tot(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=Qnt(l,c,i,a,u);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var h3={kernelName:za,backendName:"webgl",kernelFunc:tot};var eot=Kr.nonMaxSuppressionV4Impl;function rot(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=eot(c,p,i,a,u,l);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var g3={kernelName:Ba,backendName:"webgl",kernelFunc:rot};var not=Kr.nonMaxSuppressionV5Impl;function oot(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=not(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var x3={kernelName:Va,backendName:"webgl",kernelFunc:oot};var wb=class{constructor(e,t,n,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var sot=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:i,onValue:a,offValue:u}=n,l=b.sizeFromShape(o.shape),c=new wb(l,i,a,u),p=ot({inputs:{x:o},backend:t,attrs:{shape:[l]}}),m=t.runWebGLProgram(c,[p],s);t.disposeIntermediateTensorInfo(p);let f=[...o.shape,i],d=ot({inputs:{x:m},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(m),d},y3={kernelName:Es,backendName:"webgl",kernelFunc:sot};function dd(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=bl({inputs:{input:n},backend:t}),s=dd({inputs:{x:o},backend:t}),i=Lc({inputs:{input:n},backend:t}),a=dd({inputs:{x:i},backend:t}),u=_n({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return wl({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var b3={kernelName:Bi,backendName:"webgl",kernelFunc:dd};function w3(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=bl({inputs:{input:n},backend:t}),s=w3({inputs:{x:o},backend:t}),i=Lc({inputs:{input:n},backend:t}),a=dd({inputs:{x:i},backend:t}),u=_n({inputs:{real:s,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return wl({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var v3={kernelName:Ri,backendName:"webgl",kernelFunc:w3};function iot(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return ob({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(c=>{let p=ob({inputs:{input:c},backend:t,attrs:{dim:o}});return a.push(p),p}),l=mN({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),l}var C3={kernelName:$i,backendName:"webgl",kernelFunc:iot};var vb=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let o=e.length,s=Lt(o),i=t.map(l=>l[0]).join(","),a=t.map((l,c)=>l[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var Cb=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=Lt(o),i=t.map(h=>h[0]).join(","),a=t.map((h,g)=>h[0]+e[g]).join(","),u=er("rc",o),l=er("source",o),c=`${u[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${l.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var wN=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:i}=n;if(b.sizeFromShape(o.shape)===0){let l=s.map((c,p)=>c[0]+o.shape[p]+c[1]);return wl({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cb(o.shape,s,i):new vb(o.shape,s,i),u=[[i]];return t.runWebGLProgram(a,[o],o.dtype,u)},I3={kernelName:As,backendName:"webgl",kernelFunc:wN};var aot=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,lot=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+qn+`
  return result;
`,uot=ue({opSnippet:aot,packedOpSnippet:lot}),S3={kernelName:Ds,backendName:"webgl",kernelFunc:uot};function cot(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:i}=n,a=o.shape.length,u=[],l=b.parseAxisParam(s,o.shape),c=l,p=I.getAxesPermutation(c,a),m=o;p!=null&&(m=Oe({inputs:{x:o},backend:t,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,a),u.push(m)),I.assertAxesAreInnerMostDims("prod",c,a);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:x}=pM(m.shape,m.dtype,d,c);f=t.makeTensorInfo(g,x,h)}else{let[d,h]=I.computeOutAndReduceShapes(m.shape,c),g=b.sizeFromShape(h),x=ot({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),y=Uu(o.dtype),w=Kn(x,y,"prod",t);f=ot({inputs:{x:w},backend:t,attrs:{shape:d}}),u.push(x),u.push(w)}if(i){u.push(f);let d=I.expandShapeToKeepDim(f.shape,l);f=ot({inputs:{x:f},backend:t,attrs:{shape:d}})}return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var N3={kernelName:$s,backendName:"webgl",kernelFunc:cot};function pot(r){let{inputs:e,backend:t,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=e,{outputRaggedRank:a}=n,u=o.map(x=>t.readSync(x.dataId)),l=o.map(x=>x.shape),c=t.readSync(s.dataId),p=t.readSync(i.dataId),[m,f,d]=mM(u,l,c,s.shape,s.dtype,p,i.shape,a),h=m.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(d,s.dtype,f);return h.concat([g])}var k3={kernelName:cp,backendName:"webgl",kernelFunc:pot};function mot(r){let{inputs:e,backend:t}=r,{starts:n,limits:o,deltas:s}=e,i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,c]=fM(i,n.shape,n.dtype,a,o.shape,u,s.shape),p=t.makeTensorInfo([l.length],"int32",l),m=t.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var T3={kernelName:pp,backendName:"webgl",kernelFunc:mot};function fot(r){let{inputs:e,backend:t,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=n,l=t.readSync(o.dataId),c=t.readSync(s.dataId),p=t.readSync(i.dataId),m=a.map(g=>t.readSync(g.dataId)),f=a.map(g=>g.shape),[d,h]=dM(l,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,u);return t.makeTensorInfo(d,s.dtype,h)}var _3={kernelName:mp,backendName:"webgl",kernelFunc:fot};var vN=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=hM(n,o,s,i);return e.makeTensorInfo([a.length],i,a)},E3={kernelName:zl,backendName:"webgl",kernelFunc:vN};var dot="return 1.0 / x;",hot=Ct({opSnippet:dot}),A3={kernelName:Fs,backendName:"webgl",kernelFunc:hot};var got=gr+`
  return (x < 0.0) ? 0.0 : x;
`,xot=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yot=Ct({opSnippet:got,packedOpSnippet:xot}),D3={kernelName:Os,backendName:"webgl",kernelFunc:yot};var bot=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wot=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vot=Ct({opSnippet:bot,packedOpSnippet:wot}),R3={kernelName:Ls,backendName:"webgl",kernelFunc:vot};var Ib=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let c=[o&&t>1?a-1:a,o&&n>1?u-1:u],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Sb=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let c=[o&&t>1?a-1:a,o&&n>1?u-1:u],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Cot(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Sb(o.shape,u,l,s,i):new Ib(o.shape,u,l,s,i);return t.runWebGLProgram(c,[o],"float32")}var $3={kernelName:Ms,backendName:"webgl",kernelFunc:Cot};var Nb=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=u[0]/l[0],p=u[1]/l[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Iot(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new Nb(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var F3={kernelName:Wa,backendName:"webgl",kernelFunc:Iot};var kb=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let c=[o&&t>1?a-1:a,o&&n>1?u-1:u],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Tb=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,u,l]=e;this.outputShape=[i,t,n,l];let c=[o&&t>1?a-1:a,o&&n>1?u-1:u],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Sot(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Tb(o.shape,u,l,s,i):new kb(o.shape,u,l,s,i);return t.runWebGLProgram(c,[o],o.dtype)}var O3={kernelName:Ps,backendName:"webgl",kernelFunc:Sot};var _b=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,i,a]=e,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=u[0]/l[0],p=u[1]/l[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Not(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=new _b(s.shape,o.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}var P3={kernelName:Ga,backendName:"webgl",kernelFunc:Not};var Eb=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,s=e.map((a,u)=>o(u)).join(","),i=Lt(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var Ab=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=er("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Lt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${i}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(d){return m(d)}function l(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((y,w)=>f(w,d)),g=h.join(","),x=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function kot(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return rr({inputs:{x:o},backend:t});let u=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ab(o.shape,a):new Eb(o.shape,a);return t.runWebGLProgram(u,[o],o.dtype)}var M3={kernelName:zs,backendName:"webgl",kernelFunc:kot};var Db=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],o=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var L3={kernelName:Ja,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=e,a=t,u=new Db(n.shape,s),[l,c]=I.getImageCenter(i,n.shape[1],n.shape[2]),p=[[l,c,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(u,[n],n.dtype,p)}};var Tot=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,_ot=Ct({opSnippet:Tot}),z3={kernelName:Bs,backendName:"webgl",kernelFunc:_ot};var Eot="return inversesqrt(x);",Aot=Ct({opSnippet:Eot,cpuKernelImpl:gM}),B3={kernelName:Vs,backendName:"webgl",kernelFunc:Aot};var Au=class{constructor(e,t,n,o,s,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let l=Lt(s.length),c=Lt(i.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,f="";o===1?f="i":o===2&&(f="i, coords[1]");let d=`getUpdates(${f})`,h="";u&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};var Rb=class{constructor(e,t,n,o,s,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let l=Lt(s.length),c=Lt(i.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,f="";o===1?f="i":o===2&&(f="i, coords[1]");let d=`getUpdates(${f})`,h="";u&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${d};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}};function Dot(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(s,o,i),m=[p/l,l];if(p===0)return t.makeTensorInfo(i,o.dtype);let f=ot({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),d=ot({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g;z().getBool("WEBGL_PACK")?g=new Rb(u,a,f.shape.length,d.shape.length,c,m):g=new Au(u,a,f.shape.length,d.shape.length,c,m);let x=t.runWebGLProgram(g,[d,f,h],d.dtype),y=ot({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(h),y}var V3={kernelName:Ua,backendName:"webgl",kernelFunc:Dot};var $b=class{constructor(e,t,n,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=z().getNumber("WEBGL_VERSION")===2?s:i,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Rot(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:i}=n,a=new $b(o.shape[0],o.shape[1],s.shape[1],i),u=[[o.shape[1]]];return t.runWebGLProgram(a,[o,s],"int32",u)}var G3={kernelName:qa,backendName:"webgl",kernelFunc:Rot};var Fb=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<t.length;c++)l.push(`${a[c]}`),c<e&&u.push(`${a[c]}`);o=u.join(),s=l.join()}let i=Lt(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function $ot(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=new Fb(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[n,o,s],ir(o.dtype,s.dtype))}var W3={kernelName:Oi,backendName:"webgl",kernelFunc:$ot};var Fot=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Oot=Ct({opSnippet:Fot}),U3={kernelName:Gs,backendName:"webgl",kernelFunc:Oot};var Pot=Oo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Mot=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Lot=Ct({opSnippet:Pot,packedOpSnippet:Mot,cpuKernelImpl:yM}),H3={kernelName:qs,backendName:"webgl",kernelFunc:Lot};var zot=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Bot=Ct({opSnippet:zot}),q3={kernelName:Hs,backendName:"webgl",kernelFunc:Bot};var Vot=Oo+`
  return sin(x);
`,Got=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${qn}
  return result;
`,Wot=Ct({opSnippet:Vot,packedOpSnippet:Got}),K3={kernelName:Ws,backendName:"webgl",kernelFunc:Wot};var Uot=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Hot=Ct({opSnippet:Uot}),j3={kernelName:Us,backendName:"webgl",kernelFunc:Hot};var qot=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Kot=Ct({opSnippet:qot}),X3={kernelName:Ks,backendName:"webgl",kernelFunc:Kot};var jot=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,y)=>x*y),u=[[0,0]];u.push(...i);for(let x=1+s.length;x<o.shape.length;++x)u.push([0,0]);let l=[],c=wN({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(c.shape,s,a,!1),m=I.getPermuted(p.length,s.length,!1),f=I.getReshapedPermuted(c.shape,s,a,!1),d=ot({inputs:{x:c},backend:t,attrs:{shape:p}}),h=Oe({inputs:{x:d},backend:t,attrs:{perm:m}}),g=ot({inputs:{x:h},backend:t,attrs:{shape:f}});return l.push(c),l.push(d),l.push(h),l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},Y3={kernelName:Mi,backendName:"webgl",kernelFunc:jot};function Xot(r){let{inputs:e,backend:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=t.readSync(n.dataId),u=t.readSync(o.dataId),l=t.readSync(s.dataId),c=t.readSync(i.dataId)[0],[p,m,f,d,h]=wM(a,n.shape,n.dtype,u,o.dtype,l,c);return[t.makeTensorInfo(m,n.dtype,p),t.makeTensorInfo([m[0]],o.dtype,f),t.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),t.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var Z3={kernelName:Bl,backendName:"webgl",kernelFunc:Xot};function Yot(r){let{inputs:e,backend:t}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(t.readSync(o.dataId)),a=t.readSync(n.dataId),u=Array.from(t.readSync(s.dataId)),[l,c,p]=vM(a,n.shape,n.dtype,i,u);return[t.makeTensorInfo(c,n.dtype,l),t.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var J3={kernelName:Ka,backendName:"webgl",kernelFunc:Yot};function Zot(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,c]=hy(i,n.shape,n.dtype,a,u,!0);return t.makeTensorInfo(c,n.dtype,l)}var Q3={kernelName:Vl,backendName:"webgl",kernelFunc:Zot};function Jot(r){let{inputs:e,backend:t}=r,{data:n,indices:o,segmentIds:s}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=t.readSync(n.dataId),a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,c]=hy(i,n.shape,n.dtype,a,u);return t.makeTensorInfo(c,n.dtype,l)}var tB={kernelName:Gl,backendName:"webgl",kernelFunc:Jot};function Qot(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=I.calculateShapes(s,o,a),f=!1;if(s.dtype==="string"){let x=t.bufferSync(o),y=t.bufferSync(s),w=b.decodeString(t.readSync(i.dataId)[0]),v=xM(x,y,a,m,c,l,u,p,w,f);return t.makeTensorInfo(a,v.dtype,v.values)}let d=new Au(l,u,o.shape.length,s.shape.length,p,[m,1],f),h=t.runWebGLProgram(d,[s,o,i],s.dtype),g=ot({inputs:{x:h},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(h),g}var eB={kernelName:ja,backendName:"webgl",kernelFunc:Qot};function tst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=o.shape.length,c=new Array(l).fill(0),p=o.shape.slice();return u.map(m=>{let f=[...p];f[a]=m;let d=bi({inputs:{x:o},backend:t,attrs:{begin:c,size:f}});return c[a]+=m,d})}var rB={kernelName:Li,backendName:"webgl",kernelFunc:tst};var nB="return sqrt(x);",est=Ct({opSnippet:nB,packedOpSnippet:nB,cpuKernelImpl:CM}),oB={kernelName:js,backendName:"webgl",kernelFunc:est};var rst="return x * x;",nst=Ct({opSnippet:rst}),sB={kernelName:Wl,backendName:"webgl",kernelFunc:nst};var iB="return (a - b) * (a - b);",ost=ue({opSnippet:iB,packedOpSnippet:iB}),aB={kernelName:Zs,backendName:"webgl",kernelFunc:ost};function sst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");let s=t.readSync(o.dataId),i=I.fromUint8ToStringArray(s),a=IM(i,"string",n);return t.makeTensorInfo(o.shape,"string",a)}var lB={kernelName:Lu,backendName:"webgl",kernelFunc:sst};function ist({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=gr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new Pr(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var uB={kernelName:ho,backendName:"webgl",kernelFunc:ist};var Ob=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=Lt(n.length),i=Lt(n.length),a="";if(o===1)a="coords * strides + begin";else{let u=0;a=n.map((l,c)=>(u++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function ast(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:v}=Ve.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=ot({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=Ve.computeOutShape(y,w,v),D=bi({inputs:{x:o},backend:t,attrs:{begin:y,size:A}});N=ot({inputs:{x:D},backend:t,attrs:{shape:d}}),t.disposeIntermediateTensorInfo(D)}else if(t.shouldExecuteOnCPU([o])){let D=t.readSync(o.dataId),F=wt(o.shape,o.dtype,D),O=SM(f,F,v,y);N=t.makeTensorInfo(d,o.dtype,O.values)}else{let D=new Ob(y,v,f);N=t.runWebGLProgram(D,[o],o.dtype)}let _=ot({inputs:{x:N},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(N),_}var cB={kernelName:Xa,backendName:"webgl",kernelFunc:ast};function lst(r){let{inputs:e,backend:t,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:c,dataSplits:p}=e,m=t.readSync(c.dataId),f=t.readSync(p.dataId),[d,h]=NM(m,f,o,s,i,a,u,l);return[t.makeTensorInfo([d.length],"string",d),t.makeTensorInfo(p.shape,"int32",h)]}var pB={kernelName:Ul,backendName:"webgl",kernelFunc:lst};function ust(r){let{inputs:e,backend:t,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=t.readSync(s.dataId),u=t.readSync(i.dataId)[0],[l,c,p]=kM(a,u,o),m=c.length;return[t.makeTensorInfo([m,2],"int32",l),t.makeTensorInfo([m],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(p))]}var mB={kernelName:Hl,backendName:"webgl",kernelFunc:ust};function cst(r){let{inputs:e,backend:t,attrs:n}=r,{numBuckets:o}=n,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=t.readSync(s.dataId),a=TM(i,o);return t.makeTensorInfo(s.shape,"int32",a)}var fB={kernelName:ql,backendName:"webgl",kernelFunc:cst};var pst="return tan(x);",mst=Ct({opSnippet:pst}),dB={kernelName:Qs,backendName:"webgl",kernelFunc:mst};var fst=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,dst=Ct({opSnippet:fst}),hB={kernelName:ti,backendName:"webgl",kernelFunc:dst};function hst(r){let{inputs:e,backend:t,attrs:n}=r,{tensor:o,indices:s,updates:i}=e,{}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(i,s,o.shape),m=[p/l,l];if(p===0)return t.makeTensorInfo(o.shape,s.dtype);let f=ot({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),d=ot({inputs:{x:i},backend:t,attrs:{shape:[u,l]}}),h=ot({inputs:{x:o},backend:t,attrs:{shape:m}}),g=new Au(u,a,f.shape.length,d.shape.length,c,m,!1,!0),x=t.runWebGLProgram(g,[d,f,h],h.dtype),y=ot({inputs:{x},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(x),y}var gB={kernelName:Ha,backendName:"webgl",kernelFunc:hst};var Pb=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;let o=Lt(this.rank),s=gst(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function gst(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function CN(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=t.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>b.decodeString(m)):u,c=wt(o.shape,o.dtype,l),p=EM(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Pb(o.shape,s);return t.runWebGLProgram(i,[o],o.dtype)}var xB={kernelName:ro,backendName:"webgl",kernelFunc:CN};var Mb=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Lb=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function zc(r,e){e!==null&&r.disposeIntermediateTensorInfo(e)}function yB(r){let e=1;for(;e<r;)e*=2;return e}function xst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:i}=n,a=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,c=l[l.length-1];if(t.shouldExecuteOnCPU([o])||c<a||s>u){let O=t.readSync(o.dataId),[V,G]=AM(O,l,o.dtype,s,i);return[t.makeTensorInfo(V.shape,V.dtype,V.values),t.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(c===1)return[o,wl({attrs:{shape:l,dtype:"int32",value:0},backend:t})];let p=t.texData.get(o.dataId),m=p!==null&&p.isPacked,f=m?t.unpackTensor(o):o,h=b.sizeFromShape(l)/c,g=ot({inputs:{x:f},attrs:{shape:[h,c]},backend:t});m&&zc(t,f);let x=yB(s),y=yB(c),w=null,v=()=>w===null?[g,g]:[g,w],N=(O,V,G)=>{let W=v(),H=new Mb(G),j=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[O],[V]],X=w;w=t.runWebGLProgram(H,W,"int32",j),zc(t,X)};for(let O=1;O<x;O*=2){let V=O*2;for(let G=O;G>=1;G/=2)N(V,G,[h,y])}for(let O=y;O>x;O/=2){let V=v(),G=new Lb([h,O/2]),H=[[c],[w===null?1:0],[x]],q=w;w=t.runWebGLProgram(G,V,"int32",H),zc(t,q);let j=x/2,X=j*2;for(let Z=j;Z>=1;Z/=2)N(X,Z,w.shape)}let _=w;w=bi({inputs:{x:w},backend:t,attrs:{begin:0,size:[h,s]}}),zc(t,_);let A=hN({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});zc(t,g);let D=l.slice(0,-1);D.push(s),_=w,w=ot({inputs:{x:w},attrs:{shape:D},backend:t}),zc(t,_);let F=A;return A=ot({inputs:{x:A},attrs:{shape:D},backend:t}),zc(t,F),[A,w]}var bB={kernelName:Ya,backendName:"webgl",kernelFunc:xst};var zb=class{constructor(e,t,n,o,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function yst(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[c,p,m,f]=o.shape,[d,h]=l??[p,m],g=[c,d,h,f],x=new zb(p,m,i,a,u,g);return t.runWebGLProgram(x,[o,s],"float32")}var wB={kernelName:Za,backendName:"webgl",kernelFunc:yst};function bst(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;aa(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:u,indices:l}=DM(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var vB={kernelName:Kl,backendName:"webgl",kernelFunc:bst};function wst(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),c=0;for(let h=0;h<a;h++)h!==s&&(l[c++]=i.shape[h]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=bi({inputs:{x:i},backend:t,attrs:{begin:m,size:f}}),x=ot({inputs:{x:g},backend:t,attrs:{shape:l}});d[h]=x,p.push(g)}return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var CB={kernelName:zi,backendName:"webgl",kernelFunc:wst};var Bb=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let u="0.0",l="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function vst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:i}=n,a=o.shape.length,u=[],l=0,c=I.getAxesPermutation([l],a),p=o;c!=null&&(p=Oe({inputs:{x:o},backend:t,attrs:{perm:c}}),u.push(p),l=I.getInnerMostAxes(1,a)[0]);let m=I.segment_util.computeOutShape(p.shape,l,i),f=b.sizeFromShape([p.shape[l]]),d=ot({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});u.push(d);let h=Uu(o.dtype),g=(v,N,_,A,D)=>{let F=v.shape[0],O=v.shape[1],V=I.segment_util.segOpComputeOptimalWindowSize(O,D),G={windowSize:V,inSize:O,batchSize:F,numSegments:D},W=new Bb(G,N),H=t.compileAndRun(W,[v,_],A);if(u.push(H),H.shape[1]===D)return H;let q=vN({backend:t,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),j=CN({inputs:{x:q},backend:t,attrs:{reps:[O/V]}});return u.push(q),u.push(j),g(H,N,j,A,D)},x=g(d,"unsortedSegmentSum",s,h,i),y=ot({inputs:{x},backend:t,attrs:{shape:m}}),w=y;if(c!=null){u.push(y);let v=I.getUndoAxesPermutation(c);w=Oe({inputs:{x:w},backend:t,attrs:{perm:v}})}return u.forEach(v=>t.disposeIntermediateTensorInfo(v)),w}var IB={kernelName:jl,backendName:"webgl",kernelFunc:vst};var Cst=[sL,aL,lL,uL,pL,mL,fL,dL,xL,yL,bL,wL,vL,CL,IL,SL,NL,kL,TL,_L,EL,DL,RL,$L,FL,LL,BL,VL,XM,WL,HL,qL,KL,jL,XL,YL,ZL,JL,QL,tz,nz,oz,sz,iz,az,lz,uz,cz,pz,mz,fz,dz,hz,gz,xz,yz,wz,vz,Cz,Iz,Nz,kz,Tz,_z,Ez,Az,Dz,Rz,$z,jM,Fz,UL,Oz,Pz,Mz,YM,Lz,zz,Bz,Vz,Gz,Wz,Uz,Hz,qz,Kz,Xz,Yz,Zz,Jz,Qz,t3,r3,o3,s3,i3,a3,l3,f3,QM,d3,h3,g3,x3,OL,y3,v3,C3,I3,S3,ZM,N3,k3,T3,_3,E3,PL,u3,A3,D3,R3,eL,$3,F3,O3,P3,M3,L3,z3,B3,V3,G3,W3,U3,H3,q3,K3,j3,AL,m3,X3,Y3,Z3,J3,Q3,tB,eB,rB,oB,sB,aB,lB,uB,cB,pB,mB,fB,p3,nL,dB,hB,gB,xB,bB,wB,oL,vB,CB,IB,b3];for(let r of Cst)hp(r);var kt=function(r){return r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64",r}(kt||{}),Bc=function(r){return r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu",r[r.sigmoid=5]="sigmoid",r[r.elu=6]="elu",r}(Bc||{});var SB;function Sst(r){SB=r.wasm.cwrap(Vi,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Nst(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(i!=null){let D=t.dataIdMap.get(i.dataId);if(D.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${D.shape.length}.`);d=D.id}let h=a==null?0:t.dataIdMap.get(a.dataId).id,g=Bc[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let x=u?o.shape[2]:o.shape[1],y=l?s.shape[1]:s.shape[2],w=Vr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),v=t.makeOutput([...w,x,y],o.dtype),N=t.dataIdMap.get(v.dataId).id,_=new Uint8Array(new Int32Array(o.shape).buffer),A=new Uint8Array(new Int32Array(s.shape).buffer);return SB(m,_,o.shape.length,f,A,s.shape.length,u,l,g,d,h,p||0,N),v}var NB={kernelName:Vi,backendName:"wasm",setupFunc:Sst,kernelFunc:Nst};function yt(r,e){let t;function n(s){t=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:i,inputs:{x:a}}=s,u=i.dataIdMap.get(a.dataId).id,l=i.makeOutput(a.shape,e||a.dtype),c=i.dataIdMap.get(l.dataId).id;return b.sizeFromShape(l.shape)===0||t(u,kt[a.dtype],c),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var kB=yt(Ci);var TB=yt(zo);var _B=yt(Bo);function te(r,e,t){let n;function o(i){n=i.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:a,inputs:u}=i,{a:l,b:c}=u,p=a.dataIdMap.get(l.dataId).id,m=a.dataIdMap.get(c.dataId).id,f=t??l.dtype,d=I.assertAndGetBroadcastShape(l.shape,c.shape),h=a.makeOutput(d,f);if(b.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),x=new Uint8Array(new Int32Array(c.shape).buffer),y=a.dataIdMap.get(h.dataId).id;return n(p,g,l.shape.length,m,x,c.shape.length,kt[l.dtype],y),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var kst=!0,EB=te(eo,kst);var AB;function Tst(r){AB=r.wasm.cwrap(Vo,null,["array","number","number","number"])}function _st(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(b.sizeFromShape(n.shape)===0)return n;let o=e.map(a=>t.dataIdMap.get(a.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),i=t.dataIdMap.get(n.dataId).id;return AB(s,o.length,kt[n.dtype],i),n}var DB={kernelName:Vo,backendName:"wasm",setupFunc:Tst,kernelFunc:_st};function Vc(r){let{inputs:{x:e},backend:t}=r;if(e.dtype==="string")return mr(t.readSync(e.dataId),e.shape,e.dtype);let n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var RB={kernelName:fo,backendName:"wasm",kernelFunc:Vc};var $B;function Est(r){$B=r.wasm.cwrap(no,null,["number","array","number","number","number","array","number"])}function co(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=Dst(e.x.shape,n.perm),i=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(i=!1);let a=Ast(e.x.shape,n.perm),u={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(i){let d=Vc({inputs:e,backend:t});return d.shape=a,d}let l=t.makeOutput(a,u.dtype),c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return $B(c,f,u.shape.length,kt[u.dtype],p,m,s.length),l}function Ast(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function Dst(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let i=0;i<n.length;++i)n[i]>=o&&(s===-1||n[s]>n[i])&&(s=i);n[s]=o}return[t,n]}var FB={kernelName:no,backendName:"wasm",kernelFunc:co,setupFunc:Est};function xn(r,e,t){let n=r.shape,o=r.shape.length,s=b.parseAxisParam(e,n),i=s,a=I.getAxesPermutation(i,o),u=null,l=!1;if(a!=null){let c=new Array(o);for(let f=0;f<c.length;f++)c[f]=n[a[f]];i=I.getInnerMostAxes(i.length,o),u=co({inputs:{x:r},attrs:{perm:a},backend:t});let p=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(u.dataId).id!==p&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var OB;function Rst(r){OB=r.wasm.cwrap(ga,null,["number, number, number"])}function $st(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;I.assertAxesAreInnerMostDims("all",p,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,p),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;OB(u,x,w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var PB={kernelName:ga,backendName:"wasm",setupFunc:Rst,kernelFunc:$st};var MB;function Fst(r){MB=r.wasm.cwrap(xa,null,["number, number, number"])}function Ost(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;I.assertAxesAreInnerMostDims("any",p,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,p),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;MB(u,x,w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var LB={kernelName:xa,backendName:"wasm",setupFunc:Fst,kernelFunc:Ost};function Vb(r){let e;function t(o){e=o.wasm.cwrap(r,null,["number","number","number","number","number"])}function n(o){let{backend:s,inputs:i,attrs:a}=o,{axis:u}=a,{x:l}=i,c=s.dataIdMap.get(l.dataId).id,p=c,m=l,{transposed:f,axes:d,inputWasTransposed:h}=xn(l,u,s);if(h){let N=s.dataIdMap.get(f.dataId).id;N!==c&&(m=f,p=N)}let g=m.shape.slice(0,-1),x=s.makeOutput(g,"int32"),y=s.dataIdMap.get(x.dataId).id,w=b.sizeFromShape(x.shape),v=m.shape[d[0]];return e(p,kt[m.dtype],w,v,y),h&&s.disposeData(f.dataId),x}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:n}}var zB=Vb(Ii);var BB=Vb(Si);var VB=yt(Go);var GB=yt(Wo);var WB=yt(Uo);var UB=te(qo,!1);var HB=yt(Ho);var qB;function Pst(r){qB=r.wasm.cwrap(Ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mst(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,c=I.computePool2DInfo(o.shape,i,a,1,u,l),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.strideHeight,y=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let v=n.makeOutput(c.outShape,"float32"),N=n.dataIdMap.get(v.dataId).id;return qB(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,y,w,N),v}var KB={kernelName:Ko,backendName:"wasm",setupFunc:Pst,kernelFunc:Mst};var jB;function Lst(r){jB=r.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,c=I.computePool3DInfo(o.shape,s,i,1,a,u,l),p=t.makeOutput(c.outShape,o.dtype);return jB(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),p}var XB={kernelName:Ni,backendName:"wasm",setupFunc:Lst,kernelFunc:zst};var YB;function Bst(r){YB=r.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vst(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n,c=I.computePool3DInfo(s.shape,i,a,1,u,l),p=t.makeOutput(s.shape,s.dtype);return YB(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left,c.filterDepth,c.filterHeight,c.filterWidth),p}var ZB={kernelName:_l,backendName:"wasm",setupFunc:Bst,kernelFunc:Vst};var JB;function Gst(r){JB=r.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wst(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u}=n,l=I.computePool2DInfo(s.shape,i,a,1,u),c=t.makeOutput(s.shape,s.dtype);return JB(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(c.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left,l.filterHeight,l.filterWidth),c}var QB={kernelName:Tl,backendName:"wasm",setupFunc:Gst,kernelFunc:Wst};function cr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=b.sizeFromShape(n.shape),i=b.inferFromImplicitShape(o,s);return b.assert(s===b.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var tV={kernelName:Fi,backendName:"wasm",kernelFunc:cr};var eV;function Ust(r){eV=r.wasm.cwrap(jo,null,["number","array","number","number","array","number","number","number","number"])}function Hst(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:i,transposeB:a}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,c=i?o.shape[u-2]:o.shape[u-1],p=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=b.sizeFromShape(d),x=b.sizeFromShape(h),w=Vr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let v=i?[g,c,m]:[g,m,c],N=a?[x,f,p]:[x,p,f],_=cr({inputs:{x:o},backend:t,attrs:{shape:v}}),A=cr({inputs:{x:s},backend:t,attrs:{shape:N}}),D=t.dataIdMap.get(_.dataId).id,F=t.dataIdMap.get(A.dataId).id,O=i?_.shape[2]:_.shape[1],V=a?A.shape[1]:A.shape[2],G=Math.max(g,x),W=t.makeOutput([G,O,V],_.dtype),H=t.dataIdMap.get(W.dataId).id,q=new Uint8Array(new Int32Array(_.shape).buffer),j=new Uint8Array(new Int32Array(A.shape).buffer);return eV(D,q,_.shape.length,F,j,A.shape.length,i,a,H),t.disposeData(_.dataId),t.disposeData(A.dataId),W.shape=w,W}var rV={kernelName:jo,backendName:"wasm",setupFunc:Ust,kernelFunc:Hst};function Po(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,i]=Ve.parseSliceParams(e,t,n),a=Ve.isSliceContinous(e.shape,s,i),u=o.readSync(e.dataId),l=o.makeOutput(i,e.dtype),c=b.computeStrides(e.shape),p=o.dataIdMap.get(l.dataId);if(a){let d=Ve.computeFlatOffset(s,c);return e.dtype==="string"?p.stringBytes=u.slice(d,d+b.sizeFromShape(i)):o.typedArrayFromHeap(l).set(u.subarray(d,d+b.sizeFromShape(i))),l}if(e.dtype==="string"){let d=Ic(u,s,i,e.shape,e.dtype);return p.stringBytes=d,l}let m=o.typedArrayFromHeap(l),f=e.shape.length;if(f===2)qst(u,c[0],m,s,i);else if(f===3)Kst(u,c[0],c[1],m,s,i);else if(f===4)jst(u,c[0],c[1],c[2],m,s,i);else{let d=Ic(u,s,i,e.shape,e.dtype);m.set(d)}return l}function qst(r,e,t,n,o){let s=0,i=n[0],a=n[1],u=i+o[0];for(let l=i;l<u;l++){let c=l*e+a;t.set(r.subarray(c,c+o[1]),s),s+=o[1]}}function Kst(r,e,t,n,o,s){let i=0,a=o[0],u=o[1],l=o[2],c=a+s[0],p=u+s[1];for(let m=a;m<c;m++)for(let f=u;f<p;f++){let d=m*e+f*t+l;n.set(r.subarray(d,d+s[2]),i),i+=s[2]}}function jst(r,e,t,n,o,s,i){let a=0,u=s[0],l=s[1],c=s[2],p=u+i[0],m=l+i[1],f=c+i[2],d=s[3];for(let h=u;h<p;h++)for(let g=l;g<m;g++)for(let x=c;x<f;x++){let y=h*e+g*t+x*n+d;o.set(r.subarray(y,y+i[3]),a),a+=i[3]}}var nV={kernelName:Pi,backendName:"wasm",kernelFunc:Po};function Xst(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:i}=n,a=s.reduce((x,y)=>x*y),u=I.getReshaped(o.shape,s,a),l=I.getPermuted(u.length,s.length),c=I.getReshapedPermuted(o.shape,s,a),p=I.getSliceBeginCoords(i,s.length),m=I.getSliceSize(c,i,s.length),f=cr({inputs:{x:o},backend:t,attrs:{shape:u}}),d=co({inputs:{x:f},backend:t,attrs:{perm:l}}),h=cr({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Po({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeData(f.dataId),t.disposeData(d.dataId),t.disposeData(h.dataId),g}var oV={kernelName:ki,backendName:"wasm",kernelFunc:Xst};var sV;function Yst(r){sV=r.wasm.cwrap(ya,null,["number","number","boolean","number","number","number"])}function Zst(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,weights:s}=t,{size:i}=n,a=s.shape.reduce((p,m)=>p*m,1)!==0,u=o.shape.length===1?[i]:[o.shape[0],i],l=e.makeOutput(u,s.dtype);function c(p){return e.dataIdMap.get(p.dataId).id}return sV(c(o),i,a,c(s),kt[s.dtype],c(l)),l}var iV={kernelName:ya,backendName:"wasm",setupFunc:Yst,kernelFunc:Zst};var Jst=!0,aV=te(ba,Jst);function Qst(r){let{inputs:e,backend:t}=r,{s0:n,s1:o}=e,s=t.typedArrayFromHeap(n),i=t.typedArrayFromHeap(o),a=I.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return t.makeOutput([a.length],"int32",void 0,new Int32Array(a))}var lV={kernelName:El,backendName:"wasm",kernelFunc:Qst};function En(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var uV={kernelName:po,backendName:"wasm",kernelFunc:En};var cV=yt(Xo);var pV;function tit(r){pV=r.wasm.cwrap(mo,null,["number","number","number","number"])}function eit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:i}=n,a=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id;return pV(a,s,i,l),u}var mV={kernelName:mo,backendName:"wasm",setupFunc:tit,kernelFunc:eit};function IN(r){let{inputs:e,backend:t}=r,n=b.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=e.map(f=>f.shape);I.assertParamsConsistent(o,n);let s=I.computeOutShape(e.map(f=>f.shape),n),i=e.filter(f=>b.sizeFromShape(f.shape)>0);if(i.length===1)return Vc({inputs:{x:i[0]},backend:t});let a=t.makeOutput(s,e[0].dtype);if(b.sizeFromShape(s)===0)return a;if(i[0].dtype==="string"){let f=i.map(w=>{let N=[-1,b.sizeFromShape(w.shape.slice(n))];return cr({inputs:{x:w},backend:t,attrs:{shape:N}})}),d=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape}));s=I.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=wc(d,s,e[0].dtype,h),x=I.computeOutShape(i.map(w=>w.shape),n);a.shape=x;let y=t.dataIdMap.get(a.dataId);return y.stringBytes=I.fromStringArrayToUint8(g),f.forEach(w=>t.disposeData(w.dataId)),a}let u=b.sizeFromShape(i[0].shape.slice(0,n)),l=0,c=i.map(f=>{let d=b.sizeFromShape(f.shape.slice(n));return l+=d,d}),p=i.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<u;f++){let d=f*l;for(let h=0;h<p.length;h++){let g=c[h],x=f*g,y=p[h].subarray(x,x+g);m.set(y,d),d+=g}}return a}var fV={kernelName:Ti,backendName:"wasm",kernelFunc:IN};var dV;function rit(r){dV=r.wasm.cwrap(Yo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nit(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p,dataFormat:m}=t,f=I.convertConv2DDataFormat(m),d=I.computeConv2DInfo(o.shape,s.shape,u,l,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,x=d.padInfo.top,y=d.padInfo.right,w=d.padInfo.bottom,v=d.padInfo.left,N=d.dilationHeight,_=d.dilationWidth,A=d.strideHeight,D=d.strideWidth,F=d.inChannels,O=d.outChannels,V=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return dV(i,o.shape[0],o.shape[1],o.shape[2],a,h,g,x,y,w,v,V,N,_,A,D,F,O,W),G}var hV={kernelName:Yo,backendName:"wasm",setupFunc:rit,kernelFunc:nit};var gV;function oit(r){gV=r.wasm.cwrap(Zo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sit(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,inputShape:c}=n,p=1,m=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(c,s.shape,i,p,a,l,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:x,inHeight:y,inWidth:w,outChannels:v,outHeight:N,outWidth:_,strideHeight:A,strideWidth:D}=f,F=h-1-f.padInfo.top,O=g-1-f.padInfo.left,V=f.dataFormat==="channelsLast",G=b.computeStrides(f.inShape),W=b.computeStrides(o.shape),[H,q,j]=b.computeStrides(s.shape),X=G[0],Z=V?G[1]:G[2],tt=V?G[2]:1,st=V?1:G[1],it=W[0],ut=V?W[1]:W[2],rt=V?W[2]:1,lt=V?1:W[1],ft=e.makeOutput(f.inShape,"float32"),ht=e.dataIdMap.get(ft.dataId).id,It=e.dataIdMap.get(o.dataId).id,Ft=e.dataIdMap.get(s.dataId).id;return gV(It,Ft,d,h,g,y,w,x,N,_,v,A,D,F,O,H,q,j,X,Z,tt,st,it,ut,rt,lt,ht),ft}var xV={kernelName:Zo,backendName:"wasm",setupFunc:oit,kernelFunc:sit};var yV;function iit(r){yV=r.wasm.cwrap(Jo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ait(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;if(o.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let l=I.computeConv3DInfo(o.shape,s.shape,i,u,a),c=t.makeOutput(l.outShape,o.dtype);return yV(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}var bV={kernelName:Jo,backendName:"wasm",setupFunc:iit,kernelFunc:ait};var wV;function lit(r){wV=r.wasm.cwrap(wa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:i,pad:a,filterShape:u}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let l=I.computeConv3DInfo(o.shape,u,i,1,a),c=t.makeOutput(l.filterShape,s.dtype);return wV(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}var vV={kernelName:wa,backendName:"wasm",setupFunc:lit,kernelFunc:uit};var CV;function cit(r){CV=r.wasm.cwrap(va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function pit(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:i,strides:a,inputShape:u}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let l=I.computeConv3DInfo(u,s.shape,a,1,i),c=t.makeOutput(l.inShape,o.dtype);return CV(t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(c.dataId).id,l.batchSize,l.inDepth,l.inHeight,l.inWidth,l.inChannels,l.outDepth,l.outHeight,l.outWidth,l.outChannels,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.filterDepth,l.filterHeight,l.filterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),c}var IV={kernelName:va,backendName:"wasm",setupFunc:cit,kernelFunc:pit};var SV=yt(Qo);var NV=yt(ts);var kV=function(r){return r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest",r}(kV||{}),TV;function mit(r){TV=r.wasm.cwrap(Ia,null,["number","number","number","number","array","number","number","number","number","number"])}function fit(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:i}=n,{image:a,boxes:u,boxInd:l}=t,c=u.shape[0],[p,m]=i,f=[c,p,m,a.shape[3]],d=e.dataIdMap.get(a.dataId),h;a.dtype!=="float32"&&(h=En({backend:e,inputs:{x:a},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,x=e.dataIdMap.get(u.dataId).id,y=e.dataIdMap.get(l.dataId).id,w=e.makeOutput(f,"float32"),v=e.dataIdMap.get(w.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer);return TV(g,x,y,c,N,p,m,kV[o],s,v),h!=null&&e.disposeData(h.dataId),w}var _V={kernelName:Ia,backendName:"wasm",setupFunc:mit,kernelFunc:fit};var EV;function dit(r){EV=r.wasm.cwrap(Ca,null,["number","number","number","number","number","number"])}function hit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),c=o;l!==null&&(c=co({inputs:{x:o},attrs:{perm:l},backend:t}));let p=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumprod",[p],u);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;EV(d,i?1:0,a?1:0,f,h,kt[o.dtype]);let g=m;if(l!==null){let x=I.getUndoAxesPermutation(l);g=co({inputs:{x:m},attrs:{perm:x},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var AV={kernelName:Ca,backendName:"wasm",setupFunc:dit,kernelFunc:hit};var DV;function git(r){DV=r.wasm.cwrap(es,null,["number","number","number","number","number","number"])}function xit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;b.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([s],u),c=o;l!==null&&(c=co({inputs:{x:o},attrs:{perm:l},backend:t}));let p=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[p],u);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;DV(d,i?1:0,a?1:0,f,h,kt[o.dtype]);let g=m;if(l!==null){let x=I.getUndoAxesPermutation(l);g=co({inputs:{x:m},attrs:{perm:x},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var RV={kernelName:es,backendName:"wasm",setupFunc:git,kernelFunc:xit};var $V;function yit(r){$V=r.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function bit(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,weights:s}=t,{size:i,binaryOutput:a}=n,u=s.shape.reduce((m,f)=>m*f,1)!==0,l=o.shape.length===1?[i]:[o.shape[0],i],c=e.makeOutput(l,s.dtype);function p(m){return e.dataIdMap.get(m.dataId).id}return $V(p(o),new Uint8Array(new Int32Array(o.shape).buffer),o.shape.length,i,u,p(s),kt[s.dtype],a,p(c)),c}var FV={kernelName:Dl,backendName:"wasm",setupFunc:yit,kernelFunc:bit};var OV;function wit(r){OV=r.wasm.cwrap(Sa,null,["number","number","number","array","number","array","array","number","number"])}function vit(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],c=i==="NHWC"?o.shape[3]:o.shape[1],p=u*s,m=l*s,f=c/(s*s),d=i==="NHWC"?[a,p,m,f]:[a,f,p,m],h=e.makeOutput(d,"float32"),x=e.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),v=new Uint8Array(new Int32Array(b.computeStrides(d)).buffer),N=e.dataIdMap.get(h.dataId).id;return OV(x,s,i==="NHWC"?1:0,y,o.shape.length-1,w,v,d.length,N),h}var PV={kernelName:Sa,backendName:"wasm",setupFunc:wit,kernelFunc:vit};var MV;function Cit(r){MV=r.wasm.cwrap(rs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iit(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p}=t,m=l??[1,1],f=I.computeConv2DInfo(o.shape,s.shape,u,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,N=f.dilationWidth,_=f.strideHeight,A=f.strideWidth,D=f.inChannels,F=f.outChannels,O=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let V=n.makeOutput(f.outShape,"float32"),G=n.dataIdMap.get(V.dataId).id;return MV(i,o.shape[0],o.shape[1],o.shape[2],a,d,h,g,x,y,w,O,v,N,_,A,D,F,G),V}var LV={kernelName:rs,backendName:"wasm",setupFunc:Cit,kernelFunc:Iit};var zV;function Sit(r){zV=r.wasm.cwrap("Diag",null,["number","number","number","number"])}function Nit(r){let{inputs:e,backend:t}=r,{x:n}=e,o=b.sizeFromShape(n.shape),s=t.makeOutput([...n.shape,...n.shape],n.dtype);return zV(t.dataIdMap.get(n.dataId).id,kt[n.dtype],o,t.dataIdMap.get(s.dataId).id),s}var BV={kernelName:Rl,backendName:"wasm",setupFunc:Sit,kernelFunc:Nit};var VV;function kit(r){VV=r.wasm.cwrap(ns,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:i,pad:a,dilations:u}=n;if(o.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${o.dtype} and ${s.dtype}`);let l=I.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),c=t.makeOutput(l.outShape,o.dtype);return VV(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(c.dataId).id,kt[o.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),c}var GV={kernelName:ns,backendName:"wasm",setupFunc:kit,kernelFunc:Tit};var WV;function _it(r){WV=r.wasm.cwrap(Fl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Eit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:i}=e,{strides:a,pad:u,dilations:l}=n;if(o.dtype!==s.dtype||o.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${i.dtype}`);let c=I.computeDilation2DInfo(o.shape,s.shape,a,u,"NHWC",l),p=t.makeOutput(s.shape,s.dtype);return WV(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(i.dataId).id,t.dataIdMap.get(p.dataId).id,kt[o.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),p}var UV={kernelName:Fl,backendName:"wasm",setupFunc:_it,kernelFunc:Eit};var HV;function Ait(r){HV=r.wasm.cwrap($l,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dit(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,dy:i}=e,{strides:a,pad:u,dilations:l}=n;if(o.dtype!==s.dtype||o.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${i.dtype}`);let c=I.computeDilation2DInfo(o.shape,s.shape,a,u,"NHWC",l),p=t.makeOutput(o.shape,o.dtype);return HV(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(i.dataId).id,t.dataIdMap.get(p.dataId).id,kt[o.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),p}var qV={kernelName:$l,backendName:"wasm",setupFunc:Ait,kernelFunc:Dit};var KV=yt(ss);var jV;function Rit(r){jV=r.wasm.cwrap(Na,null,["number","number","number"])}function $it(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=t.makeOutput(o.shape,"float32"),i=a=>t.dataIdMap.get(a.dataId).id;return jV(i(o),i(n),i(s)),s}var XV={kernelName:Na,backendName:"wasm",setupFunc:Rit,kernelFunc:$it};var Fit=!1,YV=te(ka,Fit,"bool");var ZV=yt(is);var JV=yt(as,"float32");function Gb(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),cr({inputs:{x:o},backend:n,attrs:{shape:a}})}var QV={kernelName:_i,backendName:"wasm",kernelFunc:Gb};var tG=yt(ls,"float32");function SN(r){let{attrs:{shape:e,value:t},backend:n}=r,{attrs:{dtype:o}}=r;o=o||b.inferDtype(t);let s=n.makeOutput(e,o);return n.typedArrayFromHeap(s).fill(t),s}var eG={kernelName:Ol,backendName:"wasm",kernelFunc:SN};var rG;function Oit(r){rG=r.wasm.cwrap(Ta,null,["number","number","number","number","number","number"])}function Pit(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,[a,u,l,c]=n.shape;return rG(s,a,u,l,c,i),o}var nG={kernelName:Ta,backendName:"wasm",kernelFunc:Pit,setupFunc:Oit};var oG=yt(us);var Mit=!1,sG=te(cs,Mit);var iG;function Lit(r){iG=r.wasm.cwrap(ps,null,["number","number","number","number","number","number","number"])}function zit(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:i,variance:a,offset:u,scale:l}=t,c=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(i.dataId).id,m=e.dataIdMap.get(a.dataId).id,f=u!=null?e.dataIdMap.get(u.dataId).id:0,d=l!=null?e.dataIdMap.get(l.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(b.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return iG(c,p,m,f,d,o,g),h}var aG={kernelName:ps,backendName:"wasm",setupFunc:Lit,kernelFunc:zit};var lG;function Bit(r){lG=r.wasm.cwrap(Gi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vit(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m),g=Bc[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,y=n.dataIdMap.get(s.dataId).id,w=h.outChannels,v=0;if(i!=null){let rt=n.dataIdMap.get(i.dataId);if(rt.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${rt.shape.length}.`);if(rt.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${rt.shape}) does not match the number of output channels (${w})`);v=rt.id}let N=h.filterHeight,_=h.filterWidth,A=h.padInfo.top,D=h.padInfo.right,F=h.padInfo.bottom,O=h.padInfo.left,V=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,q=h.inChannels,j=h.padInfo.type==="SAME"?1:0,X=h.batchSize,Z=h.inHeight,tt=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let st=n.makeOutput(h.outShape,"float32"),it=n.dataIdMap.get(st.dataId).id,ut=a==null?0:n.dataIdMap.get(a.dataId).id;return lG(x,X,Z,tt,y,N,_,v,A,D,F,O,j,V,G,W,H,q,w,g,ut,d||0,it),st}var uG={kernelName:Gi,backendName:"wasm",setupFunc:Bit,kernelFunc:Vit};var cG;function Git(r){cG=r.wasm.cwrap(Wi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wit(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=I.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!0),g=Bc[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,y=n.dataIdMap.get(s.dataId).id,w=h.outChannels,v=0;if(i!=null){let rt=n.dataIdMap.get(i.dataId);if(rt.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${rt.shape.length}.`);if(rt.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${rt.shape}) does not match the number of output channels (${w})`);v=rt.id}let N=h.filterHeight,_=h.filterWidth,A=h.padInfo.top,D=h.padInfo.right,F=h.padInfo.bottom,O=h.padInfo.left,V=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,H=h.strideWidth,q=h.inChannels,j=h.padInfo.type==="SAME"?1:0,X=h.batchSize,Z=h.inHeight,tt=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let st=n.makeOutput(h.outShape,"float32"),it=n.dataIdMap.get(st.dataId).id,ut=a==null?0:n.dataIdMap.get(a.dataId).id;return cG(x,X,Z,tt,y,N,_,v,A,D,F,O,j,V,G,W,H,q,w,g,ut,d||0,it),st}var pG={kernelName:Wi,backendName:"wasm",setupFunc:Git,kernelFunc:Wit};var mG;function Uit(r){mG=r.wasm.cwrap(_a,null,["number","number","number","number","number","number","array","number"])}function Hit(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,i,a,u]=Ng.prepareAndValidate(n,o),l=e.makeOutput(s,n.dtype);if(i===0)return l;let c=o.shape,p=c[c.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),x=e.dataIdMap.get(l.dataId).id;return mG(f,kt[n.dtype],h,i,p,a,g,x),l}var fG={kernelName:_a,backendName:"wasm",setupFunc:Uit,kernelFunc:Hit};var dG;function qit(r){dG=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Kit(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,u=b.parseAxisParam(i,o.shape)[0],l=e.readSync(s.dataId),c=o.shape[u];for(let F=0;F<l.length;++F){let O=l[F];b.assert(O<=c-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${c-1}]`)}let p=I.segment_util.collectGatherOpShapeInfo(o,s,u,a),m=cr({inputs:{x:o},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:e}),f=b.sizeFromShape(s.shape),d=cr({inputs:{x:s},attrs:{shape:[p.batchSize,f/p.batchSize]},backend:e}),h=[p.batchSize,p.outerSize,f/p.batchSize,p.sliceSize],g=e.makeOutput(h,o.dtype);if(b.sizeFromShape(o.shape)===0)return g;let x=m.shape.length-1,w=e.dataIdMap.get(m.dataId).id,N=e.dataIdMap.get(d.dataId).id,_=e.dataIdMap.get(g.dataId).id,A=new Uint8Array(new Int32Array(b.computeStrides(m.shape)).buffer),D=new Uint8Array(new Int32Array(b.computeStrides(h)).buffer);return dG(w,kt[o.dtype],A,x,N,p.batchSize,D,_),e.disposeData(m.dataId),e.disposeData(d.dataId),g.shape=p.outputShape,g}var hG={kernelName:Ei,backendName:"wasm",setupFunc:qit,kernelFunc:Kit};var jit=!1,gG=te(Ea,jit,"bool");var Xit=!1,xG=te(ms,Xit,"bool");var yG=yt(fs,"bool");var bG=yt(ds,"bool");var wG=yt(hs,"bool");var vG;function Yit(r){vG=r.wasm.cwrap(gs,null,["number","number","number","number"])}function Zit(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,"float32");if(b.sizeFromShape(e.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;vG(o,kt[e.dtype],t,i)}return s}var CG={kernelName:gs,backendName:"wasm",setupFunc:Yit,kernelFunc:Zit};var Jit=!1,IG=te(Aa,Jit,"bool");var Qit=!1,SG=te(Da,Qit,"bool");var NG;function tat(r){NG=r.wasm.cwrap(Ra,null,["number","number","number","number"])}function eat(r){let{attrs:e,backend:t}=r,{start:n,stop:o,num:s}=e,i=Math.floor(s),a=t.makeOutput([i],"float32");return NG(t.dataIdMap.get(a.dataId).id,n,o,i),a}var kG={kernelName:Ra,backendName:"wasm",setupFunc:tat,kernelFunc:eat};var TG=yt(xs);var _G=yt(ys);var rat=!1,EG=te($a,rat,"bool");var AG=yt(Fa);var nat=!1,DG=te(Oa,nat,"bool");var oat=!1,RG=te(pk,oat,"bool");var $G;function sat(r){$G=r.wasm.cwrap(bs,null,["number","number","number","number","number","number","number"])}function iat(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:i,alpha:a,beta:u}=n;if(o.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let l=t.makeOutput(o.shape,o.dtype);return $G(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(l.dataId).id,o.shape[3],s,i,a,u),l}var FG={kernelName:bs,backendName:"wasm",setupFunc:sat,kernelFunc:iat};var OG;function aat(r){OG=r.wasm.cwrap(Pa,null,["number","number","number","number","number","number","number","number","number"])}function lat(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=n;if(o.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let p=t.makeOutput(o.shape,o.dtype);return OG(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(i.dataId).id,t.dataIdMap.get(p.dataId).id,i.shape[3],a,u,l,c),p}var PG={kernelName:Pa,backendName:"wasm",setupFunc:aat,kernelFunc:lat};var MG;function uat(r){MG=r.wasm.cwrap(ws,null,["number","number","number","number"])}function cat(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:i}=t,u=e.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;I.assertAxesAreInnerMostDims("max",p,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,p),x=b.sizeFromShape(g),y=e.makeOutput(h,i.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;MG(u,kt[i.dtype],x,w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var LG={kernelName:ws,backendName:"wasm",setupFunc:uat,kernelFunc:cat};var pat=!1,zG=te(vs,pat);var BG;function mat(r){BG=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fat(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id;b.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=t,c=I.computePool2DInfo(o.shape,i,a,1,u,l),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.dilationHeight,y=c.dilationWidth,w=c.strideHeight,v=c.strideWidth,N=c.inChannels,_=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let A=n.makeOutput(c.outShape,"float32"),D=n.dataIdMap.get(A.dataId).id;return BG(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,y,w,v,N,_,D),A}var VG={kernelName:Cs,backendName:"wasm",setupFunc:mat,kernelFunc:fat};var GG;function dat(r){GG=r.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hat(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,c=I.computePool3DInfo(o.shape,s,i,1,a,u,l),p=t.makeOutput(c.outShape,o.dtype);return GG(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),p}var WG={kernelName:Ai,backendName:"wasm",setupFunc:dat,kernelFunc:hat};var UG;function gat(r){UG=r.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xat(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n,c=I.computePool3DInfo(s.shape,i,a,1,u,l),p=t.makeOutput(s.shape,s.dtype);return UG(t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,c.batchSize,c.inChannels,c.inDepth,c.inHeight,c.inWidth,c.outDepth,c.outHeight,c.outWidth,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),p}var HG={kernelName:Ml,backendName:"wasm",setupFunc:gat,kernelFunc:xat};var qG;function yat(r){qG=r.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function bat(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n,c=I.computePool2DInfo(s.shape,i,a,1,u,l),p=t.makeOutput(s.shape,s.dtype);return qG(t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left),p}var KG={kernelName:Pl,backendName:"wasm",setupFunc:yat,kernelFunc:bat};var jG;function wat(r){jG=r.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vat(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:u}=n;b.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let l=[1,1];b.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(o.shape,s,i,[1,1],a),p=t.makeOutput(c.outShape,o.dtype),m=t.makeOutput(c.outShape,"int32");return jG(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(p.dataId).id,t.dataIdMap.get(m.dataId).id,kt[o.dtype],u,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left),[p,m]}var XG={kernelName:Ll,backendName:"wasm",setupFunc:wat,kernelFunc:vat};var YG;function Cat(r){YG=r.wasm.cwrap(Is,null,["number, number, number"])}function Iat(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=p;if(f){let v=e.dataIdMap.get(c.dataId).id;v!==a&&(l=c,u=v,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=En({backend:e,inputs:{x:l},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(y.dataId).id);let w=e.makeOutput(h,"float32");if(b.sizeFromShape(l.shape)!==0){let v=e.dataIdMap.get(w.dataId).id;YG(u,x,v)}if(f&&e.disposeData(c.dataId),s){let v=I.expandShapeToKeepDim(w.shape,m);w.shape=v}return l.dtype!=="float32"&&e.disposeData(y.dataId),w}var ZG={kernelName:Is,backendName:"wasm",setupFunc:Cat,kernelFunc:Iat};var JG;function Sat(r){JG=r.wasm.cwrap(Ss,null,["number","number","number","number"])}function Nat(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w)}let d=l.shape.length;I.assertAxesAreInnerMostDims("min",p,d);let[h,g]=I.computeOutAndReduceShapes(l.shape,p),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;JG(u,kt[i.dtype],x,w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var QG={kernelName:Ss,backendName:"wasm",setupFunc:Sat,kernelFunc:Nat};var kat=!1,tW=te(Ns,kat);var eW=function(r){return r[r.reflect=0]="reflect",r[r.symmetric=1]="symmetric",r}(eW||{}),rW;function Tat(r){rW=r.wasm.cwrap(ks,null,["number","array","number","number","array","array","number","number"])}function _at(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,mode:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),u=t.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(d=>d[0]),p=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return rW(i,l,e.shape.length,kt[e.dtype],m,f,eW[o],u),a}var nW={kernelName:ks,backendName:"wasm",kernelFunc:_at,setupFunc:Tat};var oW;function Eat(r){oW=r.wasm.cwrap(Ys,null,["number","number","number","number"])}function NN(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),i=e.dataIdMap.get(s.dataId).id,a=t.shape[n],u=b.sizeFromShape(t.shape)/a;return b.sizeFromShape(s.shape)===0||oW(o,i,a,u),s}var sW={kernelName:Ys,backendName:"wasm",setupFunc:Eat,kernelFunc:NN};var iW;function Aat(r){iW=r.wasm.cwrap(Ma,null,["number","number","number","number","number","number"])}function Dat(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:i,normalized:a}=n;if(o.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${o.dtype}`);let u=a?o:NN({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),[l,c]=u.shape,p=t.makeOutput([l,s],"int32");return iW(t.dataIdMap.get(u.dataId).id,l,c,s,i,t.dataIdMap.get(p.dataId).id),a||t.disposeData(u.dataId),p}var aW={kernelName:Ma,backendName:"wasm",setupFunc:Aat,kernelFunc:Dat};var lW=te(Ts,!0);var Rat=!0,uW=te(_s,Rat);var cW=yt(Di);function Hm(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],i=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:i}}var pW;function $at(r){pW=r.wasm.cwrap(za,"number",["number","number","number","number","number"])}function Fat(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i}=n,{boxes:a,scores:u}=t,l=e.dataIdMap.get(a.dataId).id,c=e.dataIdMap.get(u.dataId).id,p=pW(l,c,s,o,i),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Hm(e,p);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var mW={kernelName:za,backendName:"wasm",setupFunc:$at,kernelFunc:Fat};var fW;function Oat(r){fW=r.wasm.cwrap(Ba,"number",["number","number","number","number","number","bool"])}function Pat(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:a}=n,{boxes:u,scores:l}=t,c=e.dataIdMap.get(u.dataId).id,p=e.dataIdMap.get(l.dataId).id,m=fW(c,p,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Hm(e,m);e.wasm._free(h);let x=e.makeOutput([d],"int32",f),y=e.makeOutput([],"int32",g);return[x,y]}var dW={kernelName:Ba,backendName:"wasm",setupFunc:Oat,kernelFunc:Pat};var hW;function Mat(r){hW=r.wasm.cwrap(Va,"number",["number","number","number","number","number","number"])}function Lat(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,softNmsSigma:a}=n,{boxes:u,scores:l}=t,c=e.dataIdMap.get(u.dataId).id,p=e.dataIdMap.get(l.dataId).id,m=hW(c,p,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Hm(e,m);e.wasm._free(g);let x=e.makeOutput([d],"int32",f),y=e.makeOutput([d],"float32",h);return[x,y]}var gW={kernelName:Va,backendName:"wasm",setupFunc:Mat,kernelFunc:Lat};var zat=!1,xW=te(La,zat,"bool");var yW;function Bat(r){yW=r.wasm.cwrap(Es,null,["number","number","number","number","number"])}function Vat(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{dtype:s,depth:i,onValue:a,offValue:u}=n,l=t.makeOutput([...o.shape,i],s),c=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(o.dataId).id;return yW(m,i,a,u,c),l}var bW={kernelName:Es,backendName:"wasm",setupFunc:Bat,kernelFunc:Vat};function Gat(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var wW={kernelName:Ri,backendName:"wasm",kernelFunc:Gat};function Wat(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return Gb({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,i=e[0].dtype;e.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=e.map(c=>{let p=Gb({inputs:{input:c},backend:t,attrs:{dim:o}});return a.push(p),p}),l=IN({inputs:u,backend:t,attrs:{axis:o}});return a.forEach(c=>t.disposeData(c.dataId)),l}var vW={kernelName:$i,backendName:"wasm",kernelFunc:Wat};var CW;function Uat(r){CW=r.wasm.cwrap(As,null,["number","array","number","number","array","array","number","number"])}function Hat(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+e.shape[g]+h[1]);if(b.sizeFromShape(e.shape)===0)return SN({backend:t,attrs:{shape:s,value:o,dtype:e.dtype}});let i=t.dataIdMap.get(e.dataId).id,a=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(a.dataId).id,c=new Uint8Array(new Int32Array(e.shape).buffer),p=n.map(h=>h[0]),m=n.map(h=>h[1]),f=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return CW(i,c,e.shape.length,kt[e.dtype],f,d,o,l),a}var Wb={kernelName:As,backendName:"wasm",kernelFunc:Hat,setupFunc:Uat};var qat=!1,IW=te(Ds,qat);var SW;function Kat(r){SW=r.wasm.cwrap(Rs,null,["number","number","number"])}function jat(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,a=s,u=n,l=u;u.dtype!=="float32"&&(l=En({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),a=t.dataIdMap.get(l.dataId).id);let c=t.makeOutput(n.shape,"float32"),p=t.dataIdMap.get(c.dataId).id;return SW(a,i,p),u.dtype!=="float32"&&t.disposeData(l.dataId),c}var NW={kernelName:Rs,backendName:"wasm",setupFunc:Kat,kernelFunc:jat};var kW;function Xat(r){kW=r.wasm.cwrap($s,null,["number","number","number","number"])}function Yat(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;kW(u,x,kt[y.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var TW={kernelName:$s,backendName:"wasm",setupFunc:Xat,kernelFunc:Yat};var Zat=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:i}=t,a=Cc(n,o,s,i),u=e.makeOutput([a.length],i);return e.typedArrayFromHeap(u).set(a),u},_W={kernelName:zl,backendName:"wasm",kernelFunc:Zat};var Jat=!0,EW=te(os,Jat);var AW=yt(Fs);var DW=yt(Os);var RW=yt(Ls);var $W;function Qat(r){$W=r.wasm.cwrap(Ms,null,["number","number","number","number","number","number","number","number","number","number"])}function tlt(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[c,p,m,f]=o.shape,d=[c,u,l,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=En({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let x=h.id,y=e.makeOutput(d,"float32");if(b.sizeFromShape(o.shape)===0)return y;let w=e.dataIdMap.get(y.dataId).id;return $W(x,c,p,m,f,u,l,s?1:0,i?1:0,w),g!=null&&e.disposeData(g.dataId),y}var FW={kernelName:Ms,backendName:"wasm",setupFunc:Qat,kernelFunc:tlt};var OW;function elt(r){OW=r.wasm.cwrap(Wa,null,["number","number","number","array","array","boolean"])}function rlt(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=t.makeOutput(o.shape,"float32"),u=t.dataIdMap.get(o.dataId),l;return u.dtype!=="float32"&&(l=En({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(l.dataId)),OW(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(a.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),l!=null&&t.disposeData(l.dataId),a}var PW={kernelName:Wa,backendName:"wasm",setupFunc:elt,kernelFunc:rlt};var MW;function nlt(r){MW=r.wasm.cwrap(Ps,null,["number","number","number","number","number","number","number","number","number","number"])}function olt(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[c,p,m,f]=o.shape,d=[c,u,l,f],h=e.makeOutput(d,"float32");if(b.sizeFromShape(o.shape)===0)return h;let g=e.dataIdMap.get(o.dataId),x;g.dtype!=="float32"&&(x=En({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(x.dataId));let y=g.id,w=e.dataIdMap.get(h.dataId).id;return MW(y,c,p,m,f,u,l,s?1:0,i?1:0,w),x!=null&&e.disposeData(x.dataId),h}var LW={kernelName:Ps,backendName:"wasm",setupFunc:nlt,kernelFunc:olt};var zW;function slt(r){zW=r.wasm.cwrap(Ga,null,["number","number","number","array","array","boolean"])}function ilt(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:i}=n,a=t.makeOutput(o.shape,"float32"),u=t.dataIdMap.get(o.dataId),l;return u.dtype!=="float32"&&(l=En({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(l.dataId)),zW(t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(s.dataId).id,t.dataIdMap.get(a.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),l!=null&&t.disposeData(l.dataId),a}var BW={kernelName:Ga,backendName:"wasm",setupFunc:slt,kernelFunc:ilt};var VW;function alt(r){VW=r.wasm.cwrap(zs,null,["number","array","number","array","number","number"])}function llt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,i=b.parseAxisParam(s,o.shape);if(o.shape.length===0)return Vc({inputs:{x:o},backend:t});let a=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(a.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(o.shape).buffer);VW(u,c,i.length,p,o.shape.length,l);let m=cr({inputs:{x:a},attrs:{shape:o.shape},backend:t});return t.disposeData(a.dataId),m}var GW={kernelName:zs,backendName:"wasm",kernelFunc:llt,setupFunc:alt};var WW;function ult(r){WW=r.wasm.cwrap(Ja,null,["number","number","number","number","number","number","number","number","array","number","number"])}function clt(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:i,center:a}=n,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,[p,m,f,d]=o.shape,[h,g]=I.getImageCenter(a,m,f),x=i===0,y=255,w=typeof i=="number"?[i,i,i,x?0:y]:[...i,y],v=new Uint8Array(new Int32Array(w).buffer);return WW(l,p,m,f,d,s,h,g,v,w.length,c),u}var UW={kernelName:Ja,backendName:"wasm",kernelFunc:clt,setupFunc:ult};var HW=yt(Bs);var qW=yt(Vs);var KW;function plt(r){KW=r.wasm.cwrap(Ua,null,["number","number","number","number","number","number","array","number","number"])}function mlt(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,a=e.makeOutput(i,s.dtype);if(b.sizeFromShape(i)===0)return a;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=hu.calculateShapes(s,o,i),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(p).buffer),y=e.dataIdMap.get(a.dataId).id;return KW(d,g,kt[s.dtype],u,l,c,x,m,y),a}var jW={kernelName:Ua,backendName:"wasm",setupFunc:plt,kernelFunc:mlt};var XW;function flt(r){XW=r.wasm.cwrap(qa,null,["number","number","number","number","number","number","bool","number"])}function dlt(r){let{inputs:e,backend:t,attrs:n}=r,{sortedSequence:o,values:s}=e,{side:i}=n;if(o.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${o.dtype} and ${s.dtype}`);let a=t.makeOutput(s.shape,"int32");function u(l){return t.dataIdMap.get(l.dataId).id}return XW(u(o),u(s),o.shape[0],o.shape[1],s.shape[1],kt[o.dtype],i==="left",u(a)),a}var YW={kernelName:qa,backendName:"wasm",setupFunc:flt,kernelFunc:dlt};var ZW;function hlt(r){ZW=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function glt(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,i=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(l.dataId).id,p=n.shape.length,m=o.shape.length,f=p===0||p>1||m===1?1:b.sizeFromShape(o.shape.slice(1));return ZW(i,a,u,f,c),l}var JW={kernelName:Oi,backendName:"wasm",kernelFunc:glt,setupFunc:hlt};var QW=yt(Gs);var tU;function xlt(r){tU=r.wasm.cwrap(qs,null,["number","number"])}function ylt(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return b.sizeFromShape(o.shape)===0||tU(n,s),o}var eU={kernelName:"Sigmoid",backendName:"wasm",setupFunc:xlt,kernelFunc:ylt};var rU=yt(Hs);var nU=yt(Ws);var oU=yt(Us);var sU=yt(Ks);function blt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:i}=n,a=b.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let _=1+s.length;_<o.shape.length;++_)u.push([0,0]);let l=Wb.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,s,a,!1),p=I.getPermuted(c.length,s.length,!1),m=I.getReshapedPermuted(l.shape,s,a,!1),h=cr({inputs:{x:l},backend:t,attrs:{shape:c}}),y=co({inputs:{x:h},backend:t,attrs:{perm:p}}),N=cr({inputs:{x:y},backend:t,attrs:{shape:m}});return t.disposeData(l.dataId),t.disposeData(h.dataId),t.disposeData(y.dataId),N}var iU={kernelName:Mi,backendName:"wasm",kernelFunc:blt};var aU;function wlt(r){aU=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function vlt(r){let{backend:e,inputs:t}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t,a=n.shape[0],u=n.shape[1],l=e.readSync(s.dataId)[0],c=[a+l,u],p=e.dataIdMap.get(n.dataId).id,m=e.dataIdMap.get(o.dataId).id,f=e.dataIdMap.get(i.dataId).id,d=e.makeOutput(c,n.dtype),h=e.dataIdMap.get(d.dataId).id,g=e.makeOutput(c.slice(0,1),o.dtype),x=e.dataIdMap.get(g.dataId).id,y=e.makeOutput([l],"bool"),w=e.dataIdMap.get(y.dataId).id,v=e.makeOutput([a],n.dtype),N=e.dataIdMap.get(v.dataId).id,_=e.makeOutput([4],"int32"),A=e.dataIdMap.get(_.dataId).id,D=aU(p,m,kt[o.dtype],a,l,u,f,h,x,w,N,A),F=e.readSync(_.dataId),O;switch(F[0]){case 1:{O=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(F[1]);break}case 2:{O=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(F[1],F[2]);break}case 3:O=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(F[1],F[2],F[3]);break;default:O=""}if(e.disposeData(_.dataId),O)throw e.disposeData(d.dataId),e.disposeData(g.dataId),e.disposeData(y.dataId),e.disposeData(v.dataId),new Error(O);let V=d,G=g;return D!==c[0]&&(V=Po({inputs:{x:d},attrs:{begin:0,size:[D,u]},backend:e}),G=Po({inputs:{x:g},attrs:{begin:0,size:D},backend:e}),e.disposeData(d.dataId),e.disposeData(g.dataId)),[V,G,y,v]}var lU={kernelName:Bl,backendName:"wasm",setupFunc:wlt,kernelFunc:vlt};var uU;function Clt(r){uU=r.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number"])}function Ilt(r){let{backend:e,inputs:t}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=n.shape[0],c=b.sizeFromShape(s.shape),p=e.makeOutput([l,c],n.dtype),m=e.dataIdMap.get(p.dataId).id,f=e.makeOutput([c],s.dtype),d=e.dataIdMap.get(f.dataId).id,h=e.makeOutput([3],"int32"),g=e.dataIdMap.get(h.dataId).id;uU(i,a,u,l,m,d,g);let x=e.readSync(h.dataId),y;switch(x[0]){case 0:{y=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(x[1],x[2]);break}case 1:{y=I.getSparseReshapeNegativeOutputDimErrorMessage(x[1],x[2]);break}case 2:y=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let w=Array.from(e.readSync(o.dataId)),v=Array.from(e.readSync(f.dataId));y=I.getSparseReshapeInputOutputMultipleErrorMessage(w,v);break}case 4:{let w=Array.from(e.readSync(o.dataId)),v=Array.from(e.readSync(f.dataId));y=I.getSparseReshapeInputOutputMismatchErrorMessage(w,v);break}default:y=""}if(e.disposeData(h.dataId),y)throw e.disposeData(p.dataId),e.disposeData(f.dataId),new Error(y);return[p,f]}var cU={kernelName:Ka,backendName:"wasm",setupFunc:Clt,kernelFunc:Ilt};var pU;function Ub(r){pU=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Hb(r,e){let{backend:t,inputs:n}=r,{data:o,indices:s,segmentIds:i}=n,a=s.shape[0],u=t.readSync(i.dataId,a-1,a)[0],c=a>0?u+1:0;if(c<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=o.shape.slice();p[0]=c;let m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.makeOutput(p,o.dtype),g=t.dataIdMap.get(h.dataId).id,x=t.makeOutput([4],"int32"),y=t.dataIdMap.get(x.dataId).id;pU(m,kt[o.dtype],o.shape[0],f,d,g,y,e,0);let w=t.readSync(x.dataId),v;switch(w[0]){case 0:{v=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{v=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:v=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(w[1],w[2]);break;case 3:v=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w[1],w[2],w[3]);break;default:v=""}if(t.disposeData(x.dataId),v)throw t.disposeData(h.dataId),new Error(v);return h}function Slt(r){return Hb(r,!0)}var mU={kernelName:Vl,backendName:"wasm",setupFunc:Ub,kernelFunc:Slt};function Nlt(r){return Hb(r,!1)}var fU={kernelName:Gl,backendName:"wasm",setupFunc:Ub,kernelFunc:Nlt};var dU;function klt(r){dU=r.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Tlt(r){let{backend:e,inputs:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:a}=n,u=e.makeOutput(a,i.dtype);if(b.sizeFromShape(a)===0)return u;let{sliceRank:l,numUpdates:c,sliceSize:p,strides:m,outputSize:f}=I.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,h=e.dataIdMap.get(s.dataId).id,g=e.dataIdMap.get(i.dataId).id,x=new Uint8Array(new Int32Array(m).buffer),y=e.dataIdMap.get(u.dataId).id;return dU(d,h,s.shape.length,g,kt[i.dtype],l,c,p,x,f,y),u}var hU={kernelName:ja,backendName:"wasm",setupFunc:klt,kernelFunc:Tlt};function _lt(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:i}=t,a=b.parseAxisParam(i,o.shape)[0],u=I.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),c=o.shape.slice();return u.map(p=>{let m=[...c];m[a]=p;let f=Po({inputs:{x:o},attrs:{begin:l,size:m},backend:n});return l[a]+=p,f})}var gU={kernelName:Li,backendName:"wasm",kernelFunc:_lt};var xU=yt(js);var yU=yt(Wl);var Elt=!0,bU=te(Zs,Elt);var wU;function Alt(r){wU=r.wasm.cwrap(ho,null,["number","number","number","number"])}function Dlt(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,i=e.dataIdMap.get(s.dataId).id,a=e.makeOutput(s.shape,s.dtype),u=e.dataIdMap.get(a.dataId).id;return wU(i,o,kt[s.dtype],u),a}var vU={kernelName:ho,backendName:"wasm",setupFunc:Alt,kernelFunc:Dlt};var CU;function Rlt(r){CU=r.wasm.cwrap(Xa,null,["number","array","number","array","array","array","array","array","number","number"])}function $lt(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:v}=Ve.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=cr({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=Ve.computeOutShape(y,w,v),A=Po({inputs:{x:o},backend:e,attrs:{begin:y,size:_}});N=cr({inputs:{x:A},backend:e,attrs:{shape:d}}),e.disposeData(A.dataId)}else{let _=e.makeOutput(f,"float32"),A=e.dataIdMap.get(o.dataId).id,D=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),F=new Uint8Array(new Int32Array(y).buffer),O=new Uint8Array(new Int32Array(w).buffer),V=new Uint8Array(new Int32Array(v).buffer),G=new Uint8Array(new Int32Array(f).buffer),W=new Uint8Array(new Int32Array(b.computeStrides(f)).buffer),H=e.dataIdMap.get(_.dataId).id;CU(A,D,o.shape.length,F,O,V,G,W,f.length,H),N=cr({inputs:{x:_},backend:e,attrs:{shape:d}}),e.disposeData(_.dataId)}return N}var IU={kernelName:Xa,backendName:"wasm",setupFunc:Rlt,kernelFunc:$lt};function Flt(r){let{backend:e,inputs:t,attrs:n}=r,{data:o,dataSplits:s}=t,{separator:i,nGramWidths:a,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:p}=n,m=e.readSync(o.dataId),f=e.readSync(s.dataId),[d,h]=Sc(m,f,i,a,u,l,c,p),g=e.makeOutput([d.length],"string"),x=e.dataIdMap.get(g.dataId);x.stringBytes=d;let y=e.makeOutput(s.shape,"int32");return e.typedArrayFromHeap(y).set(h),[g,y]}var SU={kernelName:Ul,backendName:"wasm",kernelFunc:Flt};function Olt(r){let{backend:e,inputs:t,attrs:n}=r,{input:o,delimiter:s}=t,{skipEmpty:i}=n,a=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,c,p]=Nc(a,u[0],i),m=c.length,f=e.makeOutput([m,2],"int32");e.typedArrayFromHeap(f).set(l);let h=e.makeOutput([m],"string"),g=e.dataIdMap.get(h.dataId);g.stringBytes=c;let x=e.makeOutput([2],"int32");return e.typedArrayFromHeap(x).set(p),[f,h,x]}var NU={kernelName:Hl,backendName:"wasm",kernelFunc:Olt};function Plt(r){let{backend:e,inputs:t,attrs:n}=r,{input:o}=t,{numBuckets:s}=n,i=e.readSync(o.dataId),a=kc(i,s),u=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(u).set(a),u}var kU={kernelName:ql,backendName:"wasm",kernelFunc:Plt};var Mlt=!0,TU=te(Js,Mlt);var _U;function Llt(r){_U=r.wasm.cwrap(Xs,null,["number","number","number","number"])}function zlt(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=t,a=e.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=xn(i,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w,d=I.getInnerMostAxes(d.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",d,l.shape.length);let[h,g]=I.computeOutAndReduceShapes(l.shape,d),x=b.sizeFromShape(g),y=e.makeOutput(h,l.dtype);if(b.sizeFromShape(l.shape)!==0){let w=e.dataIdMap.get(y.dataId).id;_U(u,x,kt[y.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=I.expandShapeToKeepDim(y.shape,m);y.shape=w}return y}var EU={kernelName:Xs,backendName:"wasm",setupFunc:Llt,kernelFunc:zlt};var AU=yt(Qs);var DU=yt(ti);var RU;function Blt(r){RU=r.wasm.cwrap(Ha,null,["number","number","number","number","number","number","array","number","number","number"])}function Vlt(r){let{backend:e,inputs:t,attrs:n}=r,{tensor:o,indices:s,updates:i}=t,{}=n,a=e.makeOutput(o.shape,o.dtype);if(b.sizeFromShape(o.shape)===0)return a;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=hu.calculateShapes(i,s,o.shape),d=e.dataIdMap.get(s.dataId).id,g=e.dataIdMap.get(i.dataId).id,y=e.dataIdMap.get(o.dataId).id,w=new Uint8Array(new Int32Array(p).buffer),v=e.dataIdMap.get(a.dataId).id;return RU(d,g,kt[i.dtype],u,l,c,w,m,v,y),a}var $U={kernelName:Ha,backendName:"wasm",setupFunc:Blt,kernelFunc:Vlt};var FU;function Glt(r){FU=r.wasm.cwrap(ro,null,["number","array","number","array","number","number"])}function Wlt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:i}=n,a=new Array(o.shape.length);for(let m=0;m<a.length;m++)a[m]=o.shape[m]*i[m];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(a).buffer),c=t.makeOutput(a,o.dtype),p=t.dataIdMap.get(c.dataId).id;return FU(s,u,o.shape.length,l,a.length,kt[c.dtype],p),c}var OU={kernelName:ro,backendName:"wasm",setupFunc:Glt,kernelFunc:Wlt};var PU;function Ult(r){PU=r.wasm.cwrap(Ya,null,["number","array","number","number","number","bool","number","number"])}var Hlt=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,i=e.dataIdMap.get(n.dataId).id,a=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=e.makeOutput(u,n.dtype),c=e.dataIdMap.get(l.dataId).id,p=e.makeOutput(u,"int32"),m=e.dataIdMap.get(p.dataId).id;return PU(i,a,n.shape.length,kt[n.dtype],o,s,c,m),[l,p]},MU={kernelName:Ya,backendName:"wasm",setupFunc:Ult,kernelFunc:Hlt};var LU;function qlt(r){LU=r.wasm.cwrap(Za,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Klt(r){let{backend:e,inputs:t,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[c,p,m,f]=o.shape,[d,h]=l??[p,m],g=[c,d,h,f],x=new Uint8Array(new Int32Array(b.computeStrides(o.shape)).buffer),y=new Uint8Array(new Int32Array(b.computeStrides(g)).buffer),w=e.makeOutput(g,o.dtype),v=e.dataIdMap.get(w.dataId).id,_=e.dataIdMap.get(o.dataId).id,D=e.dataIdMap.get(s.dataId).id,F=i==="nearest"?1:2,O;switch(a){case"constant":O=1;break;case"reflect":O=2;break;case"wrap":O=3;break;case"nearest":O=4;break;default:O=1;break}return LU(_,D,s.shape[0]>1,c,d,h,f,m,p,x,o.shape.length-1,y,g.length-1,F,O,u,v),w}var zU={kernelName:Za,backendName:"wasm",setupFunc:qlt,kernelFunc:Klt};function jlt(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e,{outputValues:i,outputShape:a,indices:u}=Tc(n.readSync(s.dataId),o,s.shape,s.dtype);return[n.makeOutput(a,s.dtype,void 0,i),n.makeOutput([u.length],"int32",void 0,u)]}var BU={kernelName:Kl,backendName:"wasm",kernelFunc:jlt};function Xlt(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape[s],a=o.shape.length,u=new Array(a-1),l=0;for(let f=0;f<a;f++)f!==s&&(u[l++]=o.shape[f]);let c=new Array(i),p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=Po({inputs:{x:o},attrs:{begin:p,size:m},backend:t});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:u}))}var VU={kernelName:zi,backendName:"wasm",kernelFunc:Xlt};function Ylt(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var GU={kernelName:Bi,backendName:"wasm",kernelFunc:Ylt};var Zlt=[NB,kB,TB,_B,EB,DB,PB,LB,zB,BB,VB,GB,WB,UB,HB,KB,QB,XB,ZB,rV,oV,iV,aV,lV,uV,cV,mV,fV,hV,xV,bV,vV,IV,SV,NV,_V,AV,RV,FV,PV,LV,BV,GV,UV,qV,KV,XV,YV,ZV,JV,QV,tG,eG,nG,oG,sG,aG,uG,pG,fG,hG,gG,xG,RB,yG,bG,wG,CG,IG,SG,kG,_G,TG,EG,AG,DG,RG,FG,PG,LG,zG,VG,WG,HG,KG,XG,ZG,QG,tW,nW,aW,lW,uW,cW,mW,dW,gW,xW,bW,wW,vW,Wb,IW,NW,TW,_W,EW,AW,DW,RW,tV,FW,PW,LW,BW,GW,UW,HW,qW,jW,YW,JW,QW,eU,rU,nU,oU,nV,sW,sU,iU,lU,cU,mU,fU,hU,gU,xU,yU,bU,vU,IU,SU,NU,kU,TU,EU,AU,DU,$U,OU,MU,zU,FB,BU,VU,GU];for(let r of Zlt)hp(r);var kN=z();kN.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});kN.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(kN.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var FN=Sl(qU()),JU=Sl(jU()),ON=Sl(XU());var YU=FN.default||FN,Jlt=ON.default||ON,xd=class extends Lo{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(rut),nut=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new da(this,Mn())}write(e,t,n){let o={id:this.dataIdNextNumber++};return this.move(o,e,t,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=b.now();return e(),{kernelMs:b.now()-t}}move(e,t,n,o,s){let i=this.dataIdNextNumber++;if(o==="string"){let c=t;this.dataIdMap.set(e,{id:i,stringBytes:c,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let a=b.sizeFromShape(n),u=a*b.bytesPerElement(o),l=this.wasm._malloc(u)>>>0;this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(i,a,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:o,dtype:s,shape:i,stringBytes:a}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=a.length)?a:a.slice(t,n);t=t||0,n=n||b.sizeFromShape(i);let u=b.bytesPerElement(s),l=this.wasm.HEAPU8.slice(o+t*u,o+n*u);return tut(l.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,o){let s;if(n==null)s=this.write(o??null,e,t);else{let i=this.dataIdNextNumber++;s={id:i},this.dataIdMap.set(s,{id:i,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=b.sizeFromShape(e);this.wasm.tfjs.registerTensor(i,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=b.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,i);case"int32":return new Int32Array(o,s,i);case"bool":return new Uint8Array(o,s,i);default:throw new Error(`Unknown dtype ${t}`)}}};function Qlt(r){return(e,t)=>(b.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance,s.module)})})}),{})}function ZU(r,e,t){if($N!=null)return $N;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),gd!=null&&gd[n]!=null?gd[n]:t+n}async function QU(){let[r,e]=await Promise.all([z().getAsync("WASM_HAS_SIMD_SUPPORT"),z().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(a,u)=>{if(a.endsWith(".worker.js")){let l=JU.wasmWorkerContents.replace(/\n/g,"\\n"),c=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(c)}return a.endsWith(".wasm")?ZU(r,e,hd??u):u+a},t4&&(o.instantiateWasm=Qlt(ZU(r,e,hd??"")));let s=!1;o.onAbort=()=>{if(s||jb)return;jb=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;e&&r&&$N==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+YU.toString()],{type:"text/javascript"}),i=YU(o)):i=Jlt(o),i.then(a=>{s=!0,jb=!1;let u=null;a.tfjs={init:a.cwrap("init",null,[]),initWithThreadsCount:a.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:a.cwrap("get_threads_count","number",[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",u,["number"]),dispose:a.cwrap("dispose",u,[])},t({wasm:a})}).catch(n)})}function tut(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var eut=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],$N=null,hd=null,gd={},jb=!1,t4=!1;function PN(r,e=!1){if(jb)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")hd=r;else{gd=r;let t=eut.filter(n=>gd[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}t4=e}var rut=-1,nut=-1;var out=2;Cp("wasm",async()=>{let{wasm:r}=await QU();return new xd(r)},out);function qm(r,e,t,n){function o(s){return s instanceof t?s:new t(function(i){i(s)})}return new(t||(t=Promise))(function(s,i){function a(c){try{l(n.next(c))}catch(p){i(p)}}function u(c){try{l(n.throw(c))}catch(p){i(p)}}function l(c){c.done?s(c.value):o(c.value).then(a,u)}l((n=n.apply(r,e||[])).next())})}function Km(r,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},n,o,s,i;return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(c){return u([l,c])}}function u(l){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,o&&(s=l[0]&2?o.return:l[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,l[1])).done)return s;switch(o=0,s&&(l=[l[0]&2,s.value]),l[0]){case 0:case 1:s=l;break;case 4:return t.label++,{value:l[1],done:!1};case 5:t.label++,o=l[1],l=[0];continue;case 7:l=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){t=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){t.label=l[1];break}if(l[0]===6&&t.label<s[1]){t.label=s[1],s=l;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(l);break}s[2]&&t.ops.pop(),t.trys.pop();continue}l=e.call(r,t)}catch(c){l=[6,c],o=0}finally{n=s=0}if(l[0]&5)throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}}var sut=function(r){r.startEndTensor.dispose(),r.startPoint.dispose(),r.endPoint.dispose()},MN=function(r){return{startEndTensor:r,startPoint:vt(r,[0,0],[-1,2]),endPoint:vt(r,[0,2],[-1,2])}},iut=function(r,e){var t=R(r.startPoint,e),n=R(r.endPoint,e),o=Ju([t,n],1);return MN(o)};var aut={strides:[8,16],anchors:[2,6]},e4=6;function lut(r,e,t){for(var n=[],o=0;o<t.strides.length;o++)for(var s=t.strides[o],i=Math.floor((e+s-1)/s),a=Math.floor((r+s-1)/s),u=t.anchors[o],l=0;l<i;l++)for(var c=s*(l+.5),p=0;p<a;p++)for(var m=s*(p+.5),f=0;f<u;f++)n.push([m,c]);return n}function uut(r,e,t){var n=vt(r,[0,1],[-1,2]),o=K(n,e),s=vt(r,[0,3],[-1,2]),i=at(s,t),a=at(o,t),u=at(i,2),l=nt(a,u),c=K(a,u),p=R(l,t),m=R(c,t),f=1;return Ju([p,m],f)}function cut(r){return r instanceof zt?[r.shape[0],r.shape[1]]:[r.height,r.width]}function r4(r,e){var t,n,o;if(r.topLeft instanceof zt&&r.bottomRight instanceof zt){var s=B(function(){return[re([vt(nt(e-1,r.topLeft),0,1),vt(r.topLeft,1,1)]),re([nt(e-1,vt(r.bottomRight,0,1)),vt(r.bottomRight,1,1)])]}),i=s[0],a=s[1];t=i,n=a,r.landmarks!=null&&(o=B(function(){var h=nt(Te([e-1,0]),r.landmarks),g=Te([1,-1]),x=R(h,g);return x}))}else{var u=r.topLeft,l=u[0],c=u[1],p=r.bottomRight,m=p[0],f=p[1];t=[e-1-l,c],n=[e-1-m,f],r.landmarks!=null&&(o=r.landmarks.map(function(h){return[e-1-h[0],h[1]]}))}var d={topLeft:t,bottomRight:n};return o!=null&&(d.landmarks=o),r.probability!=null&&(d.probability=r.probability instanceof zt?r.probability.clone():r.probability),d}function n4(r,e){return B(function(){var t;return r.hasOwnProperty("box")?t=r.box:t=r,Fr(iut(t,e).startEndTensor)})}var put=function(){function r(e,t,n,o,s,i){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=o,this.anchorsData=lut(t,n,aut),this.anchors=Co(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=Te([t,n]),this.iouThreshold=s,this.scoreThreshold=i}return r.prototype.getBoundingBoxes=function(e,t,n){return n===void 0&&(n=!0),qm(this,void 0,void 0,function(){var o,s,i,a,u,l,c,p,m,f,d,h,g,x,y=this;return Km(this,function(w){switch(w.label){case 0:return o=B(function(){var v=Hr.resizeBilinear(e,[y.width,y.height]),N=R(nt(at(v,255),.5),2),_=y.blazeFaceModel.predict(N),A=Fr(_),D=uut(A,y.anchors,y.inputSize),F=vt(A,[0,0],[-1,1]),O=Fr(Dr(F));return[A,D,O]}),s=o[0],i=o[1],a=o[2],u=console.warn,console.warn=function(){},l=Hr.nonMaxSuppression(i,a,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=u,[4,l.array()];case 1:return c=w.sent(),l.dispose(),p=c.map(function(v){return vt(i,[v,0],[1,-1])}),t?[3,3]:[4,Promise.all(p.map(function(v){return qm(y,void 0,void 0,function(){var N;return Km(this,function(_){switch(_.label){case 0:return[4,v.array()];case 1:return N=_.sent(),v.dispose(),[2,N]}})})}))];case 2:p=w.sent(),w.label=3;case 3:for(m=e.shape[1],f=e.shape[2],t?d=at([f,m],this.inputSize):d=[f/this.inputSizeData[0],m/this.inputSizeData[1]],h=[],g=function(v){var N=p[v],_=B(function(){var A=N instanceof zt?MN(N):MN(Co(N));if(!n)return A;var D=c[v],F;t?F=vt(y.anchors,[D,0],[1,2]):F=y.anchorsData[D];var O=$(Fr(vt(s,[D,e4-1],[1,-1])),[e4,-1]),V=vt(a,[D],[1]);return{box:A,landmarks:O,probability:V,anchor:F}});h.push(_)},x=0;x<p.length;x++)g(x);return i.dispose(),a.dispose(),s.dispose(),[2,{boxes:h,scaleFactor:d}]}})})},r.prototype.estimateFaces=function(e,t,n,o){return t===void 0&&(t=!1),n===void 0&&(n=!1),o===void 0&&(o=!0),qm(this,void 0,void 0,function(){var s,i,a,u,l,c,p=this;return Km(this,function(m){switch(m.label){case 0:return s=cut(e),i=s[1],a=B(function(){return e instanceof zt||(e=Nf.fromPixels(e)),Le(Q(e,"float32"),0)}),[4,this.getBoundingBoxes(a,t,o)];case 1:return u=m.sent(),l=u.boxes,c=u.scaleFactor,a.dispose(),t?[2,l.map(function(f){var d=n4(f,c),h={topLeft:vt(d,[0],[2]),bottomRight:vt(d,[2],[2])};if(o){var g=f,x=g.landmarks,y=g.probability,w=g.anchor,v=R(K(x,w),c);h.landmarks=v,h.probability=y}return n&&(h=r4(h,i)),h})]:[2,Promise.all(l.map(function(f){return qm(p,void 0,void 0,function(){var d,h,y,g,x,y,w,v,N,_,A,D,F=this;return Km(this,function(O){switch(O.label){case 0:return d=n4(f,c),o?[3,2]:[4,d.array()];case 1:return y=O.sent(),h={topLeft:y.slice(0,2),bottomRight:y.slice(2)},[3,4];case 2:return[4,Promise.all([f.landmarks,d,f.probability].map(function(V){return qm(F,void 0,void 0,function(){return Km(this,function(G){return[2,V.array()]})})}))];case 3:g=O.sent(),x=g[0],y=g[1],w=g[2],v=f.anchor,N=c,_=N[0],A=N[1],D=x.map(function(V){return[(V[0]+v[0])*_,(V[1]+v[1])*A]}),h={topLeft:y.slice(0,2),bottomRight:y.slice(2),landmarks:D,probability:w},sut(f.box),f.landmarks.dispose(),f.probability.dispose(),O.label=4;case 4:return d.dispose(),n&&(h=r4(h,i)),[2,h]}})})}))]}})})},r.prototype.dispose=function(){this.blazeFaceModel.dispose(),this.anchors.dispose(),this.inputSize.dispose()},r}();var mut="https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1";function o4(r){var e=r===void 0?{}:r,t=e.maxFaces,n=t===void 0?10:t,o=e.inputWidth,s=o===void 0?128:o,i=e.inputHeight,a=i===void 0?128:i,u=e.iouThreshold,l=u===void 0?.3:u,c=e.scoreThreshold,p=c===void 0?.75:c,m=e.modelUrl;return qm(this,void 0,void 0,function(){var f,d;return Km(this,function(h){switch(h.label){case 0:return m==null?[3,2]:[4,Mx(m)];case 1:return f=h.sent(),[3,4];case 2:return[4,Mx(mut,{fromTFHub:!0})];case 3:f=h.sent(),h.label=4;case 4:return d=new put(f,s,a,n,l,p),[2,d]}})})}var Xb=class r{constructor(e,t){this.el=e;this.platformId=t;this.isBrowser=ek(t)}loadingElement;canvasElement;videoElement;model;imgUrl="https://avatars3.githubusercontent.com/u/3065761";strokeStyle="yellow";lineWidth=10;wasmPath=nk.TFJS_WASM_PATH;isStreaming=!1;isReadyToPredict=!1;canPredictVideo=!1;isBrowser;async ngOnInit(){if(this.isBrowser){if(this.canvasElement=this.el.nativeElement.shadowRoot.querySelector("#canvas"),this.loadingElement=this.el.nativeElement.shadowRoot.querySelector("#loading"),this.videoElement=this.el.nativeElement.shadowRoot.querySelector("#video"),PN(this.wasmPath),!await ZC("wasm")||!this.canvasElement)return;this.model=await o4(),this.isReadyToPredict=!0,this.handleImageUrlPrediction(this.canvasElement,this.imgUrl),this.el.nativeElement.shadowRoot.querySelector("#buttons-section").style.display="flex";let n=(await navigator?.mediaDevices?.enumerateDevices()??[]).filter(o=>o.kind==="videoinput").length>0;this.el.nativeElement.shadowRoot.querySelector("#startWebcam").disabled=!n}}async drawPrediction(e,t){let o=await this.model?.estimateFaces(t,!1)??[];if(e&&o.length>0){e.strokeStyle=this.strokeStyle,e.lineWidth=this.lineWidth;for(let s=0;s<o.length;s++){let i=o[s].topLeft,a=o[s].bottomRight,u=[a[0]-i[0],a[1]-i[1]],l=i[0],c=i[1],p=u[0],m=u[1];e.strokeRect(l,c,p,m)}}}getImage(e){return new Promise((t,n)=>{this.loadingElement.style.display="flex";let o=new Image;o.crossOrigin="Anonymous",o.src=e,o.addEventListener("error",s=>n(s)),o.addEventListener("load",s=>t(o))})}requestVideoStream(){return new Promise(e=>{navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then(n=>{if(!this.videoElement)throw Error("HTMLVideoElement not found.");this.videoElement.srcObject=n,this.videoElement.play()}).catch(n=>{console.error(n),e(!1)}),this.videoElement?.addEventListener("canplay",n=>{this.isStreaming||e(!0)},!1)})}handleDragEnter(e){e.preventDefault()}handleDragOver(e){e.preventDefault()}handleDragLeave(e){e.preventDefault()}async handleImageDropPrediction(e){if(e.preventDefault(),!this.canvasElement)return;let t=e.dataTransfer?.files??[];for(let n=0;n<(t?.length??0);n++){let o=await createImageBitmap(t[n]),s=this.getCanvasContext(this.canvasElement,{image:o}),i=new Image;i.addEventListener("load",async()=>{this.handleCanvasStylesForImages(i.width),await this.drawPrediction(s,i)}),i.src=this.canvasElement.toDataURL()}}handleCanvasStylesForVideo(){this.canvasElement&&(this.canvasElement.style.width="100%",this.canvasElement.style.height="auto")}handleCanvasStylesForImages(e){this.canvasElement&&(this.canvasElement.style.display="initial",this.canvasElement.style.width="100%",this.canvasElement.style.height="auto")}async handleImageUrlPrediction(e,t){let n=await this.getImage(t);this.handleCanvasStylesForImages(n.width),this.loadingElement.style.display="none";let o=this.getCanvasContext(e,{image:n});await this.drawPrediction(o,n)}handleVideoPrediction(e,t){this.canPredictVideo=!0,this.handleCanvasStylesForVideo();let n,o=async()=>{let s=this.getCanvasContext(e,{video:t});if(await this.drawPrediction(s,t),!this.canPredictVideo){cancelAnimationFrame(n);return}setTimeout(()=>{n=requestAnimationFrame(o)})};n=requestAnimationFrame(o)}getCanvasContext(e,{image:t,video:n}){let o=e.getContext("2d"),s=n||t,i=n?n.videoWidth:t.width,a=n?n.videoHeight:t.height;return e.width=i,e.height=a,o&&o.drawImage(s,0,0,i,a),o}clearCanvas(){if(!this.canvasElement)return;let e=this.canvasElement,t=e?.getContext("2d");t&&t.clearRect(0,0,e.width,e.height)}fillCanvas(e="#000000"){if(!this.canvasElement)return;let t=this.canvasElement,n=t?.getContext("2d");n&&(n.fillStyle=e,n.fillRect(0,0,t.width,t.height))}startPredictions(){!this.canvasElement||!this.videoElement||(this.handleVideoPrediction(this.canvasElement,this.videoElement),this.canvasElement.style.display="flex",this.videoElement.style.display="none",this.el.nativeElement.shadowRoot.querySelector("#startPredictions").disabled=!0,this.el.nativeElement.shadowRoot.querySelector("#stopPredictions").disabled=!1)}stopPredictions(){!this.canvasElement||!this.videoElement||(this.canPredictVideo=!1,this.canvasElement.style.display="none",this.videoElement.style.display="flex",this.el.nativeElement.shadowRoot.querySelector("#stopPredictions").disabled=!0)}async startWebcam(e){if(e.preventDefault(),this.isStreaming||!this.canvasElement||!this.videoElement)return;this.loadingElement.style.display="flex",this.canvasElement.style.display="none",this.el.nativeElement.shadowRoot.querySelector("#loading-section").style.flex=100;let t=await this.requestVideoStream();this.loadingElement.style.display="none",this.canvasElement.style.display=t?"none":"flex",this.videoElement.style.display=t?"flex":"none",this.el.nativeElement.shadowRoot.querySelector("#stopWebcam").disabled=!t,this.el.nativeElement.shadowRoot.querySelector("#startPredictions").disabled=!t,this.isStreaming=t}stopWebcam(e){if(e.preventDefault(),!this.isStreaming||!this.videoElement)return;this.videoElement.srcObject.getTracks().forEach(n=>{n.stop()}),this.isStreaming=!1,setTimeout(async()=>{await this.stopPredictions()}),setTimeout(()=>{!this.canvasElement||!this.videoElement||(this.videoElement.style.display="none",this.canvasElement.style.display="flex",this.el.nativeElement.shadowRoot.querySelector("#loading-section").style.flex=1,this.el.nativeElement.shadowRoot.querySelector("#stopWebcam").disabled=!0,this.el.nativeElement.shadowRoot.querySelector("#startPredictions").disabled=!0,this.el.nativeElement.shadowRoot.querySelector("#stopPredictions").disabled=!0)}),setTimeout(()=>{this.canvasElement&&this.handleImageUrlPrediction(this.canvasElement,this.imgUrl)})}static \u0275fac=function(t){return new(t||r)(TC(YN),TC(ZN))};static \u0275cmp=Hd({type:r,selectors:[["x-face-detector"]],decls:19,vars:0,consts:[[1,"face-detector"],["id","buttons-section"],["id","buttons"],["id","startWebcam","disabled","",3,"click"],["id","stopWebcam","disabled","",3,"click"],["id","startPredictions","disabled","",3,"click"],["id","stopPredictions","disabled","",3,"click"],["id","canvas-section",3,"drop","dragenter","dragover","dragleave"],[1,"flex-section"],["id","loading-section"],["id","loading"],["id","canvas"],["id","video"]],template:function(t,n){t&1&&(Fu(0,"section",0)(1,"section",1)(2,"section",2)(3,"button",3),Xc("click",function(s){return n.startWebcam(s)}),$e(4," start webcam "),Nl(),Fu(5,"button",4),Xc("click",function(s){return n.stopWebcam(s)}),$e(6," stop webcam "),Nl(),Fu(7,"button",5),Xc("click",function(){return n.startPredictions()}),$e(8," start predictions "),Nl(),Fu(9,"button",6),Xc("click",function(){return n.stopPredictions()}),$e(10," stop predictions "),Nl()()(),Fu(11,"section",7),Xc("drop",function(s){return n.handleImageDropPrediction(s)})("dragenter",function(s){return n.handleDragEnter(s)})("dragover",function(s){return n.handleDragOver(s)})("dragleave",function(s){return n.handleDragLeave(s)}),qd(12,"section",8),Fu(13,"section",9)(14,"section",10),$e(15,"Loading..."),Nl(),qd(16,"canvas",11)(17,"video",12),Nl(),qd(18,"section",8),Nl()())},dependencies:[Kd],styles:[`:where(html,.light-theme,.dark-theme),.tokens,:host{--md-sys-comp-button-background-color: var(--md-sys-color-surface);--md-sys-comp-button-color: var(--md-sys-color-primary);--md-comp-button-container-height: 40px;--md-comp-button-container-shape: 20px;--md-comp-text-button-container-elevation: var(--md-sys-elevation-level0);--md-comp-text-button-focus-state-layer-opacity: var( --md-sys-state-focus-state-layer-opacity );--md-comp-text-button-hover-state-layer-opacity: var( --md-sys-state-hover-state-layer-opacity );--md-comp-text-button-label-text-tracking: var( --md-sys-typescale-label-large-tracking );--md-comp-text-button-label-text-weight: var( --md-sys-typescale-label-large-weight );--md-comp-text-button-label-text-size: var( --md-sys-typescale-label-large-size );--md-comp-text-button-label-text-line-height: var( --md-sys-typescale-label-large-line-height );--md-comp-text-button-label-text-font: var( --md-sys-typescale-label-large-font );--md-comp-text-button-with-icon-icon-size: 18px;--md-comp-text-button-container-height: 40px;--md-comp-text-button-container-shape: var(--md-sys-shape-corner-full);--md-comp-text-button-pressed-state-layer-opacity: var( --md-sys-state-pressed-state-layer-opacity );--md-comp-text-button-with-icon-disabled-icon-opacity: .3799999952316284;--md-comp-text-button-disabled-label-text-opacity: .3799999952316284;--md-comp-filled-button-dragged-state-layer-opacity: var( --md-sys-state-dragged-state-layer-opacity );--md-comp-filled-button-dragged-container-elevation: var( --md-sys-elevation-level3 );--md-comp-filled-button-focus-state-layer-opacity: var( --md-sys-state-focus-state-layer-opacity );--md-comp-filled-button-focus-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-button-hover-state-layer-opacity: var( --md-sys-state-hover-state-layer-opacity );--md-comp-filled-button-hover-container-elevation: var( --md-sys-elevation-level1 );--md-comp-filled-button-label-text-tracking: var( --md-sys-typescale-label-large-tracking );--md-comp-filled-button-label-text-weight: var( --md-sys-typescale-label-large-weight );--md-comp-filled-button-label-text-size: var( --md-sys-typescale-label-large-size );--md-comp-filled-button-label-text-line-height: var( --md-sys-typescale-label-large-line-height );--md-comp-filled-button-label-text-font: var( --md-sys-typescale-label-large-font );--md-comp-filled-button-with-icon-icon-size: 18px;--md-comp-filled-button-container-elevation: var(--md-sys-elevation-level0);--md-comp-filled-button-container-height: 40px;--md-comp-filled-button-container-shape: var(--md-sys-shape-corner-full);--md-comp-filled-button-pressed-state-layer-opacity: var( --md-sys-state-pressed-state-layer-opacity );--md-comp-filled-button-pressed-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-button-with-icon-disabled-icon-opacity: .3799999952316284;--md-comp-filled-button-disabled-label-text-opacity: .3799999952316284;--md-comp-filled-button-disabled-container-opacity: .11999999731779099;--md-comp-filled-button-disabled-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-tonal-button-pressed-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-tonal-button-pressed-state-layer-opacity: var( --md-sys-state-pressed-state-layer-opacity );--md-comp-filled-tonal-button-focus-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-tonal-button-focus-state-layer-opacity: var( --md-sys-state-focus-state-layer-opacity );--md-comp-filled-tonal-button-hover-container-elevation: var( --md-sys-elevation-level1 );--md-comp-filled-tonal-button-hover-state-layer-opacity: var( --md-sys-state-hover-state-layer-opacity );--md-comp-filled-tonal-button-with-icon-disabled-icon-opacity: .3799999952316284;--md-comp-filled-tonal-button-disabled-label-text-opacity: .3799999952316284;--md-comp-filled-tonal-button-disabled-container-opacity: .11999999731779099;--md-comp-filled-tonal-button-disabled-container-elevation: var( --md-sys-elevation-level0 );--md-comp-filled-tonal-button-with-icon-icon-size: 18px;--md-comp-filled-tonal-button-label-text-weight: var( --md-sys-typescale-label-large-weight );--md-comp-filled-tonal-button-label-text-tracking: var( --md-sys-typescale-label-large-tracking );--md-comp-filled-tonal-button-label-text-size: var( --md-sys-typescale-label-large-size );--md-comp-filled-tonal-button-label-text-line-height: var( --md-sys-typescale-label-large-line-height );--md-comp-filled-tonal-button-label-text-font: var( --md-sys-typescale-label-large-font );--md-comp-filled-tonal-button-container-shape: var( --md-sys-shape-corner-full );--md-comp-filled-tonal-button-container-height: 40px;--md-comp-filled-tonal-button-container-elevation: var( --md-sys-elevation-level0 );--md-comp-outlined-button-container-elevation: var(--md-sys-elevation-level0);--md-comp-outlined-button-focus-state-layer-opacity: var( --md-sys-state-focus-state-layer-opacity );--md-comp-outlined-button-hover-state-layer-opacity: var( --md-sys-state-hover-state-layer-opacity );--md-comp-outlined-button-label-text-tracking: var( --md-sys-typescale-label-large-tracking );--md-comp-outlined-button-label-text-weight: var( --md-sys-typescale-label-large-weight );--md-comp-outlined-button-label-text-size: var( --md-sys-typescale-label-large-size );--md-comp-outlined-button-label-text-line-height: var( --md-sys-typescale-label-large-line-height );--md-comp-outlined-button-label-text-font: var( --md-sys-typescale-label-large-font );--md-comp-outlined-button-with-icon-icon-size: 18px;--md-comp-outlined-button-outline-width: 1px;--md-comp-outlined-button-container-height: 40px;--md-comp-outlined-button-container-shape: var(--md-sys-shape-corner-full);--md-comp-outlined-button-pressed-state-layer-opacity: var( --md-sys-state-pressed-state-layer-opacity );--md-comp-outlined-button-with-icon-disabled-icon-opacity: .3799999952316284;--md-comp-outlined-button-disabled-label-text-opacity: .3799999952316284;--md-comp-outlined-button-disabled-outline-opacity: .11999999731779099;--md-comp-elevated-button-focus-container-elevation: var( --md-sys-elevation-level1 );--md-comp-elevated-button-focus-state-layer-opacity: var( --md-sys-state-focus-state-layer-opacity );--md-comp-elevated-button-hover-container-elevation: var( --md-sys-elevation-level2 );--md-comp-elevated-button-hover-state-layer-opacity: var( --md-sys-state-hover-state-layer-opacity );--md-comp-elevated-button-label-text-tracking: var( --md-sys-typescale-label-large-tracking );--md-comp-elevated-button-label-text-weight: var( --md-sys-typescale-label-large-weight );--md-comp-elevated-button-label-text-size: var( --md-sys-typescale-label-large-size );--md-comp-elevated-button-label-text-line-height: var( --md-sys-typescale-label-large-line-height );--md-comp-elevated-button-label-text-font: var( --md-sys-typescale-label-large-font );--md-comp-elevated-button-with-icon-icon-size: 18px;--md-comp-elevated-button-container-elevation: var(--md-sys-elevation-level1);--md-comp-elevated-button-container-height: 40px;--md-comp-elevated-button-container-shape: var(--md-sys-shape-corner-full);--md-comp-elevated-button-pressed-container-elevation: var( --md-sys-elevation-level1 );--md-comp-elevated-button-pressed-state-layer-opacity: var( --md-sys-state-pressed-state-layer-opacity );--md-comp-elevated-button-with-icon-disabled-icon-opacity: .3799999952316284;--md-comp-elevated-button-disabled-label-text-opacity: .3799999952316284;--md-comp-elevated-button-disabled-container-elevation: var( --md-sys-elevation-level0 );--md-comp-elevated-button-disabled-container-opacity: .11999999731779099}:where(.button,button):not(.icon-button,.fab,.chip){--state-disabled-opacity: .3799999952316284;--_bg-color: var(--md-sys-comp-button-background-color);--_fg-color: var(--md-sys-comp-button-color);--_height: var(--md-comp-button-container-height);--_shape: var(--md-comp-button-container-shape);-webkit-tap-highlight-color:transparent;display:flex;flex-direction:row;align-items:center;justify-content:center;border:none;text-decoration:none;background-color:var(--_bg-color);color:var(--_fg-color);height:var(--_height);padding:0 24px;border-radius:var(--_shape);box-sizing:border-box;position:relative;cursor:pointer;gap:8px;white-space:nowrap;-webkit-text-decoration:var(--md-sys-typescale-label-large-text-decoration);text-decoration:var(--md-sys-typescale-label-large-text-decoration);text-transform:var(--md-sys-typescale-label-large-text-transform);line-height:var(--md-sys-typescale-label-large-line-height);letter-spacing:var(--md-sys-typescale-label-large-tracking);font-size:var(--md-sys-typescale-label-large-size);font-weight:var(--md-sys-typescale-label-large-weight);font-family:var(--md-sys-typescale-label-large-font);box-shadow:var(--md-sys-elevation-1);transition:box-shadow .2s ease-in-out}:where(.button,button):not(.icon-button,.fab,.chip)[label]{content:attr(label)}:where(.button,button):not(.icon-button,.fab,.chip) :where(i,.material-icons){margin-left:-8px;font-size:18px}:where(.button,button):not(.icon-button,.fab,.chip) :where(i,.material-icons):only-child{margin-left:0;margin-right:0}:where(.button,button):not(.icon-button,.fab,.chip) a{text-decoration:none}:where(.button,button):not(.icon-button,.fab,.chip) a:hover{text-decoration:none}:where(.button,button):not(.icon-button,.fab,.chip) a:focus{text-decoration:none}:where(.button,button):not(.icon-button,.fab,.chip):where(:hover,.hover){box-shadow:var(--md-sys-elevation-3)}:where(.button,button):not(.icon-button,.fab,.chip):where(:active,.active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip):where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip)[disabled]{cursor:default;box-shadow:var(--md-sys-elevation-0);background-color:rgb(var(--md-sys-color-on-surface-rgb)/.12);color:rgb(var(--md-sys-color-on-surface-rgb)/.38)}:where(.button,button):not(.icon-button,.fab,.chip).text{box-shadow:var(--md-sys-elevation-0);height:var(--md-comp-text-button-container-height);--md-sys-comp-button-background-color: transparent;--md-sys-comp-button-color: var(--md-sys-color-primary);--md-comp-button-container-height: var( --md-comp-text-button-container-height );--state-hover-opacity: var(--md-comp-text-button-hover-state-layer-opacity);--state-focus-opacity: var(--md-comp-text-button-focus-state-layer-opacity);--state-active-opacity: var( --md-comp-text-button-pressed-state-layer-opacity );--state-disabled-opacity: var( --md-comp-text-button-disabled-unselected-outline-opacity );--state-outline-disabled-opacity: var( --md-comp-text-button-disabled-outline-opacity )}:where(.button,button):not(.icon-button,.fab,.chip).text:where(:hover,.hover){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip).text:where(:active,.active){box-shadow:var(--md-sys-elevation-0)}:where(.button,button):not(.icon-button,.fab,.chip).text:where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip).text[disabled]{box-shadow:none;color:rgb(var(--md-sys-color-on-surface-rgb)/.38)}:where(.button,button):not(.icon-button,.fab,.chip).filled{box-shadow:var(--md-sys-elevation-0);--md-sys-comp-button-background-color: var(--md-sys-color-primary);--md-sys-comp-button-color: var(--md-sys-color-on-primary);--md-comp-button-container-height: var( --md-comp-filled-button-container-height );--state-hover-opacity: var(--md-comp-filled-button-hover-state-layer-opacity);--state-focus-opacity: var(--md-comp-filled-button-focus-state-layer-opacity);--state-active-opacity: var( --md-comp-filled-button-pressed-state-layer-opacity );--state-disabled-opacity: var( --md-comp-filled-button-disabled-unselected-outline-opacity );--state-outline-disabled-opacity: var( --md-comp-filled-button-disabled-outline-opacity )}:where(.button,button):not(.icon-button,.fab,.chip).filled:where(:hover,.hover){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip).filled:where(:active,.active){box-shadow:var(--md-sys-elevation-0)}:where(.button,button):not(.icon-button,.fab,.chip).filled:where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip).filled[disabled]{box-shadow:var(--md-sys-elevation-0);background-color:rgb(var(--md-sys-color-on-surface-rgb)/.12);color:rgb(var(--md-sys-color-on-surface-rgb)/.38)}:where(.button,button):not(.icon-button,.fab,.chip).filled-tonal{--md-sys-comp-button-background-color: var( --md-sys-color-secondary-container );--md-sys-comp-button-color: var(--md-sys-color-on-secondary-container);--md-comp-button-container-height: var( --md-comp-filled-tonal-button-container-height );background-color:var(--md-sys-comp-button-background-color);color:var(--md-sys-comp-button-color);box-shadow:var(--md-sys-elevation-0);--state-hover-opacity: var( --md-comp-filled-tonal-button-hover-state-layer-opacity );--state-focus-opacity: var( --md-comp-filled-tonal-button-focus-state-layer-opacity );--state-active-opacity: var( --md-comp-filled-tonal-button-pressed-state-layer-opacity );--state-disabled-opacity: var( --md-comp-filled-tonal-button-disabled-unselected-outline-opacity );--state-outline-disabled-opacity: var( --md-comp-filled-tonal-button-disabled-outline-opacity )}:where(.button,button):not(.icon-button,.fab,.chip).filled-tonal:where(:hover,.hover){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip).filled-tonal:where(:active,.active){box-shadow:var(--md-sys-elevation-0)}:where(.button,button):not(.icon-button,.fab,.chip).filled-tonal:where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip).filled-tonal[disabled]{--tint-color: transparent;box-shadow:var(--md-sys-elevation-0);background-color:rgb(var(--md-sys-color-on-surface-rgb)/.12);color:rgb(var(--md-sys-color-on-surface-rgb)/.38)}:where(.button,button):not(.icon-button,.fab,.chip).outlined{border:var(--md-comp-outlined-button-outline-width) solid var(--md-sys-color-outline);box-shadow:var(--md-sys-elevation-0);height:var(--md-comp-outlined-button-container-height);--md-sys-comp-button-background-color: transparent;--md-sys-comp-button-color: var(--md-sys-color-primary);--md-comp-button-container-height: var( --md-comp-outlined-button-container-height );--state-hover-opacity: var( --md-comp-outlined-button-hover-state-layer-opacity );--state-focus-opacity: var( --md-comp-outlined-button-focus-state-layer-opacity );--state-active-opacity: var( --md-comp-outlined-button-pressed-state-layer-opacity );--state-disabled-opacity: var( --md-comp-outlined-button-disabled-unselected-outline-opacity );--state-outline-disabled-opacity: var( --md-comp-outlined-button-disabled-outline-opacity )}:where(.button,button):not(.icon-button,.fab,.chip).outlined :where(i,.material-icons){margin-left:-9px}:where(.button,button):not(.icon-button,.fab,.chip).outlined:where(:hover,.hover){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip).outlined:where(:active,.active){box-shadow:var(--md-sys-elevation-0)}:where(.button,button):not(.icon-button,.fab,.chip).outlined:where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip).outlined[disabled]{box-shadow:var(--md-sys-elevation-0);border-color:rgb(var(--md-sys-color-on-surface-rgb)/.12);color:rgb(var(--md-sys-color-on-surface-rgb)/.38)}:where(.button,button):not(.icon-button,.fab,.chip).elevated{box-shadow:var(--md-sys-elevation-1);height:var(--md-comp-elevated-button-container-height);--state-hover-opacity: var( --md-comp-elevated-button-hover-state-layer-opacity );--state-focus-opacity: var( --md-comp-elevated-button-focus-state-layer-opacity );--state-active-opacity: var( --md-comp-elevated-button-pressed-state-layer-opacity );--state-disabled-opacity: var( --md-comp-elevated-button-disabled-unselected-outline-opacity );--state-outline-disabled-opacity: var( --md-comp-elevated-button-disabled-outline-opacity )}:where(.button,button):not(.icon-button,.fab,.chip).elevated :where(i,.material-icons){font-size:var(--md-comp-elevated-button-with-icon-icon-size)}:where(.button,button):not(.icon-button,.fab,.chip).elevated:where(:hover,.hover){box-shadow:var(--md-sys-elevation-3)}:where(.button,button):not(.icon-button,.fab,.chip).elevated:where(:active,.active){box-shadow:var(--md-sys-elevation-1)}:where(.button,button):not(.icon-button,.fab,.chip).elevated:where(:focus,.focus):not(:active){box-shadow:var(--md-sys-elevation-2)}:where(.button,button):not(.icon-button,.fab,.chip).elevated[disabled]{box-shadow:var(--md-sys-elevation-0);background-color:rgb(var(--md-sys-color-on-surface-rgb)/var(--md-comp-elevated-button-disabled-container-opacity));color:rgb(var(--md-sys-color-on-surface-rgb)/var(--md-comp-elevated-button-disabled-label-text-opacity))}.face-detector{padding-bottom:1rem}.face-detector .flex-section{display:none;flex:1}.face-detector #buttons-section{display:none;flex-direction:row;justify-content:center;margin:0 0 1rem}.face-detector #buttons{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}.face-detector #canvas-section{display:flex;flex-direction:row;justify-content:center}.face-detector #loading-section{min-width:unset;max-width:21rem;text-align:center}.face-detector #loading{display:flex;justify-content:center;margin-bottom:1rem;pointer-events:none;width:100%}.face-detector button{margin:.5rem}.face-detector canvas{display:none;background-color:var(--face-detector-canvas-background-color, transparent);width:var(--face-detector-canvas-width, 100%);height:var(--face-detector-canvas-height, auto)}.face-detector video{display:none;width:var(--face-detector-video-width, 100%);height:var(--face-detector-video-height, auto)}@media screen and (min-width: 859px){.face-detector .flex-section{display:flex}.face-detector #loading-section{min-width:21rem;max-width:unset}}
`],encapsulation:3})};var s4=class r{static \u0275fac=function(t){return new(t||r)};static \u0275cmp=Hd({type:r,selectors:[["x-about"]],decls:37,vars:1,consts:[["x-section-generic",""],[3,"routerLink"],["href","https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps"],["href","https://angular.dev/ecosystem/service-workers/app-shell"],["href","https://angular.dev/guide/prerendering"],["href","https://angular.dev/guide/routing/common-router-tasks#lazy-loading"],["href","https://github.com/kherrick/apps"],["href","https://github.com/"],["href","https://angular.dev/"],["href","https://github.com/tensorflow/tfjs/tree/master/tfjs-backend-wasm"],["href","https://github.com/tensorflow/tfjs-models/tree/master/blazeface"]],template:function(t,n){t&1&&(Qn(0,"section",0)(1,"article")(2,"p")(3,"a",1),$e(4,"Apps"),Rn(),$e(5," is a "),Qn(6,"a",2),$e(7," progressive web app "),Rn(),$e(8," that aims to adhere to the "),Qn(9,"a",3),$e(10,"App Shell model"),Rn(),$e(11,". The primary routes are "),Qn(12,"a",4),$e(13,"prerendered"),Rn(),$e(14," as static HTML during the build process and are "),Qn(15,"a",5),$e(16," loaded lazily"),Rn(),$e(17," at runtime to ensure a smaller client-side JavaScript bundle. The "),Qn(18,"a",6),$e(19,"source code"),Rn(),$e(20," is hosted on "),Qn(21,"a",7),$e(22,"GitHub"),Rn(),$e(23," and comprises several components that operate within the "),Qn(24,"a",8),$e(25,"Angular"),Rn(),$e(26," framework. "),Rn(),Qn(27,"p"),$e(28," As an example, try the face-detector component below. It is built with TensorFlow.js using "),Qn(29,"a",9),$e(30,"a WebAssembly backend"),Rn(),$e(31,". The "),Qn(32,"a",10),$e(33,"blazeface model"),Rn(),$e(34," is used for face identification with a webcam or by dragging and dropping images into the drop zone (where the QR code is). All facial detection is completed client-side. "),Rn()(),Qn(35,"section"),tk(36,"x-face-detector"),Rn()()),t&2&&(JN(3),QN("routerLink","/"))},dependencies:[Kd,rk,Xb],styles:[`[x-section-generic]{margin:0 1rem}[x-section-generic] section,[x-section-generic] article{font-size:1rem}[x-section-generic] a,[x-section-generic] a:link,[x-section-generic] a:focus,[x-section-generic] a:hover,[x-section-generic] a:active,[x-section-generic] a:visited{color:var(--md-sys-color-on-surface)}[x-section-generic] :where(.button,button):not(.icon-button,.fab,.chip){background-color:var(--md-ref-palette-neutral50);color:var(--md-ref-palette-neutral90)}@media screen and (min-width: 859px){[x-section-generic] section,[x-section-generic] article{padding:0 1rem 1rem}}
`],encapsulation:3})};export{s4 as AboutComponent};
