import{a as o}from"./chunk-MCYXOSMX.js";import"./chunk-NYXDIFHX.js";import"./chunk-PKQDKLAP.js";import"./chunk-ATYHLBKA.js";import{Cb as e,Db as n,bc as t,fb as s}from"./chunk-PMUBQ4SH.js";import"./chunk-DAQOROHW.js";var a=class r{static \u0275fac=function(i){return new(i||r)};static \u0275cmp=s({type:r,selectors:[["x-slide-013"]],decls:14,vars:0,consts:[["header",""],["sub-header",""],["href","https://web.dev/articles/user-centric-performance-metrics#important-metrics"],["list",""],["href","https://jakearchibald.com/2016/streams-ftw/"]],template:function(i,l){i&1&&(e(0,"x-slide")(1,"h1",0),t(2,"Rendering on the Web"),n(),e(3,"h2",1)(4,"a",2),t(5,"Combinations - service workers + streams"),n()(),e(6,"ul",3)(7,"li"),t(8," 2016 - the year of web streams "),e(9,"blockquote")(10,"span"),t(11," Instead of serving an empty shell and letting JS populate it, I let the service worker construct a stream where the header comes from a cache, but the body comes from the network. It's like server-rendering, but in the service worker... "),e(12,"a",4),t(13,"*"),n()()()()()())},dependencies:[o],encapsulation:3})};export{a as Slide013Component};
