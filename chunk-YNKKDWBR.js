import{a}from"./chunk-MCYXOSMX.js";import"./chunk-NYXDIFHX.js";import"./chunk-PKQDKLAP.js";import"./chunk-ATYHLBKA.js";import{Cb as t,Db as i,bc as e,fb as s}from"./chunk-PMUBQ4SH.js";import"./chunk-DAQOROHW.js";var r=class n{static \u0275fac=function(o){return new(o||n)};static \u0275cmp=s({type:n,selectors:[["x-slide-024"]],decls:20,vars:0,consts:[["header",""],["sub-header",""],["href","https://web.dev/explore/notifications"],["list",""],["quote",""],["href","https://developer.mozilla.org/en-US/docs/Web/API/Push_API"],["href","https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API"],["href","https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Tutorials/js13kGames/Re-engageable_Notifications_Push#two_apis_one_goal"]],template:function(o,p){o&1&&(t(0,"x-slide")(1,"h1",0),e(2,"Progressive Web Apps"),i(),t(3,"h2",1)(4,"strong")(5,"a",2),e(6,"Push Notifications"),i()()(),t(7,"ul",3)(8,"li",4)(9,"blockquote")(10,"span"),e(11," The "),t(12,"a",5),e(13,"Push API"),i(),e(14," and "),t(15,"a",6),e(16,"Notifications API"),i(),e(17," are two separate APIs, but they work well together when you want to provide engaging functionality in your app. Push is used to deliver new content from the server to the app without any client-side intervention, and its operation is handled by the app's service worker. Notifications can be used by the service worker to show new information to the user, or at least alert them when something has been updated. "),t(18,"a",7),e(19,"*"),i()()()()()())},dependencies:[a],encapsulation:3})};export{r as Slide024Component};
